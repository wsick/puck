{"version":3,"sources":["puck.js","_version.ts","BrushMappingMode.ts","Color.ts","element/DirtyFlags.ts","Element.ts","Container.ts","Visual.ts","stencil/visual.ts","Ellipse.ts","enums.ts","Font.ts","FrameDebug.ts","GradientBrush.ts","GradientSpreadMethod.ts","GradientStop.ts","PuckArray.ts","GradientStops.ts","Image.ts","Layer.ts","LinearGradientBrush.ts","Path.ts","Points.ts","Polyline.ts","RadialGradientBrush.ts","Rectangle.ts","SolidColorBrush.ts","Stretch.ts","Text.ts","Timer.ts","element/ElementComposite.ts","container/ContainerComposite.ts","element/ElementState.ts","container/ContainerState.ts","engine/hit.ts","engine/process.ts","render/RenderContext.ts","engine/render.ts","fit/extents.ts","fit/transform.ts","font/toString.ts","image/ImageComposite.ts","image/ImageSource.ts","image/ImageState.ts","internal/WatchChanger.ts","linearGradient/interpolator.ts","linearGradient/metrics.ts","path/Bounder.ts","path/PathComposite.ts","visual/VisualState.ts","path/PathState.ts","polyline/PolylineState.ts","radialGradient/extender.ts","render/natural.ts","render/RenderContextSize.ts","render/zoom.ts","stencil/IStencil.ts","stencil/path.ts","text/TextState.ts","visual/VisualComposite.ts","walk/IWalker.ts","element/down/Processor.ts","container/down/Processor.ts","element/hit/Processor.ts","container/hit/Processor.ts","element/render/Processor.ts","container/render/Processor.ts","container/up/extents.ts","container/up/invalidate.ts","element/up/Processor.ts","element/up/newbounds.ts","container/up/Processor.ts","element/down/opacity.ts","element/down/transform.ts","element/down/visible.ts","element/render/narrow.ts","element/render/prepare.ts","element/render/should.ts","element/render/validate.ts","element/up/extents.ts","font/height/get.ts","font/height/measure.ts","font/width/measure.ts","image/down/Processor.ts","image/down/stretch.ts","image/hit/Processor.ts","image/up/extents.ts","image/up/Processor.ts","path/down/natural.ts","path/down/Processor.ts","path/down/stretch.ts","visual/hit/Processor.ts","path/hit/Processor.ts","visual/render/Processor.ts","path/render/Processor.ts","path/up/extents.ts","path/up/Processor.ts","polyfill/CanvasRenderingContext2D/backingStorePixelRatio.ts","polyfill/CanvasRenderingContext2D/ellipse.ts","polyfill/CanvasRenderingContext2D/isPointInStroke.ts","polyline/down/points.ts","polyline/down/Processor.ts","text/hit/Processor.ts","text/render/Processor.ts","text/up/font.ts","text/up/Processor.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","puck","version","BrushMappingMode","parse","c","s","parseHex","known","KnownColors","r","g","a","hex","match","AlphaRegex","exec","parseInt","NoAlphaRegex","Color","color","add","color2","subtract","multiply","factor","toString","Math","round","toHexString","ah","rh","gh","bh","toHexStringNoAlpha","equals","color1","lerp","start","end","fromRgba","fromHex","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","element","DirtyFlags","Element","state","composite","init","freeze","ElementState","reset","ElementComposite","processor","down","Processor","instance","up","render","hit","stencil","empty","defineProperty","get","opacity","set","value","taint","enumerable","configurable","visible","transformOrigin","x","transform","y","resetTransform","la","mat3","identity","setTransform","mat","copyTo","applyTransform","apply","Container","elements","container","ContainerState","ContainerComposite","walk","reverse","els","i","length","next","offset","Visual","_super","call","$fillwatch","$strokewatch","visual","VisualState","VisualComposite","fill","_this","unwatch","extents","invalidate","watch","stroke","padding","strokeThickness","draft","bag","size","rect","width","height","fillRect","strokeRect","ht","shrink","draw","ctx","raw","beginPath","closePath","PI2","PI","Ellipse","arguments","ellipseStencil","fr","rx","ry","ellipse","FillRule","PenLineJoin","PenLineCap","FontStyle","normal","italic","oblique","FontStretch","ultraCondensed","extraCondensed","condensed","semiCondensed","semiExpanded","expanded","extraExpanded","ultraExpanded","FontWeight","defaultFont","family","stretch","style","weight","font","FrameDebug","$onBeginProcess","$onEndProcess","$onBeginRender","$onEndRender","onBeginProcess","cb","onEndProcess","onBeginRender","onEndRender","beginProcess","endProcess","beginRender","endRender","GradientBrush","$cachedBrush","$cachedBounds","$changer","internal","WatchChanger","$stops","GradientStops","$spreadMethod","GradientSpreadMethod","pad","$mappingMode","relativeToBounds","on","onChanged","setup","region","equal","createBrush","toHtml5Object","spreadMethod","createPad","reflect","createReflect","repeat","createRepeat","mapPoint","point","mapped","mappingMode","GradientStop","PuckArray","$backing","clear","item","push","addMany","items","backing","insert","index","splice","insertMany","edit","oldItem","newItem","editAt","indexOf","remove","removeAt","iter","arrayIter","arr","done","paddedIter","min","max","tmp","slice","cur","unshift","Image","image","ImageState","ImageComposite","imageStencil","source","onSourceChanged","e","onSourceErrored","onSourceLoaded","uri","setNaturalSize","err","console","error","naturalWidth","naturalHeight","naturalSize","natural","comp","preapply","stretchTransform","Layer","$ctx","canvas","frameDebug","RenderContext","$timer","Timer","now","onTick","attach","activate","enable","deactivate","disable","process","engine","paint","fillStyle","addColorStop","grd","stop","LinearGradientBrush","$start","$end","mstart","mend","createLinearGradient","it","stops","result","createInterpolated","linearGradient","createRepeatInterpolator","createReflectInterpolator","interpolator","x0","y0","x1","y1","allStops","step","inter","interpolate","Path","path","PathState","PathComposite","bounder","setPath","fillRule","strokeLineCap","strokeLineJoin","strokeMiterLimit","Points","Polyline","polyline","PolylineState","points","closed","tmpCanvas","document","createElement","tmpCtx","getContext","epsilon","RadialGradientBrush","$center","$origin","$radius","data","getPointData","balanced","createRadialGradient","r1","fit","bounds","save","scale","sx","sy","globalCompositeOperation","inverted","extender","radialGradient","createExtender","createGradient","arc","pattern","createPattern","restore","mcenter","center","morigin","origin","mradius","rad","side","abs","Rectangle","rectangleStencil","SolidColorBrush","$color","Stretch","Text","text","TextState","callback","enabled","active","animate","request","onFrame","cancel","req","handle","can","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","$$dirt","none","hasDirt","newDirt","untaint","oldDirt","union","mapTransformOrigin","to","el","pos","hitlist","parent","doDown","ccomposites","walker","getWalker","doUp","pcomposite","EMPTY_DOWN_COMPOSITE","isTainted","dirt","getIEVersion","re","RegExp","navigator","userAgent","parseFloat","$1","caps","joins","$$transforms","currentTransform","defineProperties","writable","hasFillRule","RenderContextSize","appName","applyDpiRatio","ratio","dpiRatio","old","pop","m11","m12","m21","m22","dx","dy","ct","rotate","angle","createRotate","translate","clipRect","clip","fillEx","brush","msFillRule","evenodd","strokeEx","thickness","strokeStyle","lineWidth","isPointInStrokeEx","isPointInStroke","setStrokeExtras","lineCap","lineJoin","miterLimit","inregion","curregion","extents_1","calc","isEmpty","fitter","fits","final","uniform","uniformToFill","transform_1","createTranslate","smin","smax","font_1","ImageSource","$el","$watchers","onerror","onErrored","onload","onLoaded","src","drawImage","watcher","change","load","ind","watchers","getEffectiveStretch","first","last","dir","calcMetrics","numSteps","stepSize","norm","W","E","N","S","NW","SW","NE","SE","maxX","maxY","path_1","FillBounds","curve","StrokeBounds","Bounder","$path","$filled","$stroked","$pars","strokeDashArray","strokeDashCap","Flat","strokeDashOffset","strokeEndLineCap","Miter","strokeStartLineCap","getPath","pars","getFillRect","dest","box","l","t","getStrokeRect","stroked","filled","setStroke","ensure","flat","miter","started","rstep","reached","ext","r0","exceedBounds","cx","cy","radius","ne","len","nw","sw","se","x2","y2","sqrt","getNaturalCanvasSize","zoomFactor","zoom","offsetWidth","offsetHeight","$$ctx","$$desiredWidth","$$desiredHeight","$$changed","$$lastDpiRatio","devicePixelRatio","backingStorePixelRatio","desired","$adjustCanvas","queueResize","commitResize","updateDpiRatio","desiredWidth","desiredHeight","paintWidth","paintHeight","zoom_1","ie","screen","frames","deviceXDPI","systemXDPI","chrome","memoizeSvg","svg","body","createElementNS","setAttribute","appendChild","position","left","currentScale","f","EMPTY_WALKER","vec2","prehit","inside","localpos","transformVec2","containsVec2","sbag","SkipResult","prerender","post","postrender","validate","should","prepare","narrow","all","createStencilBag","oldExtents","ccomps","newbounds","childPaint","newOpacity","oldTransform","xo","newVisible","roundOut","intersection","grow","font_2","height_1","serial","heights","measure","cache","misses","hits","font_3","dummy","createTextNode","display","font_4","measureText","oldStretchTransform","oldNatural","activeFill","activeStroke","transformLocal","px","py","isPointInPath","path_2","CanvasRenderingContext2D","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","moveTo","lineTo","isFirefox","test","paintRegion","noStroke","textAlign","textBaseline","fillText","strokeText","oldWidth","oldHeight"],"mappings":"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","file":"puck.min.js","sourcesContent":["var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar puck;\n(function (puck) {\n    puck.version = '0.1.0';\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    (function (BrushMappingMode) {\n        BrushMappingMode[BrushMappingMode[\"relativeToBounds\"] = 0] = \"relativeToBounds\";\n        BrushMappingMode[BrushMappingMode[\"absolute\"] = 1] = \"absolute\";\n    })(puck.BrushMappingMode || (puck.BrushMappingMode = {}));\n    var BrushMappingMode = puck.BrushMappingMode;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var NoAlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\n    var AlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\n    var Color = (function () {\n        function Color(color) {\n            this.r = 0;\n            this.g = 0;\n            this.b = 0;\n            this.a = 1.0;\n            if (color instanceof Color) {\n                this.r = color.r;\n                this.g = color.g;\n                this.b = color.b;\n                this.a = color.a;\n            }\n            else if (typeof color === \"string\") {\n                parse(this, color);\n            }\n        }\n        Color.prototype.add = function (color2) {\n            var c = new Color();\n            c.r = this.r + color2.r;\n            c.g = this.g + color2.g;\n            c.b = this.b + color2.b;\n            c.a = this.a + color2.a;\n            return c;\n        };\n        Color.prototype.subtract = function (color2) {\n            var c = new Color();\n            c.r = this.r - color2.r;\n            c.g = this.g - color2.g;\n            c.b = this.b - color2.b;\n            c.a = this.a - color2.a;\n            return c;\n        };\n        Color.prototype.multiply = function (factor) {\n            var c = new Color();\n            c.r = this.r * factor;\n            c.g = this.g * factor;\n            c.b = this.b * factor;\n            c.a = this.a * factor;\n            return c;\n        };\n        Color.prototype.toString = function () {\n            var r = Math.round(this.r) || 0;\n            var g = Math.round(this.g) || 0;\n            var b = Math.round(this.b) || 0;\n            var a = this.a || 0;\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n        };\n        Color.prototype.toHexString = function () {\n            var ah = (this.a * 255).toString(16), rh = this.r.toString(16), gh = this.g.toString(16), bh = this.b.toString(16);\n            return \"#\" + ah + rh + gh + bh;\n        };\n        Color.prototype.toHexStringNoAlpha = function () {\n            var rh = this.r.toString(16), gh = this.g.toString(16), bh = this.b.toString(16);\n            return \"#\" + rh + gh + bh;\n        };\n        Color.equals = function (color1, color2) {\n            if (!color1) {\n                return !color2;\n            }\n            if (!color2) {\n                return false;\n            }\n            return color1.r === color2.r\n                && color1.g === color2.g\n                && color1.b === color2.b\n                && color1.a === color2.a;\n        };\n        Color.lerp = function (start, end, p) {\n            var c = new Color();\n            c.r = start.r + (end.r - start.r) * p;\n            c.g = start.g + (end.g - start.g) * p;\n            c.b = start.b + (end.b - start.b) * p;\n            c.a = start.a + (end.a - start.a) * p;\n            return c;\n        };\n        Color.fromRgba = function (r, g, b, a) {\n            var c = new Color();\n            c.r = r;\n            c.g = g;\n            c.b = b;\n            c.a = a;\n            return c;\n        };\n        Color.fromHex = function (hex) {\n            var c = new Color();\n            parseHex(c, hex);\n            return c;\n        };\n        return Color;\n    }());\n    puck.Color = Color;\n    puck.KnownColors = {\n        AliceBlue: Color.fromHex(\"#FFF0F8FF\"),\n        AntiqueWhite: Color.fromHex(\"#FFFAEBD7\"),\n        Aqua: Color.fromHex(\"#FF00FFFF\"),\n        Aquamarine: Color.fromHex(\"#FF7FFFD4\"),\n        Azure: Color.fromHex(\"#FFF0FFFF\"),\n        Beige: Color.fromHex(\"#FFF5F5DC\"),\n        Bisque: Color.fromHex(\"#FFFFE4C4\"),\n        Black: Color.fromHex(\"#FF000000\"),\n        BlanchedAlmond: Color.fromHex(\"#FFFFEBCD\"),\n        Blue: Color.fromHex(\"#FF0000FF\"),\n        BlueViolet: Color.fromHex(\"#FF8A2BE2\"),\n        Brown: Color.fromHex(\"#FFA52A2A\"),\n        BurlyWood: Color.fromHex(\"#FFDEB887\"),\n        CadetBlue: Color.fromHex(\"#FF5F9EA0\"),\n        Chartreuse: Color.fromHex(\"#FF7FFF00\"),\n        Chocolate: Color.fromHex(\"#FFD2691E\"),\n        Coral: Color.fromHex(\"#FFFF7F50\"),\n        CornflowerBlue: Color.fromHex(\"#FF6495ED\"),\n        Cornsilk: Color.fromHex(\"#FFFFF8DC\"),\n        Crimson: Color.fromHex(\"#FFDC143C\"),\n        Cyan: Color.fromHex(\"#FF00FFFF\"),\n        DarkBlue: Color.fromHex(\"#FF00008B\"),\n        DarkCyan: Color.fromHex(\"#FF008B8B\"),\n        DarkGoldenrod: Color.fromHex(\"#FFB8860B\"),\n        DarkGray: Color.fromHex(\"#FFA9A9A9\"),\n        DarkGreen: Color.fromHex(\"#FF006400\"),\n        DarkKhaki: Color.fromHex(\"#FFBDB76B\"),\n        DarkMagenta: Color.fromHex(\"#FF8B008B\"),\n        DarkOliveGreen: Color.fromHex(\"#FF556B2F\"),\n        DarkOrange: Color.fromHex(\"#FFFF8C00\"),\n        DarkOrchid: Color.fromHex(\"#FF9932CC\"),\n        DarkRed: Color.fromHex(\"#FF8B0000\"),\n        DarkSalmon: Color.fromHex(\"#FFE9967A\"),\n        DarkSeaGreen: Color.fromHex(\"#FF8FBC8F\"),\n        DarkSlateBlue: Color.fromHex(\"#FF483D8B\"),\n        DarkSlateGray: Color.fromHex(\"#FF2F4F4F\"),\n        DarkTurquoise: Color.fromHex(\"#FF00CED1\"),\n        DarkViolet: Color.fromHex(\"#FF9400D3\"),\n        DeepPink: Color.fromHex(\"#FFFF1493\"),\n        DeepSkyBlue: Color.fromHex(\"#FF00BFFF\"),\n        DimGray: Color.fromHex(\"#FF696969\"),\n        DodgerBlue: Color.fromHex(\"#FF1E90FF\"),\n        Firebrick: Color.fromHex(\"#FFB22222\"),\n        FloralWhite: Color.fromHex(\"#FFFFFAF0\"),\n        ForestGreen: Color.fromHex(\"#FF228B22\"),\n        Fuchsia: Color.fromHex(\"#FFFF00FF\"),\n        Gainsboro: Color.fromHex(\"#FFDCDCDC\"),\n        GhostWhite: Color.fromHex(\"#FFF8F8FF\"),\n        Gold: Color.fromHex(\"#FFFFD700\"),\n        Goldenrod: Color.fromHex(\"#FFDAA520\"),\n        Gray: Color.fromHex(\"#FF808080\"),\n        Green: Color.fromHex(\"#FF008000\"),\n        GreenYellow: Color.fromHex(\"#FFADFF2F\"),\n        Honeydew: Color.fromHex(\"#FFF0FFF0\"),\n        HotPink: Color.fromHex(\"#FFFF69B4\"),\n        IndianRed: Color.fromHex(\"#FFCD5C5C\"),\n        Indigo: Color.fromHex(\"#FF4B0082\"),\n        Ivory: Color.fromHex(\"#FFFFFFF0\"),\n        Khaki: Color.fromHex(\"#FFF0E68C\"),\n        Lavender: Color.fromHex(\"#FFE6E6FA\"),\n        LavenderBlush: Color.fromHex(\"#FFFFF0F5\"),\n        LawnGreen: Color.fromHex(\"#FF7CFC00\"),\n        LemonChiffon: Color.fromHex(\"#FFFFFACD\"),\n        LightBlue: Color.fromHex(\"#FFADD8E6\"),\n        LightCoral: Color.fromHex(\"#FFF08080\"),\n        LightCyan: Color.fromHex(\"#FFE0FFFF\"),\n        LightGoldenrodYellow: Color.fromHex(\"#FFFAFAD2\"),\n        LightGray: Color.fromHex(\"#FFD3D3D3\"),\n        LightGreen: Color.fromHex(\"#FF90EE90\"),\n        LightPink: Color.fromHex(\"#FFFFB6C1\"),\n        LightSalmon: Color.fromHex(\"#FFFFA07A\"),\n        LightSeaGreen: Color.fromHex(\"#FF20B2AA\"),\n        LightSkyBlue: Color.fromHex(\"#FF87CEFA\"),\n        LightSlateGray: Color.fromHex(\"#FF778899\"),\n        LightSteelBlue: Color.fromHex(\"#FFB0C4DE\"),\n        LightYellow: Color.fromHex(\"#FFFFFFE0\"),\n        Lime: Color.fromHex(\"#FF00FF00\"),\n        LimeGreen: Color.fromHex(\"#FF32CD32\"),\n        Linen: Color.fromHex(\"#FFFAF0E6\"),\n        Magenta: Color.fromHex(\"#FFFF00FF\"),\n        Maroon: Color.fromHex(\"#FF800000\"),\n        MediumAquamarine: Color.fromHex(\"#FF66CDAA\"),\n        MediumBlue: Color.fromHex(\"#FF0000CD\"),\n        MediumOrchid: Color.fromHex(\"#FFBA55D3\"),\n        MediumPurple: Color.fromHex(\"#FF9370DB\"),\n        MediumSeaGreen: Color.fromHex(\"#FF3CB371\"),\n        MediumSlateBlue: Color.fromHex(\"#FF7B68EE\"),\n        MediumSpringGreen: Color.fromHex(\"#FF00FA9A\"),\n        MediumTurquoise: Color.fromHex(\"#FF48D1CC\"),\n        MediumVioletRed: Color.fromHex(\"#FFC71585\"),\n        MidnightBlue: Color.fromHex(\"#FF191970\"),\n        MintCream: Color.fromHex(\"#FFF5FFFA\"),\n        MistyRose: Color.fromHex(\"#FFFFE4E1\"),\n        Moccasin: Color.fromHex(\"#FFFFE4B5\"),\n        NavajoWhite: Color.fromHex(\"#FFFFDEAD\"),\n        Navy: Color.fromHex(\"#FF000080\"),\n        OldLace: Color.fromHex(\"#FFFDF5E6\"),\n        Olive: Color.fromHex(\"#FF808000\"),\n        OliveDrab: Color.fromHex(\"#FF6B8E23\"),\n        Orange: Color.fromHex(\"#FFFFA500\"),\n        OrangeRed: Color.fromHex(\"#FFFF4500\"),\n        Orchid: Color.fromHex(\"#FFDA70D6\"),\n        PaleGoldenrod: Color.fromHex(\"#FFEEE8AA\"),\n        PaleGreen: Color.fromHex(\"#FF98FB98\"),\n        PaleTurquoise: Color.fromHex(\"#FFAFEEEE\"),\n        PaleVioletRed: Color.fromHex(\"#FFDB7093\"),\n        PapayaWhip: Color.fromHex(\"#FFFFEFD5\"),\n        PeachPuff: Color.fromHex(\"#FFFFDAB9\"),\n        Peru: Color.fromHex(\"#FFCD853F\"),\n        Pink: Color.fromHex(\"#FFFFC0CB\"),\n        Plum: Color.fromHex(\"#FFDDA0DD\"),\n        PowderBlue: Color.fromHex(\"#FFB0E0E6\"),\n        Purple: Color.fromHex(\"#FF800080\"),\n        Red: Color.fromHex(\"#FFFF0000\"),\n        RosyBrown: Color.fromHex(\"#FFBC8F8F\"),\n        RoyalBlue: Color.fromHex(\"#FF4169E1\"),\n        SaddleBrown: Color.fromHex(\"#FF8B4513\"),\n        Salmon: Color.fromHex(\"#FFFA8072\"),\n        SandyBrown: Color.fromHex(\"#FFF4A460\"),\n        SeaGreen: Color.fromHex(\"#FF2E8B57\"),\n        SeaShell: Color.fromHex(\"#FFFFF5EE\"),\n        Sienna: Color.fromHex(\"#FFA0522D\"),\n        Silver: Color.fromHex(\"#FFC0C0C0\"),\n        SkyBlue: Color.fromHex(\"#FF87CEEB\"),\n        SlateBlue: Color.fromHex(\"#FF6A5ACD\"),\n        SlateGray: Color.fromHex(\"#FF708090\"),\n        Snow: Color.fromHex(\"#FFFFFAFA\"),\n        SpringGreen: Color.fromHex(\"#FF00FF7F\"),\n        SteelBlue: Color.fromHex(\"#FF4682B4\"),\n        Tan: Color.fromHex(\"#FFD2B48C\"),\n        Teal: Color.fromHex(\"#FF008080\"),\n        Thistle: Color.fromHex(\"#FFD8BFD8\"),\n        Tomato: Color.fromHex(\"#FFFF6347\"),\n        Transparent: Color.fromHex(\"#00FFFFFF\"),\n        Turquoise: Color.fromHex(\"#FF40E0D0\"),\n        Violet: Color.fromHex(\"#FFEE82EE\"),\n        Wheat: Color.fromHex(\"#FFF5DEB3\"),\n        White: Color.fromHex(\"#FFFFFFFF\"),\n        WhiteSmoke: Color.fromHex(\"#FFF5F5F5\"),\n        Yellow: Color.fromHex(\"#FFFFFF00\"),\n        YellowGreen: Color.fromHex(\"#FF9ACD32\")\n    };\n    function parse(c, s) {\n        if (s[0] === \"#\") {\n            parseHex(c, s);\n        }\n        else {\n            var known = puck.KnownColors[s];\n            c.r = known.r;\n            c.g = known.g;\n            c.b = known.b;\n            c.a = known.a;\n        }\n    }\n    function parseHex(c, hex) {\n        var match;\n        if ((match = AlphaRegex.exec(hex)) != null) {\n            c.a = parseInt(match[1], 16) / 255.0;\n            c.r = parseInt(match[2], 16);\n            c.g = parseInt(match[3], 16);\n            c.b = parseInt(match[4], 16);\n        }\n        else if ((match = NoAlphaRegex.exec(hex)) != null) {\n            c.a = 1.0;\n            c.r = parseInt(match[1], 16);\n            c.g = parseInt(match[2], 16);\n            c.b = parseInt(match[3], 16);\n        }\n    }\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        (function (DirtyFlags) {\n            DirtyFlags[DirtyFlags[\"none\"] = 0] = \"none\";\n            DirtyFlags[DirtyFlags[\"opacity\"] = 1] = \"opacity\";\n            DirtyFlags[DirtyFlags[\"visible\"] = 2] = \"visible\";\n            DirtyFlags[DirtyFlags[\"stretch\"] = 4] = \"stretch\";\n            DirtyFlags[DirtyFlags[\"transform\"] = 8] = \"transform\";\n            DirtyFlags[DirtyFlags[\"font\"] = 16] = \"font\";\n            DirtyFlags[DirtyFlags[\"padding\"] = 32] = \"padding\";\n            DirtyFlags[DirtyFlags[\"extents\"] = 64] = \"extents\";\n            DirtyFlags[DirtyFlags[\"newbounds\"] = 128] = \"newbounds\";\n            DirtyFlags[DirtyFlags[\"invalidate\"] = 256] = \"invalidate\";\n            DirtyFlags[DirtyFlags[\"down\"] = 15] = \"down\";\n            DirtyFlags[DirtyFlags[\"up\"] = 496] = \"up\";\n        })(element.DirtyFlags || (element.DirtyFlags = {}));\n        var DirtyFlags = element.DirtyFlags;\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Element = (function () {\n        function Element(state, composite) {\n            this.init(state, composite);\n            Object.freeze(this);\n        }\n        Element.prototype.init = function (state, composite) {\n            this.state = (state || new puck.element.ElementState()).reset();\n            this.composite = (composite || new puck.element.ElementComposite()).reset();\n            this.processor = {\n                down: puck.element.down.Processor.instance,\n                up: puck.element.up.Processor.instance,\n                render: puck.element.render.Processor.instance,\n                hit: puck.element.hit.Processor.instance,\n            };\n            this.stencil = puck.stencil.empty;\n        };\n        Object.defineProperty(Element.prototype, \"opacity\", {\n            get: function () {\n                return this.state.opacity;\n            },\n            set: function (value) {\n                if (this.state.opacity !== value) {\n                    this.state.opacity = value;\n                    this.composite.taint(DirtyFlags.opacity);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"visible\", {\n            get: function () {\n                return this.state.visible;\n            },\n            set: function (value) {\n                if (this.state.visible !== value) {\n                    this.state.visible = value;\n                    this.composite.taint(DirtyFlags.visible);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"transformOriginX\", {\n            get: function () {\n                return this.state.transformOrigin.x;\n            },\n            set: function (value) {\n                if (this.state.transformOrigin.x !== value) {\n                    this.state.transformOrigin.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"transformOriginY\", {\n            get: function () {\n                return this.state.transformOrigin.y;\n            },\n            set: function (value) {\n                if (this.state.transformOrigin.y !== value) {\n                    this.state.transformOrigin.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Element.prototype.resetTransform = function () {\n            la.mat3.identity(this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        Element.prototype.setTransform = function (mat) {\n            la.mat3.copyTo(mat, this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        Element.prototype.applyTransform = function (mat) {\n            la.mat3.apply(this.state.transform, mat);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        return Element;\n    }());\n    puck.Element = Element;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Container = (function () {\n        function Container(state, composite) {\n            this.init(state, composite);\n            Object.freeze(this);\n        }\n        Container.prototype.init = function (state, composite) {\n            this.elements = [];\n            this.state = (state || new puck.container.ContainerState()).reset();\n            this.composite = (composite || new puck.container.ContainerComposite()).reset();\n            this.processor = {\n                down: puck.container.down.Processor.instance,\n                up: puck.container.up.Processor.instance,\n                render: puck.container.render.Processor.instance,\n                hit: puck.container.hit.Processor.instance,\n            };\n        };\n        Container.prototype.walk = function (reverse) {\n            var els = this.elements;\n            var i = -1;\n            if (!reverse) {\n                return {\n                    next: function () {\n                        i++;\n                        return els[i];\n                    }\n                };\n            }\n            i = els.length;\n            return {\n                next: function () {\n                    i--;\n                    return els[i];\n                }\n            };\n        };\n        Object.defineProperty(Container.prototype, \"opacity\", {\n            get: function () {\n                return this.state.opacity;\n            },\n            set: function (value) {\n                if (this.state.opacity !== value) {\n                    this.state.opacity = value;\n                    this.composite.taint(DirtyFlags.opacity);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Container.prototype, \"visible\", {\n            get: function () {\n                return this.state.visible;\n            },\n            set: function (value) {\n                if (this.state.visible !== value) {\n                    this.state.visible = value;\n                    this.composite.taint(DirtyFlags.visible);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Container.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Container.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Container.prototype, \"transformOriginX\", {\n            get: function () {\n                return this.state.transformOrigin.x;\n            },\n            set: function (value) {\n                if (this.state.transformOrigin.x !== value) {\n                    this.state.transformOrigin.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Container.prototype, \"transformOriginY\", {\n            get: function () {\n                return this.state.transformOrigin.y;\n            },\n            set: function (value) {\n                if (this.state.transformOrigin.y !== value) {\n                    this.state.transformOrigin.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Container.prototype.resetTransform = function () {\n            la.mat3.identity(this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        Container.prototype.setTransform = function (mat) {\n            la.mat3.copyTo(mat, this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        Container.prototype.applyTransform = function (mat) {\n            la.mat3.apply(this.state.transform, mat);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        };\n        return Container;\n    }());\n    puck.Container = Container;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Visual = (function (_super) {\n        __extends(Visual, _super);\n        function Visual(state, composite) {\n            _super.call(this, state, composite);\n            this.$fillwatch = null;\n            this.$strokewatch = null;\n        }\n        Visual.prototype.init = function (state, composite) {\n            this.state = (state || new puck.visual.VisualState()).reset();\n            this.composite = (composite || new puck.visual.VisualComposite()).reset();\n            this.processor = {\n                down: puck.element.down.Processor.instance,\n                up: puck.element.up.Processor.instance,\n                render: puck.visual.render.Processor.instance,\n                hit: puck.visual.hit.Processor.instance,\n            };\n            this.stencil = puck.stencil.visual;\n        };\n        Object.defineProperty(Visual.prototype, \"fill\", {\n            get: function () { return this.state.fill; },\n            set: function (value) {\n                var _this = this;\n                if (this.$fillwatch) {\n                    this.$fillwatch.unwatch();\n                    this.$fillwatch = null;\n                }\n                if ((!value) === (!this.state.fill)) {\n                    this.composite.taint(DirtyFlags.extents).invalidate();\n                }\n                if (value !== this.state.fill) {\n                    this.state.fill = value;\n                    this.composite.invalidate();\n                }\n                if (value) {\n                    this.$fillwatch = value.watch(function () { return _this.composite.invalidate(); });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Visual.prototype, \"stroke\", {\n            get: function () { return this.state.stroke; },\n            set: function (value) {\n                var _this = this;\n                if (this.$strokewatch) {\n                    this.$strokewatch.unwatch();\n                    this.$strokewatch = null;\n                }\n                if ((!value) === (!this.state.stroke)) {\n                    this.composite.taint(DirtyFlags.padding).invalidate();\n                }\n                if (value !== this.state.stroke) {\n                    this.state.stroke = value;\n                    this.composite.invalidate();\n                }\n                if (value) {\n                    this.$strokewatch = value.watch(function () { return _this.composite.invalidate(); });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Visual.prototype, \"strokeThickness\", {\n            get: function () { return this.state.strokeThickness; },\n            set: function (value) {\n                if (value !== this.state.strokeThickness) {\n                    this.state.strokeThickness = value;\n                    this.composite.taint(DirtyFlags.padding);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Visual;\n    }(puck.Element));\n    puck.Visual = Visual;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var stencil;\n    (function (stencil) {\n        stencil.visual = {\n            draft: function (bag) {\n                var state = bag.state, size = state.size;\n                la.rect.init(0, 0, size.width, size.height, bag.fillRect);\n                la.rect.init(0, 0, size.width, size.height, bag.strokeRect);\n                if (state.stroke && state.strokeThickness > 0) {\n                    var ht = state.strokeThickness / 2;\n                    la.rect.shrink(bag.fillRect, la.padding.init(ht, ht, ht, ht));\n                }\n            },\n            draw: function (ctx, bag) {\n                ctx.raw.beginPath();\n                ctx.raw.closePath();\n            },\n        };\n    })(stencil = puck.stencil || (puck.stencil = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var PI2 = Math.PI * 2;\n    var Ellipse = (function (_super) {\n        __extends(Ellipse, _super);\n        function Ellipse() {\n            _super.apply(this, arguments);\n        }\n        Ellipse.prototype.init = function (state, composite) {\n            _super.prototype.init.call(this, state, composite);\n            this.stencil = ellipseStencil;\n        };\n        Object.defineProperty(Ellipse.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Ellipse.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Ellipse.prototype, \"width\", {\n            get: function () {\n                return this.state.size.width;\n            },\n            set: function (value) {\n                if (this.state.size.width !== value) {\n                    this.state.size.width = value;\n                    this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Ellipse.prototype, \"height\", {\n            get: function () {\n                return this.state.size.height;\n            },\n            set: function (value) {\n                if (this.state.size.height !== value) {\n                    this.state.size.height = value;\n                    this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Ellipse;\n    }(puck.Visual));\n    puck.Ellipse = Ellipse;\n    var ellipseStencil = {\n        draft: puck.stencil.visual.draft,\n        draw: function (ctx, bag) {\n            var fr = bag.fillRect;\n            if (fr.width <= 0 || fr.height <= 0) {\n                return;\n            }\n            var rx = fr.width / 2, ry = fr.height / 2;\n            var raw = ctx.raw;\n            raw.beginPath();\n            raw.ellipse(fr.x + rx, fr.y + ry, rx, ry, 0, 0, PI2, false);\n            raw.closePath();\n        }\n    };\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    (function (FillRule) {\n        FillRule[FillRule[\"evenodd\"] = 0] = \"evenodd\";\n        FillRule[FillRule[\"nonzero\"] = 1] = \"nonzero\";\n    })(puck.FillRule || (puck.FillRule = {}));\n    var FillRule = puck.FillRule;\n    (function (PenLineJoin) {\n        PenLineJoin[PenLineJoin[\"miter\"] = 0] = \"miter\";\n        PenLineJoin[PenLineJoin[\"bevel\"] = 1] = \"bevel\";\n        PenLineJoin[PenLineJoin[\"round\"] = 2] = \"round\";\n    })(puck.PenLineJoin || (puck.PenLineJoin = {}));\n    var PenLineJoin = puck.PenLineJoin;\n    (function (PenLineCap) {\n        PenLineCap[PenLineCap[\"flat\"] = 0] = \"flat\";\n        PenLineCap[PenLineCap[\"square\"] = 1] = \"square\";\n        PenLineCap[PenLineCap[\"round\"] = 2] = \"round\";\n        PenLineCap[PenLineCap[\"triangle\"] = 3] = \"triangle\";\n    })(puck.PenLineCap || (puck.PenLineCap = {}));\n    var PenLineCap = puck.PenLineCap;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    puck.FontStyle = {\n        normal: \"normal\",\n        italic: \"italic\",\n        oblique: \"oblique\"\n    };\n    puck.FontStretch = {\n        ultraCondensed: \"ultra-condensed\",\n        extraCondensed: \"extra-condensed\",\n        condensed: \"condensed\",\n        semiCondensed: \"semi-condensed\",\n        normal: \"normal\",\n        semiExpanded: \"semi-expanded\",\n        expanded: \"expanded\",\n        extraExpanded: \"extra-expanded\",\n        ultraExpanded: \"ultra-expanded\"\n    };\n    (function (FontWeight) {\n        FontWeight[FontWeight[\"thin\"] = 100] = \"thin\";\n        FontWeight[FontWeight[\"extraLight\"] = 200] = \"extraLight\";\n        FontWeight[FontWeight[\"light\"] = 300] = \"light\";\n        FontWeight[FontWeight[\"normal\"] = 400] = \"normal\";\n        FontWeight[FontWeight[\"medium\"] = 500] = \"medium\";\n        FontWeight[FontWeight[\"semiBold\"] = 600] = \"semiBold\";\n        FontWeight[FontWeight[\"bold\"] = 700] = \"bold\";\n        FontWeight[FontWeight[\"extraBold\"] = 800] = \"extraBold\";\n        FontWeight[FontWeight[\"black\"] = 900] = \"black\";\n        FontWeight[FontWeight[\"extraBlack\"] = 950] = \"extraBlack\";\n    })(puck.FontWeight || (puck.FontWeight = {}));\n    var FontWeight = puck.FontWeight;\n    puck.defaultFont = {\n        family: \"\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif\",\n        size: 14,\n        stretch: puck.FontStretch.normal,\n        style: puck.FontStyle.normal,\n        weight: FontWeight.normal,\n        toString: function () {\n            return puck.font.toString(puck.defaultFont);\n        },\n    };\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var FrameDebug = (function () {\n        function FrameDebug() {\n            this.$onBeginProcess = null;\n            this.$onEndProcess = null;\n            this.$onBeginRender = null;\n            this.$onEndRender = null;\n        }\n        FrameDebug.prototype.onBeginProcess = function (cb) {\n            this.$onBeginProcess = cb;\n            return this;\n        };\n        FrameDebug.prototype.onEndProcess = function (cb) {\n            this.$onEndProcess = cb;\n            return this;\n        };\n        FrameDebug.prototype.onBeginRender = function (cb) {\n            this.$onBeginRender = cb;\n            return this;\n        };\n        FrameDebug.prototype.onEndRender = function (cb) {\n            this.$onEndRender = cb;\n            return this;\n        };\n        FrameDebug.prototype.beginProcess = function () {\n            this.$onBeginProcess && this.$onBeginProcess();\n        };\n        FrameDebug.prototype.endProcess = function () {\n            this.$onEndProcess && this.$onEndProcess();\n        };\n        FrameDebug.prototype.beginRender = function () {\n            this.$onBeginRender && this.$onBeginRender();\n        };\n        FrameDebug.prototype.endRender = function () {\n            this.$onEndRender && this.$onEndRender();\n        };\n        return FrameDebug;\n    }());\n    puck.FrameDebug = FrameDebug;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var GradientBrush = (function () {\n        function GradientBrush() {\n            var _this = this;\n            this.$cachedBrush = null;\n            this.$cachedBounds = la.rect.init(0, 0, 0, 0);\n            this.$changer = new puck.internal.WatchChanger();\n            this.$stops = new puck.GradientStops();\n            this.$spreadMethod = puck.GradientSpreadMethod.pad;\n            this.$mappingMode = puck.BrushMappingMode.relativeToBounds;\n            this.$stops.watch(function () { return _this.$changer.on(); });\n        }\n        Object.defineProperty(GradientBrush.prototype, \"spreadMethod\", {\n            get: function () {\n                return this.$spreadMethod;\n            },\n            set: function (value) {\n                if (this.$spreadMethod !== value) {\n                    this.$spreadMethod = value;\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(GradientBrush.prototype, \"mappingMode\", {\n            get: function () {\n                return this.$mappingMode;\n            },\n            set: function (value) {\n                if (this.$mappingMode !== value) {\n                    this.$mappingMode = value;\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(GradientBrush.prototype, \"stops\", {\n            get: function () {\n                return this.$stops;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        GradientBrush.prototype.watch = function (onChanged) {\n            return this.$changer.watch(onChanged);\n        };\n        GradientBrush.prototype.setup = function (ctx, region) {\n            if (this.$cachedBrush && la.rect.equal(this.$cachedBounds, region))\n                return;\n            la.rect.copyTo(region, this.$cachedBounds);\n            this.$cachedBrush = this.createBrush(ctx, region);\n        };\n        GradientBrush.prototype.toHtml5Object = function () {\n            return this.$cachedBrush;\n        };\n        GradientBrush.prototype.createBrush = function (ctx, region) {\n            switch (this.spreadMethod) {\n                case puck.GradientSpreadMethod.pad:\n                    return this.createPad(ctx, region);\n                default:\n                case puck.GradientSpreadMethod.reflect:\n                    return this.createReflect(ctx, region);\n                case puck.GradientSpreadMethod.repeat:\n                    return this.createRepeat(ctx, region);\n            }\n        };\n        GradientBrush.prototype.mapPoint = function (region, point) {\n            var mapped = { x: point.x, y: point.y };\n            if (this.mappingMode === puck.BrushMappingMode.relativeToBounds) {\n                mapped.x *= region.width;\n                mapped.y *= region.height;\n            }\n            mapped.x += region.x;\n            mapped.y += region.y;\n            return mapped;\n        };\n        return GradientBrush;\n    }());\n    puck.GradientBrush = GradientBrush;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    (function (GradientSpreadMethod) {\n        GradientSpreadMethod[GradientSpreadMethod[\"pad\"] = 0] = \"pad\";\n        GradientSpreadMethod[GradientSpreadMethod[\"reflect\"] = 1] = \"reflect\";\n        GradientSpreadMethod[GradientSpreadMethod[\"repeat\"] = 2] = \"repeat\";\n    })(puck.GradientSpreadMethod || (puck.GradientSpreadMethod = {}));\n    var GradientSpreadMethod = puck.GradientSpreadMethod;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var GradientStop = (function () {\n        function GradientStop(color, offset) {\n            this.color = color;\n            this.offset = offset;\n            Object.freeze(this);\n        }\n        return GradientStop;\n    }());\n    puck.GradientStop = GradientStop;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var PuckArray = (function () {\n        function PuckArray() {\n            this.$backing = [];\n            this.$changer = new puck.internal.WatchChanger();\n        }\n        Object.defineProperty(PuckArray.prototype, \"length\", {\n            get: function () {\n                return this.$backing.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        PuckArray.prototype.clear = function () {\n            this.$backing.length = 0;\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.add = function (item) {\n            this.$backing.push(item);\n            Object.freeze(item);\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.addMany = function (items) {\n            var backing = this.$backing;\n            for (var i = 0; i < items.length; i++) {\n                Object.freeze(items[i]);\n            }\n            backing.push.apply(backing, items);\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.insert = function (index, item) {\n            this.$backing.splice(index, 0, item);\n            Object.freeze(item);\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.insertMany = function (index, items) {\n            for (var i = 0; i < items.length; i++) {\n                Object.freeze(items[i]);\n            }\n            var backing = this.$backing;\n            for (var i = items.length - 1; i >= 0; i--) {\n                backing.splice(index, 0, items[i]);\n            }\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.edit = function (oldItem, newItem) {\n            return this.editAt(this.$backing.indexOf(oldItem), newItem);\n        };\n        PuckArray.prototype.editAt = function (index, newItem) {\n            var backing = this.$backing;\n            if (index < 0 && index >= backing.length)\n                return this;\n            backing[index] = newItem;\n            Object.freeze(newItem);\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.remove = function (item) {\n            return this.removeAt(this.$backing.indexOf(item));\n        };\n        PuckArray.prototype.removeAt = function (index) {\n            var backing = this.$backing;\n            if (index < 0 && index >= backing.length)\n                return this;\n            backing.splice(index, 1);\n            this.$changer.on();\n            return this;\n        };\n        PuckArray.prototype.watch = function (onChanged) {\n            return this.$changer.watch(onChanged);\n        };\n        PuckArray.prototype.iter = function () {\n            return PuckArray.arrayIter(this.$backing);\n        };\n        PuckArray.arrayIter = function (arr) {\n            var i = -1;\n            return {\n                next: function () {\n                    i++;\n                    if (i >= arr.length)\n                        return { done: true };\n                    return { done: false, value: arr[i] };\n                }\n            };\n        };\n        return PuckArray;\n    }());\n    puck.PuckArray = PuckArray;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var GradientStops = (function (_super) {\n        __extends(GradientStops, _super);\n        function GradientStops() {\n            _super.apply(this, arguments);\n        }\n        GradientStops.prototype.paddedIter = function () {\n            var min = null;\n            var max = null;\n            var tmp = this.$backing.slice(0);\n            for (var i = 0; i < tmp.length; i++) {\n                var cur = tmp[i];\n                tmp.push(cur);\n                if (!min || cur.offset < min.offset)\n                    min = cur;\n                if (!max || cur.offset > max.offset)\n                    max = cur;\n            }\n            if (!!min)\n                tmp.unshift({ offset: 0, color: min.color });\n            if (!!max)\n                tmp.push({ offset: 1, color: max.color });\n            return puck.PuckArray.arrayIter(tmp);\n        };\n        return GradientStops;\n    }(puck.PuckArray));\n    puck.GradientStops = GradientStops;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Image = (function (_super) {\n        __extends(Image, _super);\n        function Image(state, composite) {\n            _super.call(this, state, composite);\n        }\n        Image.prototype.init = function (state, composite) {\n            var _this = this;\n            this.state = (state || new puck.image.ImageState()).reset();\n            this.composite = (composite || new puck.image.ImageComposite()).reset();\n            this.processor = {\n                down: puck.image.down.Processor.instance,\n                up: puck.image.up.Processor.instance,\n                render: puck.element.render.Processor.instance,\n                hit: puck.image.hit.Processor.instance,\n            };\n            this.stencil = imageStencil;\n            this.state.source.watch(function () { return _this.onSourceChanged(); }, function (e) { return _this.onSourceErrored(e); }, function () { return _this.onSourceLoaded(); });\n        };\n        Object.defineProperty(Image.prototype, \"sourceUri\", {\n            get: function () {\n                return this.state.source.uri;\n            },\n            set: function (value) {\n                this.state.source.uri = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Image.prototype, \"stretch\", {\n            get: function () {\n                return this.state.stretch;\n            },\n            set: function (value) {\n                if (this.state.stretch !== value) {\n                    this.state.stretch = value;\n                    this.composite.taint(DirtyFlags.stretch);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Image.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Image.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Image.prototype, \"width\", {\n            get: function () {\n                return this.state.size.width;\n            },\n            set: function (value) {\n                if (this.state.size.width !== value) {\n                    this.state.size.width = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Image.prototype, \"height\", {\n            get: function () {\n                return this.state.size.height;\n            },\n            set: function (value) {\n                if (this.state.size.height !== value) {\n                    this.state.size.height = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Image.prototype.onSourceChanged = function () {\n            this.setNaturalSize(0, 0);\n        };\n        Image.prototype.onSourceErrored = function (err) {\n            console.error(\"error loading image\", err);\n        };\n        Image.prototype.onSourceLoaded = function () {\n            var source = this.state.source;\n            this.setNaturalSize(source.naturalWidth, source.naturalHeight);\n        };\n        Image.prototype.setNaturalSize = function (width, height) {\n            var naturalSize = this.state.natural;\n            naturalSize.width = width;\n            naturalSize.height = height;\n            this.composite.taint(DirtyFlags.stretch | DirtyFlags.extents).invalidate();\n        };\n        return Image;\n    }(puck.Element));\n    puck.Image = Image;\n    var imageStencil = {\n        draft: function (bag) {\n        },\n        draw: function (ctx, bag) {\n            var state = bag.state, comp = bag.composite;\n            ctx.preapply(comp.stretchTransform);\n            state.source.draw(ctx.raw);\n        },\n    };\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var Layer = (function (_super) {\n        __extends(Layer, _super);\n        function Layer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(Layer.prototype, \"width\", {\n            get: function () {\n                return this.$ctx.raw.canvas.width;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Layer.prototype, \"height\", {\n            get: function () {\n                return this.$ctx.raw.canvas.height;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Layer.prototype.init = function (state, composite) {\n            var _this = this;\n            _super.prototype.init.call(this, state, composite);\n            this.frameDebug = new puck.FrameDebug();\n            this.$ctx = new puck.render.RenderContext();\n            this.$timer = new puck.Timer(function (now) { return _this.onTick(now); });\n        };\n        Layer.prototype.attach = function (ctx) {\n            this.$ctx.init(ctx);\n            return this;\n        };\n        Layer.prototype.activate = function () {\n            this.$timer.enable();\n            return this;\n        };\n        Layer.prototype.deactivate = function () {\n            this.$timer.disable();\n            return this;\n        };\n        Layer.prototype.process = function () {\n            this.frameDebug.beginProcess();\n            puck.engine.process(this);\n            this.frameDebug.endProcess();\n            return this;\n        };\n        Layer.prototype.render = function () {\n            var ctx = this.$ctx, paint = this.composite.paint, raw = ctx.raw;\n            this.frameDebug.beginRender();\n            raw.fillStyle = \"#ffffff\";\n            raw.fillRect(paint.x, paint.y, paint.width, paint.height);\n            puck.engine.render(this, ctx, paint);\n            this.frameDebug.endRender();\n            return this;\n        };\n        Layer.prototype.onTick = function (now) {\n            this.process()\n                .render();\n        };\n        return Layer;\n    }(puck.Container));\n    puck.Layer = Layer;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var LinearGradientBrush = (function (_super) {\n        __extends(LinearGradientBrush, _super);\n        function LinearGradientBrush() {\n            _super.apply(this, arguments);\n            this.$start = { x: 0, y: 0 };\n            this.$end = { x: 0, y: 1 };\n        }\n        Object.defineProperty(LinearGradientBrush.prototype, \"start\", {\n            get: function () {\n                return this.$start;\n            },\n            set: function (value) {\n                if (this.$start !== value) {\n                    this.$start = value;\n                    Object.freeze(value);\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LinearGradientBrush.prototype, \"end\", {\n            get: function () {\n                return this.$end;\n            },\n            set: function (value) {\n                if (this.$end !== value) {\n                    this.$end = value;\n                    Object.freeze(value);\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        LinearGradientBrush.prototype.createPad = function (ctx, region) {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            var grd = ctx.createLinearGradient(mstart.x, mstart.y, mend.x, mend.y);\n            for (var it = this.stops.iter(), result = it.next(); !result.done; result = it.next()) {\n                addColorStop(grd, result.value);\n            }\n            return grd;\n        };\n        LinearGradientBrush.prototype.createReflect = function (ctx, region) {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            return this.createInterpolated(ctx, puck.linearGradient.createRepeatInterpolator(mstart, mend, region));\n        };\n        LinearGradientBrush.prototype.createRepeat = function (ctx, region) {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            return this.createInterpolated(ctx, puck.linearGradient.createReflectInterpolator(mstart, mend, region));\n        };\n        LinearGradientBrush.prototype.createInterpolated = function (ctx, interpolator) {\n            var grd = ctx.createLinearGradient(interpolator.x0, interpolator.y0, interpolator.x1, interpolator.y1);\n            var allStops = this.stops.paddedIter();\n            for (; interpolator.step();) {\n                for (var result = allStops.next(); !result.done; result = allStops.next()) {\n                    var cur = result.value;\n                    var inter = {\n                        color: cur.color,\n                        offset: interpolator.interpolate(cur.offset)\n                    };\n                    if (inter.offset >= 0 && inter.offset <= 1)\n                        addColorStop(grd, inter);\n                }\n            }\n            return grd;\n        };\n        return LinearGradientBrush;\n    }(puck.GradientBrush));\n    puck.LinearGradientBrush = LinearGradientBrush;\n    function addColorStop(grd, stop) {\n        var offset = Math.min(1.0, Math.max(0.0, stop.offset));\n        var color = stop.color.toString();\n        grd.addColorStop(offset, color);\n    }\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Path = (function (_super) {\n        __extends(Path, _super);\n        function Path(state, composite) {\n            _super.call(this, state, composite);\n        }\n        Path.prototype.init = function (state, composite) {\n            this.state = (state || new puck.path.PathState()).reset();\n            this.composite = (composite || new puck.path.PathComposite()).reset();\n            this.processor = {\n                down: puck.path.down.Processor.instance,\n                up: puck.path.up.Processor.instance,\n                render: puck.path.render.Processor.instance,\n                hit: puck.path.hit.Processor.instance,\n            };\n            this.stencil = puck.stencil.path;\n        };\n        Object.defineProperty(Path.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"width\", {\n            get: function () {\n                return this.state.size.width;\n            },\n            set: function (value) {\n                if (this.state.size.width !== value) {\n                    this.state.size.width = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"height\", {\n            get: function () {\n                return this.state.size.height;\n            },\n            set: function (value) {\n                if (this.state.size.height !== value) {\n                    this.state.size.height = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"stretch\", {\n            get: function () {\n                return this.state.stretch;\n            },\n            set: function (value) {\n                if (this.state.stretch !== value) {\n                    this.state.stretch = value;\n                    this.composite.taint(DirtyFlags.stretch);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"path\", {\n            get: function () {\n                return this.state.path;\n            },\n            set: function (value) {\n                if (this.state.path !== value) {\n                    this.state.path = value;\n                    this.composite.bounder.setPath(value);\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"fillRule\", {\n            get: function () {\n                return this.state.fillRule;\n            },\n            set: function (value) {\n                if (this.state.fillRule !== value) {\n                    this.state.fillRule = value;\n                    this.composite.invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"strokeLineCap\", {\n            get: function () {\n                return this.state.strokeLineCap;\n            },\n            set: function (value) {\n                if (this.state.strokeLineCap !== value) {\n                    this.state.strokeLineCap = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"strokeLineJoin\", {\n            get: function () {\n                return this.state.strokeLineJoin;\n            },\n            set: function (value) {\n                if (this.state.strokeLineJoin !== value) {\n                    this.state.strokeLineJoin = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Path.prototype, \"strokeMiterLimit\", {\n            get: function () {\n                return this.state.strokeMiterLimit;\n            },\n            set: function (value) {\n                if (this.state.strokeMiterLimit !== value) {\n                    this.state.strokeMiterLimit = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Path;\n    }(puck.Visual));\n    puck.Path = Path;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var Points = (function (_super) {\n        __extends(Points, _super);\n        function Points() {\n            _super.apply(this, arguments);\n        }\n        return Points;\n    }(puck.PuckArray));\n    puck.Points = Points;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Polyline = (function (_super) {\n        __extends(Polyline, _super);\n        function Polyline(state, composite) {\n            _super.call(this, state, composite);\n        }\n        Polyline.prototype.init = function (state, composite) {\n            var _this = this;\n            this.state = (state || new puck.polyline.PolylineState()).reset();\n            this.composite = (composite || new puck.path.PathComposite()).reset();\n            this.processor = {\n                down: puck.polyline.down.Processor.instance,\n                up: puck.path.up.Processor.instance,\n                render: puck.path.render.Processor.instance,\n                hit: puck.path.hit.Processor.instance,\n            };\n            this.stencil = puck.stencil.path;\n            this.state.points.watch(function () {\n                if (_this.state.path)\n                    _this.state.path.reset();\n            });\n        };\n        Object.defineProperty(Polyline.prototype, \"points\", {\n            get: function () {\n                return this.state.points;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"closed\", {\n            get: function () {\n                return this.closed;\n            },\n            set: function (value) {\n                if (this.state.closed !== value) {\n                    this.state.closed = value;\n                    this.composite.invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"width\", {\n            get: function () {\n                return this.state.size.width;\n            },\n            set: function (value) {\n                if (this.state.size.width !== value) {\n                    this.state.size.width = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"height\", {\n            get: function () {\n                return this.state.size.height;\n            },\n            set: function (value) {\n                if (this.state.size.height !== value) {\n                    this.state.size.height = value;\n                    this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"stretch\", {\n            get: function () {\n                return this.state.stretch;\n            },\n            set: function (value) {\n                if (this.state.stretch !== value) {\n                    this.state.stretch = value;\n                    this.composite.taint(DirtyFlags.stretch);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"fillRule\", {\n            get: function () {\n                return this.state.fillRule;\n            },\n            set: function (value) {\n                if (this.state.fillRule !== value) {\n                    this.state.fillRule = value;\n                    this.composite.invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"strokeLineCap\", {\n            get: function () {\n                return this.state.strokeLineCap;\n            },\n            set: function (value) {\n                if (this.state.strokeLineCap !== value) {\n                    this.state.strokeLineCap = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"strokeLineJoin\", {\n            get: function () {\n                return this.state.strokeLineJoin;\n            },\n            set: function (value) {\n                if (this.state.strokeLineJoin !== value) {\n                    this.state.strokeLineJoin = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Polyline.prototype, \"strokeMiterLimit\", {\n            get: function () {\n                return this.state.strokeMiterLimit;\n            },\n            set: function (value) {\n                if (this.state.strokeMiterLimit !== value) {\n                    this.state.strokeMiterLimit = value;\n                    this.composite\n                        .taint(DirtyFlags.padding)\n                        .invalidate();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Polyline;\n    }(puck.Visual));\n    puck.Polyline = Polyline;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var tmpCanvas = document.createElement('canvas');\n    var tmpCtx = tmpCanvas.getContext('2d');\n    var epsilon = 1E-10;\n    var RadialGradientBrush = (function (_super) {\n        __extends(RadialGradientBrush, _super);\n        function RadialGradientBrush() {\n            _super.apply(this, arguments);\n            this.$center = { x: 0.5, y: 0.5 };\n            this.$origin = { x: 0.5, y: 0.5 };\n            this.$radius = { x: 0.5, y: 0.5 };\n        }\n        Object.defineProperty(RadialGradientBrush.prototype, \"center\", {\n            get: function () {\n                return this.$center;\n            },\n            set: function (value) {\n                if (this.$center !== value) {\n                    this.$center = value;\n                    Object.freeze(value);\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RadialGradientBrush.prototype, \"origin\", {\n            get: function () {\n                return this.$origin;\n            },\n            set: function (value) {\n                if (this.$origin !== value) {\n                    this.$origin = value;\n                    Object.freeze(value);\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RadialGradientBrush.prototype, \"radiusX\", {\n            get: function () {\n                return this.$radius.x;\n            },\n            set: function (value) {\n                if (this.$radius.x !== value) {\n                    this.$radius.x = value;\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RadialGradientBrush.prototype, \"radiusY\", {\n            get: function () {\n                return this.$radius.y;\n            },\n            set: function (value) {\n                if (this.$radius.y !== value) {\n                    this.$radius.y = value;\n                    this.$changer.on();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RadialGradientBrush.prototype.createPad = function (ctx, region) {\n            var data = this.getPointData(region);\n            var grd = (!data.balanced ? tmpCtx : ctx).createRadialGradient(data.x0, data.y0, 0, data.x1, data.y1, data.r1);\n            for (var it = this.stops.iter(), result = it.next(); !result.done; result = it.next()) {\n                addColorStop(grd, result.value);\n            }\n            return this.fit(ctx, grd, data, region);\n        };\n        RadialGradientBrush.prototype.createReflect = function (ctx, region) {\n            var data = this.getPointData(region);\n            return this.createInterpolated(data, region, false);\n        };\n        RadialGradientBrush.prototype.createRepeat = function (ctx, region) {\n            var data = this.getPointData(region);\n            return this.createInterpolated(data, region, true);\n        };\n        RadialGradientBrush.prototype.createInterpolated = function (data, bounds, reflect) {\n            tmpCanvas.width = bounds.width;\n            tmpCanvas.height = bounds.height;\n            tmpCtx.save();\n            if (!data.balanced)\n                tmpCtx.scale(data.sx, data.sy);\n            tmpCtx.globalCompositeOperation = \"destination-over\";\n            var inverted = false;\n            var allStops = this.stops.paddedIter();\n            for (var extender = puck.radialGradient.createExtender(data, bounds); extender.step(); inverted = !inverted) {\n                var grd = extender.createGradient(tmpCtx);\n                for (var result = allStops.next(); !result.done; result = allStops.next()) {\n                    var cur = result.value;\n                    var inter = {\n                        color: cur.color,\n                        offset: (reflect && inverted) ? 1 - cur.offset : cur.offset,\n                    };\n                    addColorStop(grd, inter);\n                }\n                tmpCtx.fillStyle = grd;\n                tmpCtx.beginPath();\n                tmpCtx.arc(extender.x1, extender.y1, extender.r1, 0, 2 * Math.PI, false);\n                tmpCtx.closePath();\n                tmpCtx.fill();\n            }\n            var pattern = tmpCtx.createPattern(tmpCanvas, \"no-repeat\");\n            tmpCtx.restore();\n            return pattern;\n        };\n        RadialGradientBrush.prototype.getPointData = function (bounds) {\n            var mcenter = this.mapPoint(bounds, this.center);\n            var morigin = this.mapPoint(bounds, this.origin);\n            var mradius = this.mapPoint(bounds, this.$radius);\n            var rad = Math.max(mradius.x, mradius.y);\n            var side = Math.max(bounds.width, bounds.height), sx = bounds.width / side, sy = bounds.height / side;\n            return {\n                x0: morigin.x / sx,\n                y0: morigin.y / sy,\n                x1: mcenter.x / sx,\n                y1: mcenter.y / sy,\n                r1: rad,\n                side: side,\n                sx: bounds.width / side,\n                sy: bounds.height / side,\n                balanced: Math.abs(mradius.x - mradius.y) < epsilon\n            };\n        };\n        RadialGradientBrush.prototype.fit = function (ctx, fill, data, bounds) {\n            if (data.balanced)\n                return fill;\n            tmpCanvas.width = bounds.width;\n            tmpCanvas.height = bounds.height;\n            tmpCtx.save();\n            tmpCtx.scale(data.sx, data.sy);\n            tmpCtx.fillStyle = fill;\n            tmpCtx.fillRect(0, 0, data.side, data.side);\n            var pattern = ctx.createPattern(tmpCanvas, \"no-repeat\");\n            tmpCtx.restore();\n            return pattern;\n        };\n        return RadialGradientBrush;\n    }(puck.GradientBrush));\n    puck.RadialGradientBrush = RadialGradientBrush;\n    function addColorStop(grd, stop) {\n        var offset = Math.min(1.0, Math.max(0.0, stop.offset));\n        var color = stop.color.toString();\n        grd.addColorStop(offset, color);\n    }\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Rectangle = (function (_super) {\n        __extends(Rectangle, _super);\n        function Rectangle() {\n            _super.apply(this, arguments);\n        }\n        Rectangle.prototype.init = function (state, composite) {\n            _super.prototype.init.call(this, state, composite);\n            this.stencil = rectangleStencil;\n        };\n        Object.defineProperty(Rectangle.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Rectangle.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Rectangle.prototype, \"width\", {\n            get: function () {\n                return this.state.size.width;\n            },\n            set: function (value) {\n                if (this.state.size.width !== value) {\n                    this.state.size.width = value;\n                    this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Rectangle.prototype, \"height\", {\n            get: function () {\n                return this.state.size.height;\n            },\n            set: function (value) {\n                if (this.state.size.height !== value) {\n                    this.state.size.height = value;\n                    this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Rectangle;\n    }(puck.Visual));\n    puck.Rectangle = Rectangle;\n    var rectangleStencil = {\n        draft: puck.stencil.visual.draft,\n        draw: function (ctx, bag) {\n            var fr = bag.fillRect;\n            if (fr.width <= 0 || fr.height <= 0) {\n                return;\n            }\n            var raw = ctx.raw;\n            raw.beginPath();\n            raw.rect(fr.x, fr.y, fr.width, fr.height);\n            raw.closePath();\n        }\n    };\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var SolidColorBrush = (function () {\n        function SolidColorBrush(color) {\n            this.$color = null;\n            this.$changer = new puck.internal.WatchChanger();\n            this.color = new puck.Color(color);\n        }\n        Object.defineProperty(SolidColorBrush.prototype, \"color\", {\n            get: function () { return this.$color; },\n            set: function (value) {\n                if (!puck.Color.equals(this.$color, value)) {\n                    this.$changer.on();\n                }\n                this.$color = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        SolidColorBrush.prototype.watch = function (onChanged) {\n            return this.$changer.watch(onChanged);\n        };\n        SolidColorBrush.prototype.setup = function (ctx, region) {\n        };\n        SolidColorBrush.prototype.toHtml5Object = function () {\n            return this.color.toString();\n        };\n        return SolidColorBrush;\n    }());\n    puck.SolidColorBrush = SolidColorBrush;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    (function (Stretch) {\n        Stretch[Stretch[\"none\"] = 0] = \"none\";\n        Stretch[Stretch[\"fill\"] = 1] = \"fill\";\n        Stretch[Stretch[\"uniform\"] = 2] = \"uniform\";\n        Stretch[Stretch[\"uniformToFill\"] = 3] = \"uniformToFill\";\n    })(puck.Stretch || (puck.Stretch = {}));\n    var Stretch = puck.Stretch;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var DirtyFlags = puck.element.DirtyFlags;\n    var Text = (function (_super) {\n        __extends(Text, _super);\n        function Text(state, composite) {\n            _super.call(this, state, composite);\n            this.$fillwatch = null;\n            this.$strokewatch = null;\n        }\n        Text.prototype.init = function (state, composite) {\n            this.state = (state || new puck.text.TextState()).reset();\n            this.composite = (composite || new puck.element.ElementComposite()).reset();\n            this.processor = {\n                down: puck.element.down.Processor.instance,\n                up: puck.text.up.Processor.instance,\n                render: puck.text.render.Processor.instance,\n                hit: puck.text.hit.Processor.instance,\n            };\n            this.stencil = puck.stencil.empty;\n        };\n        Object.defineProperty(Text.prototype, \"fill\", {\n            get: function () { return this.state.fill; },\n            set: function (value) {\n                var _this = this;\n                if (this.$fillwatch) {\n                    this.$fillwatch.unwatch();\n                    this.$fillwatch = null;\n                }\n                if ((!value) === (!this.state.fill)) {\n                    this.composite.taint(DirtyFlags.extents).invalidate();\n                }\n                if (value !== this.state.fill) {\n                    this.state.fill = value;\n                    this.composite.invalidate();\n                }\n                if (value) {\n                    this.$fillwatch = value.watch(function () { return _this.composite.invalidate(); });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"stroke\", {\n            get: function () { return this.state.stroke; },\n            set: function (value) {\n                var _this = this;\n                if (this.$strokewatch) {\n                    this.$strokewatch.unwatch();\n                    this.$strokewatch = null;\n                }\n                if ((!value) === (!this.state.stroke)) {\n                    this.composite.taint(DirtyFlags.padding).invalidate();\n                }\n                if (value !== this.state.stroke) {\n                    this.state.stroke = value;\n                    this.composite.invalidate();\n                }\n                if (value) {\n                    this.$strokewatch = value.watch(function () { return _this.composite.invalidate(); });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"strokeThickness\", {\n            get: function () { return this.state.strokeThickness; },\n            set: function (value) {\n                if (value !== this.state.strokeThickness) {\n                    this.state.strokeThickness = value;\n                    this.composite.taint(DirtyFlags.padding);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"x\", {\n            get: function () {\n                return this.state.offset.x;\n            },\n            set: function (value) {\n                if (this.state.offset.x !== value) {\n                    this.state.offset.x = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"y\", {\n            get: function () {\n                return this.state.offset.y;\n            },\n            set: function (value) {\n                if (this.state.offset.y !== value) {\n                    this.state.offset.y = value;\n                    this.composite.taint(DirtyFlags.transform);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"text\", {\n            get: function () {\n                return this.state.text;\n            },\n            set: function (value) {\n                this.state.text = value;\n                this.composite.taint(DirtyFlags.font);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"fontFamily\", {\n            get: function () {\n                return this.state.font.family;\n            },\n            set: function (value) {\n                if (this.state.font.family !== value) {\n                    this.state.font.family = value;\n                    this.composite.taint(DirtyFlags.font);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"fontSize\", {\n            get: function () {\n                return this.state.font.size;\n            },\n            set: function (value) {\n                if (this.state.font.size !== value) {\n                    this.state.font.size = value;\n                    this.composite.taint(DirtyFlags.font);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"fontStretch\", {\n            get: function () {\n                return this.state.font.stretch;\n            },\n            set: function (value) {\n                if (this.state.font.stretch !== value) {\n                    this.state.font.stretch = value;\n                    this.composite.taint(DirtyFlags.font);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"fontStyle\", {\n            get: function () {\n                return this.state.font.style;\n            },\n            set: function (value) {\n                if (this.state.font.style !== value) {\n                    this.state.font.style = value;\n                    this.composite.taint(DirtyFlags.font);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Text.prototype, \"fontWeight\", {\n            get: function () {\n                return this.state.font.weight;\n            },\n            set: function (value) {\n                if (this.state.font.weight !== value) {\n                    this.state.font.weight = value;\n                    this.composite.taint(DirtyFlags.font);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Text;\n    }(puck.Element));\n    puck.Text = Text;\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var Timer = (function () {\n        function Timer(callback) {\n            this.callback = callback;\n            this.enabled = false;\n            this.active = 0;\n        }\n        Timer.prototype.enable = function () {\n            var _this = this;\n            this.enabled = true;\n            this.active = animate.request(function (now) { return _this.onFrame(now); });\n        };\n        Timer.prototype.disable = function () {\n            this.enabled = false;\n            if (this.active) {\n                animate.cancel(this.active);\n                this.active = 0;\n            }\n        };\n        Timer.prototype.onFrame = function (now) {\n            var _this = this;\n            this.callback && this.callback(now);\n            this.active = animate.request(function (now) { return _this.onFrame(now); });\n        };\n        return Timer;\n    }());\n    puck.Timer = Timer;\n    var animate;\n    (function (animate) {\n        var req = window.requestAnimationFrame\n            || window.webkitRequestAnimationFrame\n            || window.mozRequestAnimationFrame\n            || window.oRequestAnimationFrame\n            || window.msRequestAnimationFrame\n            || (function (callback) { return window.setTimeout(callback, 1000 / 200); });\n        var can = window.cancelAnimationFrame\n            || window.webkitCancelAnimationFrame\n            || window.mozCancelAnimationFrame\n            || window.oCancelAnimationFrame\n            || window.msCancelAnimationFrame\n            || (function (handle) { return window.clearTimeout(handle); });\n        function request(callback) {\n            return req(callback);\n        }\n        animate.request = request;\n        function cancel(handle) {\n            return can(handle);\n        }\n        animate.cancel = cancel;\n    })(animate || (animate = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var ElementComposite = (function () {\n            function ElementComposite() {\n                this.$$dirt = element.DirtyFlags.none;\n                this.transform = la.mat3.identity();\n                this.padding = la.padding.init(0, 0, 0, 0);\n                this.extents = la.rect.init(0, 0, 0, 0);\n                this.paint = la.rect.init(0, 0, 0, 0);\n            }\n            ElementComposite.prototype.hasDirt = function (match) {\n                return (this.$$dirt & match) > 0;\n            };\n            ElementComposite.prototype.taint = function (newDirt) {\n                this.$$dirt |= newDirt;\n                return this;\n            };\n            ElementComposite.prototype.untaint = function (oldDirt) {\n                this.$$dirt &= ~oldDirt;\n                return this;\n            };\n            ElementComposite.prototype.reset = function () {\n                this.opacity = 1.0;\n                this.visible = true;\n                la.mat3.identity(this.transform);\n                la.padding.init(0, 0, 0, 0, this.padding);\n                la.rect.init(0, 0, 0, 0, this.extents);\n                la.rect.init(0, 0, 0, 0, this.paint);\n                this.$$dirt = element.DirtyFlags.none;\n                return this;\n            };\n            ElementComposite.prototype.invalidate = function () {\n                this.taint(element.DirtyFlags.invalidate);\n                la.rect.union(this.paint, this.extents);\n                return this;\n            };\n            return ElementComposite;\n        }());\n        element.ElementComposite = ElementComposite;\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var ContainerComposite = (function (_super) {\n            __extends(ContainerComposite, _super);\n            function ContainerComposite() {\n                _super.apply(this, arguments);\n            }\n            return ContainerComposite;\n        }(puck.element.ElementComposite));\n        container.ContainerComposite = ContainerComposite;\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var ElementState = (function () {\n            function ElementState() {\n                this.opacity = 1.0;\n                this.visible = true;\n                this.offset = { x: 0, y: 0 };\n                this.size = { width: 0, height: 0 };\n                this.transform = la.mat3.identity();\n                this.transformOrigin = { x: 0.5, y: 0.5 };\n            }\n            ElementState.prototype.reset = function () {\n                this.opacity = 1.0;\n                this.visible = true;\n                this.offset.x = 0;\n                this.offset.y = 0;\n                this.size.width = 0;\n                this.size.height = 0;\n                la.mat3.identity(this.transform);\n                this.transformOrigin.x = 0.5;\n                this.transformOrigin.y = 0.5;\n                return this;\n            };\n            ElementState.prototype.mapTransformOrigin = function (comp) {\n                var to = this.transformOrigin, size = this.size;\n                return {\n                    x: to.x * size.width,\n                    y: to.y * size.height\n                };\n            };\n            return ElementState;\n        }());\n        element.ElementState = ElementState;\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var ContainerState = (function (_super) {\n            __extends(ContainerState, _super);\n            function ContainerState() {\n                _super.apply(this, arguments);\n            }\n            return ContainerState;\n        }(puck.element.ElementState));\n        container.ContainerState = ContainerState;\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var engine;\n    (function (engine) {\n        function hit(el, ctx, pos, hitlist) {\n            var processor = el.processor.hit;\n            processor.process(el, ctx, pos, hitlist);\n        }\n        engine.hit = hit;\n    })(engine = puck.engine || (puck.engine = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var engine;\n    (function (engine) {\n        function process(el, parent) {\n            doDown(el, parent);\n            var ccomposites = [];\n            for (var walker = puck.walk.getWalker(el), cur = walker.next(); !!cur; cur = walker.next()) {\n                process(cur, el);\n                ccomposites.push(cur.composite);\n            }\n            doUp(el, parent, ccomposites);\n        }\n        engine.process = process;\n        var EMPTY_DOWN_COMPOSITE = {\n            opacity: 1.0,\n            visible: true,\n            transform: la.mat3.identity(),\n            extents: la.rect.init(0, 0, 0, 0),\n            hasDirt: function (match) {\n                return false;\n            },\n            taint: function (newDirt) {\n            },\n            untaint: function (oldDirt) {\n            },\n            reset: function () {\n            }\n        };\n        function doDown(el, parent) {\n            var processor = el.processor.down;\n            var bag = {\n                walker: puck.walk.getWalker(el),\n                state: el.state,\n                composite: el.composite,\n                pcomposite: parent ? parent.composite : EMPTY_DOWN_COMPOSITE\n            };\n            if (processor.isTainted(bag)) {\n                processor.process(bag);\n                processor.clear(bag);\n            }\n        }\n        function doUp(el, parent, ccomposites) {\n            var processor = el.processor.up;\n            var bag = {\n                state: el.state,\n                composite: el.composite,\n                ccomposites: ccomposites\n            };\n            if (processor.isTainted(bag)) {\n                var dirt = processor.process(bag);\n                if (parent)\n                    parent.composite.taint(dirt);\n                processor.clear(bag);\n            }\n        }\n    })(engine = puck.engine || (puck.engine = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var render;\n    (function (render) {\n        var mat3 = la.mat3;\n        var caps = [\n            \"butt\",\n            \"square\",\n            \"round\",\n            \"butt\"\n        ];\n        var joins = [\n            \"miter\",\n            \"bevel\",\n            \"round\"\n        ];\n        var RenderContext = (function () {\n            function RenderContext() {\n                this.$$transforms = [];\n                this.currentTransform = mat3.identity();\n                Object.defineProperties(this, {\n                    \"currentTransform\": { value: mat3.identity(), writable: false },\n                    \"hasFillRule\": { value: RenderContext.hasFillRule, writable: false },\n                    \"size\": { value: new render.RenderContextSize(), writable: false },\n                });\n            }\n            Object.defineProperty(RenderContext, \"hasFillRule\", {\n                get: function () {\n                    if (navigator.appName === \"Microsoft Internet Explorer\") {\n                        var version = getIEVersion();\n                        return version < 0 || version > 10;\n                    }\n                    return true;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            RenderContext.prototype.init = function (ctx) {\n                Object.defineProperties(this, {\n                    \"raw\": { value: ctx, writable: false }\n                });\n                this.size.init(ctx);\n                return this;\n            };\n            RenderContext.prototype.applyDpiRatio = function () {\n                var ratio = this.size.dpiRatio;\n                this.scale(ratio, ratio);\n            };\n            RenderContext.prototype.save = function () {\n                this.$$transforms.push(mat3.create(this.currentTransform));\n                this.raw.save();\n            };\n            RenderContext.prototype.restore = function () {\n                var old = this.$$transforms.pop();\n                if (old)\n                    mat3.copyTo(old, this.currentTransform);\n                this.raw.restore();\n            };\n            RenderContext.prototype.setTransform = function (m11, m12, m21, m22, dx, dy) {\n                mat3.init(this.currentTransform, m11, m12, m21, m22, dx, dy);\n                this.raw.setTransform(m11, m12, m21, m22, dx, dy);\n            };\n            RenderContext.prototype.resetTransform = function () {\n                mat3.identity(this.currentTransform);\n                var raw = this.raw;\n                if (raw.resetTransform)\n                    raw.resetTransform();\n            };\n            RenderContext.prototype.transform = function (m11, m12, m21, m22, dx, dy) {\n                var ct = this.currentTransform;\n                mat3.multiply(ct, mat3.create([m11, m12, m21, m22, dx, dy]), ct);\n                this.raw.transform(m11, m12, m21, m22, dx, dy);\n            };\n            RenderContext.prototype.scale = function (x, y) {\n                mat3.scale(this.currentTransform, x, y);\n                this.raw.scale(x, y);\n            };\n            RenderContext.prototype.rotate = function (angle) {\n                var ct = this.currentTransform;\n                var r = mat3.createRotate(angle);\n                mat3.multiply(ct, r, ct);\n                this.raw.rotate(angle);\n            };\n            RenderContext.prototype.translate = function (x, y) {\n                mat3.translate(this.currentTransform, x, y);\n                this.raw.translate(x, y);\n            };\n            RenderContext.prototype.apply = function (mat) {\n                var ct = mat3.apply(this.currentTransform, mat);\n                this.raw.setTransform(ct[0], ct[1], ct[2], ct[3], ct[4], ct[5]);\n            };\n            RenderContext.prototype.preapply = function (mat) {\n                var ct = mat3.preapply(this.currentTransform, mat);\n                this.raw.setTransform(ct[0], ct[1], ct[2], ct[3], ct[4], ct[5]);\n            };\n            RenderContext.prototype.clipRect = function (rect) {\n                var raw = this.raw;\n                raw.beginPath();\n                raw.rect(rect.x, rect.y, rect.width, rect.height);\n                raw.clip();\n            };\n            RenderContext.prototype.fillEx = function (region, brush, fillRule) {\n                var raw = this.raw;\n                brush.setup(raw, region);\n                raw.fillStyle = brush.toHtml5Object();\n                if (fillRule == null) {\n                    raw.fillRule = raw.msFillRule = \"nonzero\";\n                    raw.fill();\n                }\n                else {\n                    var fr = fillRule === puck.FillRule.evenodd ? \"evenodd\" : \"nonzero\";\n                    raw.fillRule = raw.msFillRule = fr;\n                    raw.fill(fr);\n                }\n            };\n            RenderContext.prototype.strokeEx = function (region, brush, thickness) {\n                var raw = this.raw;\n                brush.setup(raw, region);\n                raw.strokeStyle = brush.toHtml5Object();\n                raw.lineWidth = thickness;\n                raw.stroke();\n            };\n            RenderContext.prototype.isPointInStrokeEx = function (x, y, thickness) {\n                var raw = this.raw;\n                raw.lineWidth = thickness;\n                return raw.isPointInStroke(x, y);\n            };\n            RenderContext.prototype.setStrokeExtras = function (lineCap, lineJoin, miterLimit) {\n                var raw = this.raw;\n                raw.lineCap = caps[lineCap || 0] || caps[0];\n                raw.lineJoin = joins[lineJoin || 0] || joins[0];\n                raw.miterLimit = miterLimit;\n            };\n            return RenderContext;\n        }());\n        render.RenderContext = RenderContext;\n        function getIEVersion() {\n            var re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n            if (re.exec(navigator.userAgent) != null)\n                return parseFloat(RegExp.$1);\n            return -1;\n        }\n    })(render = puck.render || (puck.render = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var engine;\n    (function (engine) {\n        function render(el, ctx, region) {\n            var processor = el.processor.render;\n            var bag = {\n                walker: puck.walk.getWalker(el, true),\n                state: el.state,\n                composite: el.composite,\n                stencil: el.stencil,\n                ctx: ctx,\n                inregion: region,\n                curregion: la.rect.init(0, 0, 0, 0),\n            };\n            processor.process(bag);\n            processor.clear(bag);\n        }\n        engine.render = render;\n    })(engine = puck.engine || (puck.engine = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var fit;\n    (function (fit) {\n        var extents;\n        (function (extents_1) {\n            var rect = la.rect;\n            function calc(extents, stretch, natural, size) {\n                if (rect.isEmpty(natural))\n                    size.width = size.height = 0;\n                var fitter = fits[stretch];\n                fitter && fitter(extents, natural, size);\n            }\n            extents_1.calc = calc;\n            var fits = {};\n            fits[puck.Stretch.none] = function (final, natural, size) {\n                la.rect.copyTo(natural, final);\n            };\n            fits[puck.Stretch.fill] = function (final, natural, size) {\n                final.width = size.width;\n                final.height = size.height;\n            };\n            fits[puck.Stretch.uniform] = function (final, natural, size) {\n                var sx = size.width / natural.width, sy = size.height / natural.height;\n                final.width = size.width;\n                final.height = size.height;\n                if (sx < sy) {\n                    final.height = natural.height * sx;\n                }\n                else {\n                    final.width = natural.width * sy;\n                }\n            };\n            fits[puck.Stretch.uniformToFill] = function (final, natural, size) {\n                var sx = size.width / natural.width, sy = size.height / natural.height;\n                final.width = size.width;\n                final.height = size.height;\n                if (sx > sy) {\n                    final.height = natural.height * sx;\n                }\n                else {\n                    final.width = natural.width * sy;\n                }\n            };\n        })(extents = fit.extents || (fit.extents = {}));\n    })(fit = puck.fit || (puck.fit = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var fit;\n    (function (fit) {\n        var transform;\n        (function (transform_1) {\n            var mat3 = la.mat3;\n            function calc(transform, stretch, natural, size) {\n                var fitter = fits[stretch];\n                fitter && fitter(transform, natural, size);\n            }\n            transform_1.calc = calc;\n            var fits = {};\n            fits[puck.Stretch.none] = function (mat, natural, size) {\n                mat3.identity(mat);\n            };\n            fits[puck.Stretch.fill] = function (mat, natural, size) {\n                mat3.createTranslate(-natural.x, -natural.y, mat);\n                mat3.scale(mat, size.width / natural.width, size.height / natural.height);\n            };\n            fits[puck.Stretch.uniform] = function (mat, natural, size) {\n                mat3.createTranslate(-natural.x, -natural.y, mat);\n                var smin = Math.min(size.width / natural.width, size.height / natural.height);\n                mat3.scale(mat, smin, smin);\n            };\n            fits[puck.Stretch.uniformToFill] = function (mat, natural, size) {\n                mat3.createTranslate(-natural.x, -natural.y, mat);\n                var smax = Math.max(size.width / natural.width, size.height / natural.height);\n                mat3.scale(mat, smax, smax);\n            };\n        })(transform = fit.transform || (fit.transform = {}));\n    })(fit = puck.fit || (puck.fit = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var font;\n    (function (font_1) {\n        function toString(font) {\n            var s = \"\";\n            s += font.style.toString() + \" \";\n            s += \"normal \";\n            s += font.weight.toString() + \" \";\n            s += font.size + \"px \";\n            s += font.family.toString();\n            return s;\n        }\n        font_1.toString = toString;\n    })(font = puck.font || (puck.font = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var ImageComposite = (function (_super) {\n            __extends(ImageComposite, _super);\n            function ImageComposite() {\n                _super.apply(this, arguments);\n                this.stretchTransform = la.mat3.identity();\n            }\n            ImageComposite.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                la.mat3.identity(this.stretchTransform);\n                return this;\n            };\n            return ImageComposite;\n        }(puck.element.ElementComposite));\n        image.ImageComposite = ImageComposite;\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var ImageSource = (function () {\n            function ImageSource() {\n                var _this = this;\n                this.$el = document.createElement(\"img\");\n                this.$watchers = [];\n                this.$el.onerror = function (e) { return _this.onErrored(e); };\n                this.$el.onload = function (e) { return _this.onLoaded(); };\n            }\n            ImageSource.prototype.reset = function () {\n                this.uri = \"\";\n            };\n            Object.defineProperty(ImageSource.prototype, \"uri\", {\n                get: function () { return this.$el.src; },\n                set: function (value) {\n                    if (this.$el.src !== value) {\n                        this.$el.src = value;\n                        this.onChanged();\n                    }\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ImageSource.prototype, \"naturalWidth\", {\n                get: function () {\n                    return this.$el.naturalWidth;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ImageSource.prototype, \"naturalHeight\", {\n                get: function () {\n                    return this.$el.naturalHeight;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            ImageSource.prototype.draw = function (ctx) {\n                ctx.drawImage(this.$el, 0, 0);\n            };\n            ImageSource.prototype.watch = function (onChanged, onErrored, onLoaded) {\n                var _this = this;\n                var watcher = {\n                    change: onChanged,\n                    error: onErrored,\n                    load: onLoaded,\n                    unwatch: function () {\n                        var ind = _this.$watchers.indexOf(watcher);\n                        if (ind > -1)\n                            _this.$watchers.splice(ind, 1);\n                    }\n                };\n                this.$watchers.push(watcher);\n                return watcher;\n            };\n            ImageSource.prototype.onChanged = function () {\n                for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                    watchers[i].change();\n                }\n            };\n            ImageSource.prototype.onErrored = function (e) {\n                for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                    watchers[i].error(e.error);\n                }\n            };\n            ImageSource.prototype.onLoaded = function () {\n                for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                    watchers[i].load();\n                }\n            };\n            return ImageSource;\n        }());\n        image.ImageSource = ImageSource;\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var ImageState = (function (_super) {\n            __extends(ImageState, _super);\n            function ImageState() {\n                _super.apply(this, arguments);\n                this.source = new image.ImageSource();\n                this.stretch = puck.Stretch.none;\n                this.natural = la.rect.init(0, 0, 0, 0);\n            }\n            ImageState.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                this.source.reset();\n                this.stretch = puck.Stretch.none;\n                la.rect.init(0, 0, 0, 0, this.natural);\n                return this;\n            };\n            ImageState.prototype.getEffectiveStretch = function () {\n                var size = this.size, natural = this.natural;\n                if (size.width <= 0 || size.height <= 0) {\n                    return puck.Stretch.none;\n                }\n                if (natural.width <= 0 || natural.height <= 0) {\n                    return puck.Stretch.none;\n                }\n                return this.stretch;\n            };\n            return ImageState;\n        }(puck.element.ElementState));\n        image.ImageState = ImageState;\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var internal;\n    (function (internal) {\n        var WatchChanger = (function () {\n            function WatchChanger() {\n                this.$watchers = [];\n            }\n            WatchChanger.prototype.watch = function (onChanged) {\n                var watchers = this.$watchers;\n                var watcher = {\n                    change: onChanged,\n                    unwatch: function () {\n                        var ind = watchers.indexOf(watcher);\n                        if (ind > -1)\n                            watchers.splice(ind, 1);\n                    }\n                };\n                watchers.push(watcher);\n                return watcher;\n            };\n            WatchChanger.prototype.on = function () {\n                for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                    watchers[i].change();\n                }\n            };\n            return WatchChanger;\n        }());\n        internal.WatchChanger = WatchChanger;\n    })(internal = puck.internal || (puck.internal = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var linearGradient;\n    (function (linearGradient) {\n        function createRepeatInterpolator(start, end, bounds) {\n            var first = { x: start.x, y: start.y };\n            var last = { x: end.x, y: end.y };\n            var dir = { x: end.x - start.x, y: end.y - start.y };\n            linearGradient.calcMetrics(dir, first, last, bounds);\n            var numSteps = (last.x - first.x) / dir.x;\n            var stepSize = 1.0 / numSteps;\n            var cur = -stepSize;\n            return {\n                x0: first.x,\n                y0: first.y,\n                x1: last.x,\n                y1: last.y,\n                step: function () {\n                    cur += stepSize;\n                    return cur < 1;\n                },\n                interpolate: function (offset) {\n                    return cur + (offset / numSteps);\n                }\n            };\n        }\n        linearGradient.createRepeatInterpolator = createRepeatInterpolator;\n        function createReflectInterpolator(start, end, bounds) {\n            var first = { x: start.x, y: start.y };\n            var last = { x: end.x, y: end.y };\n            var dir = { x: end.x - start.x, y: end.y - start.y };\n            linearGradient.calcMetrics(dir, first, last, bounds);\n            var numSteps = (last.x - first.x) / dir.x;\n            var stepSize = 1.0 / numSteps;\n            var cur = -stepSize;\n            var inverted = Math.round((start.x - first.x) / dir.x) % 2 === 0;\n            return {\n                x0: first.x,\n                y0: first.y,\n                x1: last.x,\n                y1: last.y,\n                step: function () {\n                    inverted = !inverted;\n                    cur += stepSize;\n                    return cur < 1;\n                },\n                interpolate: function (offset) {\n                    var norm = offset / numSteps;\n                    return !inverted ? cur + norm : cur + (stepSize - norm);\n                }\n            };\n        }\n        linearGradient.createReflectInterpolator = createReflectInterpolator;\n    })(linearGradient = puck.linearGradient || (puck.linearGradient = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var linearGradient;\n    (function (linearGradient) {\n        function calcMetrics(dir, first, last, bounds) {\n            if (dir.y === 0) {\n                if (dir.x < 0)\n                    W(dir, first, last, bounds);\n                else if (dir.x !== 0)\n                    E(dir, first, last, bounds);\n            }\n            else if (dir.x === 0) {\n                if (dir.y < 0)\n                    N(dir, first, last, bounds);\n                else if (dir.y !== 0)\n                    S(dir, first, last, bounds);\n            }\n            else if (dir.x < 0 && dir.y < 0) {\n                NW(dir, first, last, bounds);\n            }\n            else if (dir.x < 0 && dir.y > 0) {\n                SW(dir, first, last, bounds);\n            }\n            else if (dir.x > 0 && dir.y < 0) {\n                NE(dir, first, last, bounds);\n            }\n            else if (dir.x > 0 && dir.y > 0) {\n                SE(dir, first, last, bounds);\n            }\n        }\n        linearGradient.calcMetrics = calcMetrics;\n        function E(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            while (first.x >= bounds.x)\n                first.x -= dir.x;\n            while (last.x <= maxX)\n                last.x += dir.x;\n        }\n        function W(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            while (first.x <= maxX)\n                first.x -= dir.x;\n            while (last.x >= bounds.x)\n                last.x += dir.x;\n        }\n        function S(dir, first, last, bounds) {\n            var maxY = bounds.y + bounds.height;\n            while (first.y >= bounds.y)\n                first.y -= dir.y;\n            while (last.y <= maxY)\n                last.y += dir.y;\n        }\n        function N(dir, first, last, bounds) {\n            var maxY = bounds.y + bounds.height;\n            while (first.y <= maxY)\n                first.y -= dir.y;\n            while (last.y >= bounds.y)\n                last.y += dir.y;\n        }\n        function NW(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            var maxY = bounds.y + bounds.height;\n            while (first.x <= maxX && first.y <= maxY) {\n                first.x -= dir.x;\n                first.y -= dir.y;\n            }\n            while (last.x >= bounds.x && last.y >= bounds.y) {\n                last.x += dir.x;\n                last.y += dir.y;\n            }\n        }\n        function SW(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            var maxY = bounds.y + bounds.height;\n            while (first.x <= maxX && first.y >= bounds.y) {\n                first.x -= dir.x;\n                first.y -= dir.y;\n            }\n            while (last.x >= bounds.x && last.y <= maxY) {\n                last.x += dir.x;\n                last.y += dir.y;\n            }\n        }\n        function NE(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            var maxY = bounds.y + bounds.height;\n            while (first.x >= bounds.x && first.y <= maxY) {\n                first.x -= dir.x;\n                first.y -= dir.y;\n            }\n            while (last.x <= maxX && last.y >= bounds.y) {\n                last.x += dir.x;\n                last.y += dir.y;\n            }\n        }\n        function SE(dir, first, last, bounds) {\n            var maxX = bounds.x + bounds.width;\n            var maxY = bounds.y + bounds.height;\n            while (first.x >= bounds.x && first.y >= bounds.y) {\n                first.x -= dir.x;\n                first.y -= dir.y;\n            }\n            while (last.x <= maxX && last.y <= maxY) {\n                last.x += dir.x;\n                last.y += dir.y;\n            }\n        }\n    })(linearGradient = puck.linearGradient || (puck.linearGradient = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path_1) {\n        var FillBounds = curve.bounds.fill.FillBounds;\n        var StrokeBounds = curve.bounds.stroke.StrokeBounds;\n        var Bounder = (function () {\n            function Bounder() {\n                this.$path = null;\n                this.$filled = null;\n                this.$stroked = null;\n                this.$pars = {\n                    strokeThickness: 0,\n                    strokeDashArray: null,\n                    strokeDashCap: curve.PenLineCap.Flat,\n                    strokeDashOffset: 0,\n                    strokeEndLineCap: curve.PenLineCap.Flat,\n                    strokeLineJoin: curve.PenLineJoin.Miter,\n                    strokeMiterLimit: 10,\n                    strokeStartLineCap: curve.PenLineCap.Flat,\n                };\n            }\n            Bounder.prototype.getPath = function () {\n                return this.$path;\n            };\n            Bounder.prototype.setPath = function (path) {\n                if (this.$path === path)\n                    return;\n                this.$path = path;\n                if (!path) {\n                    this.$filled = null;\n                    this.$stroked = null;\n                }\n                else {\n                    this.$filled = new FillBounds(path);\n                    this.$stroked = new StrokeBounds(path);\n                    this.$stroked.pars = this.$pars;\n                }\n            };\n            Bounder.prototype.reset = function () {\n                if (this.$filled)\n                    this.$filled.reset();\n                if (this.$stroked)\n                    this.$stroked.reset();\n            };\n            Bounder.prototype.getFillRect = function (dest) {\n                var box = this.$filled;\n                if (!box) {\n                    la.rect.init(0, 0, 0, 0, dest);\n                }\n                else {\n                    dest.x = box.l;\n                    dest.y = box.t;\n                    dest.width = box.r - box.l;\n                    dest.height = box.b - box.t;\n                }\n                return this;\n            };\n            Bounder.prototype.getStrokeRect = function (dest) {\n                var box = this.$stroked;\n                if (!box) {\n                    la.rect.init(0, 0, 0, 0, dest);\n                }\n                else {\n                    dest.x = box.l;\n                    dest.y = box.t;\n                    dest.width = box.r - box.l;\n                    dest.height = box.b - box.t;\n                }\n                return this;\n            };\n            Bounder.prototype.calc = function (state) {\n                var stroked = this.$stroked, filled = this.$filled;\n                if (stroked) {\n                    if (!!state.stroke && state.strokeThickness > 0) {\n                        this.setStroke(state);\n                        stroked.ensure();\n                    }\n                    else {\n                        stroked.reset();\n                    }\n                }\n                if (filled) {\n                    filled.ensure();\n                }\n                return this;\n            };\n            Bounder.prototype.setStroke = function (state) {\n                var pars = this.$pars;\n                pars.strokeThickness = state.strokeThickness;\n                pars.strokeStartLineCap = state.strokeLineCap;\n                pars.strokeLineJoin = state.strokeLineJoin;\n                pars.strokeMiterLimit = state.strokeMiterLimit;\n            };\n            return Bounder;\n        }());\n        path_1.Bounder = Bounder;\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var PathComposite = (function (_super) {\n            __extends(PathComposite, _super);\n            function PathComposite() {\n                _super.apply(this, arguments);\n                this.stretchTransform = la.mat3.identity();\n                this.natural = la.rect.init(0, 0, 0, 0);\n                this.bounder = new path.Bounder();\n            }\n            PathComposite.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                la.mat3.identity(this.stretchTransform);\n                la.rect.init(0, 0, 0, 0, this.natural);\n                this.bounder.reset();\n                return this;\n            };\n            return PathComposite;\n        }(puck.element.ElementComposite));\n        path.PathComposite = PathComposite;\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var visual;\n    (function (visual) {\n        var ElementState = puck.element.ElementState;\n        var VisualState = (function (_super) {\n            __extends(VisualState, _super);\n            function VisualState() {\n                _super.apply(this, arguments);\n            }\n            VisualState.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                this.fill = null;\n                this.stroke = null;\n                this.strokeThickness = 0;\n                return this;\n            };\n            return VisualState;\n        }(ElementState));\n        visual.VisualState = VisualState;\n    })(visual = puck.visual || (puck.visual = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var PathState = (function (_super) {\n            __extends(PathState, _super);\n            function PathState() {\n                _super.apply(this, arguments);\n                this.path = null;\n                this.stretch = puck.Stretch.none;\n                this.fillRule = puck.FillRule.evenodd;\n                this.strokeLineCap = puck.PenLineCap.flat;\n                this.strokeLineJoin = puck.PenLineJoin.miter;\n                this.strokeMiterLimit = 10;\n            }\n            PathState.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                this.path = null;\n                this.stretch = puck.Stretch.none;\n                this.fillRule = puck.FillRule.evenodd;\n                this.strokeLineCap = puck.PenLineCap.flat;\n                this.strokeLineJoin = puck.PenLineJoin.miter;\n                this.strokeMiterLimit = 10;\n                return this;\n            };\n            PathState.prototype.getEffectiveStretch = function (comp) {\n                var size = this.size, natural = comp.natural;\n                if (size.width <= 0 || size.height <= 0) {\n                    return puck.Stretch.none;\n                }\n                if (natural.width <= 0 || natural.height <= 0) {\n                    return puck.Stretch.none;\n                }\n                return this.stretch;\n            };\n            PathState.prototype.mapTransformOrigin = function (comp) {\n                var to = this.transformOrigin;\n                var final = la.rect.init(0, 0, 0, 0);\n                puck.fit.extents.calc(final, this.getEffectiveStretch(comp), comp.natural, this.size);\n                return {\n                    x: final.x + (to.x * final.width),\n                    y: final.y + (to.y * final.height),\n                };\n            };\n            return PathState;\n        }(puck.visual.VisualState));\n        path.PathState = PathState;\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var polyline;\n    (function (polyline) {\n        var PolylineState = (function (_super) {\n            __extends(PolylineState, _super);\n            function PolylineState() {\n                _super.apply(this, arguments);\n                this.points = new puck.Points();\n                this.closed = false;\n            }\n            PolylineState.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                this.points.clear();\n                this.closed = false;\n                return this;\n            };\n            return PolylineState;\n        }(puck.path.PathState));\n        polyline.PolylineState = PolylineState;\n    })(polyline = puck.polyline || (puck.polyline = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var radialGradient;\n    (function (radialGradient) {\n        function createExtender(data, bounds) {\n            var started = false;\n            var dx = data.x1 - data.x0;\n            var dy = data.y1 - data.y0;\n            var rstep = data.r1;\n            var reached = false;\n            var ext = {\n                x0: data.x0,\n                y0: data.y0,\n                r0: 0,\n                x1: data.x1,\n                y1: data.y1,\n                r1: data.r1,\n                step: function () {\n                    if (!started) {\n                        started = true;\n                        return true;\n                    }\n                    ext.x0 = ext.x1;\n                    ext.y0 = ext.y1;\n                    ext.r0 += rstep;\n                    ext.r1 += rstep;\n                    ext.x1 += dx;\n                    ext.y1 += dy;\n                    if (reached)\n                        return false;\n                    reached = exceedBounds(ext.x1, ext.y1, ext.r1, bounds);\n                    return true;\n                },\n                createGradient: function (ctx) {\n                    return ctx.createRadialGradient(ext.x0, ext.y0, ext.r0, ext.x1, ext.y1, ext.r1);\n                }\n            };\n            return ext;\n        }\n        radialGradient.createExtender = createExtender;\n        function exceedBounds(cx, cy, radius, bounds) {\n            var ne = len(cx, cy, bounds.x, bounds.y);\n            var nw = len(cx, cy, bounds.x + bounds.width, bounds.y);\n            var sw = len(cx, cy, bounds.x + bounds.width, bounds.y + bounds.height);\n            var se = len(cx, cy, bounds.x, bounds.y + bounds.height);\n            return Math.max(ne, nw, sw, se) < radius;\n        }\n        function len(x1, y1, x2, y2) {\n            var dx = x2 - x1;\n            var dy = y2 - y1;\n            return Math.sqrt((dx * dx) + (dy * dy));\n        }\n    })(radialGradient = puck.radialGradient || (puck.radialGradient = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var render;\n    (function (render) {\n        function getNaturalCanvasSize(canvas) {\n            var zoomFactor = render.zoom.calc();\n            return {\n                width: canvas.offsetWidth * zoomFactor,\n                height: canvas.offsetHeight * zoomFactor\n            };\n        }\n        render.getNaturalCanvasSize = getNaturalCanvasSize;\n    })(render = puck.render || (puck.render = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var render;\n    (function (render) {\n        var epsilon = 1e-10;\n        var RenderContextSize = (function () {\n            function RenderContextSize() {\n                this.$$ctx = null;\n                this.$$desiredWidth = 0;\n                this.$$desiredHeight = 0;\n                this.$$changed = null;\n                this.$$lastDpiRatio = 1;\n            }\n            Object.defineProperty(RenderContextSize.prototype, \"desiredWidth\", {\n                get: function () {\n                    return this.$$desiredWidth;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(RenderContextSize.prototype, \"desiredHeight\", {\n                get: function () {\n                    return this.$$desiredHeight;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(RenderContextSize.prototype, \"paintWidth\", {\n                get: function () {\n                    return this.$$desiredWidth * this.dpiRatio;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(RenderContextSize.prototype, \"paintHeight\", {\n                get: function () {\n                    return this.$$desiredHeight * this.dpiRatio;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(RenderContextSize.prototype, \"dpiRatio\", {\n                get: function () {\n                    return (window.devicePixelRatio || 1) / this.$$ctx.backingStorePixelRatio;\n                },\n                enumerable: true,\n                configurable: true\n            });\n            RenderContextSize.prototype.init = function (ctx) {\n                this.$$ctx = ctx;\n                var desired = render.getNaturalCanvasSize(ctx.canvas);\n                this.$$desiredWidth = desired.width;\n                this.$$desiredHeight = desired.height;\n                this.$adjustCanvas();\n            };\n            RenderContextSize.prototype.queueResize = function (width, height) {\n                if (this.$$changed) {\n                    this.$$changed.width = width;\n                    this.$$changed.height = height;\n                }\n                else {\n                    this.$$changed = {\n                        width: width,\n                        height: height\n                    };\n                }\n                return this;\n            };\n            RenderContextSize.prototype.commitResize = function () {\n                if (this.$$changed) {\n                    if (Math.abs(this.$$changed.width - this.$$desiredWidth) < epsilon && Math.abs(this.$$changed.height - this.$$desiredHeight) < epsilon)\n                        return;\n                    this.$$desiredWidth = this.$$changed.width;\n                    this.$$desiredHeight = this.$$changed.height;\n                    this.$$changed = null;\n                    this.$adjustCanvas();\n                }\n                return this;\n            };\n            RenderContextSize.prototype.updateDpiRatio = function () {\n                if (this.$$lastDpiRatio === this.dpiRatio)\n                    return false;\n                this.$adjustCanvas();\n                return true;\n            };\n            RenderContextSize.prototype.$adjustCanvas = function () {\n                var canvas = this.$$ctx.canvas;\n                var dpiRatio = this.dpiRatio;\n                if (Math.abs(dpiRatio - 1) < epsilon) {\n                    canvas.width = this.desiredWidth;\n                    canvas.height = this.desiredHeight;\n                }\n                else {\n                    canvas.width = this.paintWidth;\n                    canvas.height = this.paintHeight;\n                    canvas.style.width = this.desiredWidth.toString() + \"px\";\n                    canvas.style.height = this.desiredHeight.toString() + \"px\";\n                }\n                this.$$lastDpiRatio = dpiRatio;\n            };\n            return RenderContextSize;\n        }());\n        render.RenderContextSize = RenderContextSize;\n    })(render = puck.render || (puck.render = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var render;\n    (function (render) {\n        var zoom;\n        (function (zoom_1) {\n            zoom_1.calc = (function () {\n                if (document.frames)\n                    return ie();\n                return chrome();\n            })();\n            function ie() {\n                return function () {\n                    var screen = document.frames.screen;\n                    var zoom = screen.deviceXDPI / screen.systemXDPI;\n                    return Math.round(zoom * 100) / 100;\n                };\n            }\n            function chrome() {\n                var svg;\n                function memoizeSvg() {\n                    if (!!svg || !document.body)\n                        return;\n                    svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n                    svg.setAttribute('version', '1.1');\n                    document.body.appendChild(svg);\n                    (function (style) {\n                        style.opacity = \"0.0\";\n                        style.position = \"absolute\";\n                        style.left = \"-300px\";\n                    })(svg.style);\n                }\n                return function () {\n                    memoizeSvg();\n                    return !svg ? 1 : svg.currentScale;\n                };\n            }\n        })(zoom = render.zoom || (render.zoom = {}));\n    })(render = puck.render || (puck.render = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var stencil;\n    (function (stencil) {\n        stencil.empty = {\n            draft: function (bag) {\n            },\n            draw: function (ctx, bag) {\n            },\n        };\n    })(stencil = puck.stencil || (puck.stencil = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var stencil;\n    (function (stencil) {\n        stencil.path = {\n            draft: function (bag) {\n                var comp = bag.composite;\n                comp.bounder\n                    .getFillRect(bag.fillRect)\n                    .getStrokeRect(bag.strokeRect);\n            },\n            draw: function (ctx, bag) {\n                var fr = bag.fillRect;\n                if (fr.width <= 0 || fr.height <= 0) {\n                    return;\n                }\n                var raw = ctx.raw, state = bag.state;\n                raw.beginPath();\n                state.path.draw(raw);\n            },\n        };\n    })(stencil = puck.stencil || (puck.stencil = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var text;\n    (function (text) {\n        var ElementState = puck.element.ElementState;\n        var TextState = (function (_super) {\n            __extends(TextState, _super);\n            function TextState() {\n                _super.apply(this, arguments);\n            }\n            TextState.prototype.reset = function () {\n                _super.prototype.reset.call(this);\n                this.fill = null;\n                this.stroke = null;\n                this.strokeThickness = 0;\n                var f;\n                f = {\n                    family: puck.defaultFont.family,\n                    size: puck.defaultFont.size,\n                    stretch: puck.defaultFont.stretch,\n                    style: puck.defaultFont.style,\n                    weight: puck.defaultFont.weight,\n                    toString: function () {\n                        return puck.font.toString(f);\n                    },\n                };\n                this.font = f;\n                this.text = \"\";\n                return this;\n            };\n            return TextState;\n        }(ElementState));\n        text.TextState = TextState;\n    })(text = puck.text || (puck.text = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var visual;\n    (function (visual) {\n        var ElementComposite = puck.element.ElementComposite;\n        var VisualComposite = (function (_super) {\n            __extends(VisualComposite, _super);\n            function VisualComposite() {\n                _super.apply(this, arguments);\n            }\n            return VisualComposite;\n        }(ElementComposite));\n        visual.VisualComposite = VisualComposite;\n    })(visual = puck.visual || (puck.visual = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var walk;\n    (function (walk) {\n        var EMPTY_WALKER = {\n            next: function () {\n                return undefined;\n            }\n        };\n        function getWalker(el, reverse) {\n            if (typeof el.walk === \"function\")\n                return el.walk(reverse);\n            return EMPTY_WALKER;\n        }\n        walk.getWalker = getWalker;\n    })(walk = puck.walk || (puck.walk = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var down;\n        (function (down) {\n            var Processor = (function () {\n                function Processor() {\n                }\n                Processor.prototype.isTainted = function (bag) {\n                    return bag.composite.hasDirt(element.DirtyFlags.down);\n                };\n                Processor.prototype.process = function (bag) {\n                    var dirt = element.DirtyFlags.none;\n                    if (down.opacity.process(bag))\n                        dirt |= element.DirtyFlags.opacity;\n                    if (down.visible.process(bag))\n                        dirt |= element.DirtyFlags.visible;\n                    if (down.transform.process(bag))\n                        dirt |= element.DirtyFlags.transform;\n                    return dirt;\n                };\n                Processor.prototype.clear = function (bag) {\n                    bag.composite.untaint(element.DirtyFlags.down);\n                    return this;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }());\n            down.Processor = Processor;\n        })(down = element.down || (element.down = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var down;\n        (function (down) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    var dirt = _super.prototype.process.call(this, bag);\n                    for (var cur = bag.walker.next(); !!cur; cur = bag.walker.next()) {\n                        cur.composite.taint(dirt);\n                    }\n                    return dirt;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.down.Processor));\n            down.Processor = Processor;\n        })(down = container.down || (container.down = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var hit;\n        (function (hit) {\n            var mat3 = la.mat3;\n            var vec2 = la.vec2;\n            var rect = la.rect;\n            var Processor = (function () {\n                function Processor() {\n                }\n                Processor.prototype.process = function (el, ctx, pos, hitlist) {\n                    if (!this.prehit(el, ctx, pos))\n                        return;\n                    ctx.save();\n                    ctx.preapply(el.composite.transform);\n                    var inside = false;\n                    if (this.hit(el, ctx, pos, hitlist)) {\n                        inside = true;\n                        hitlist.unshift(el);\n                    }\n                    ctx.restore();\n                    return inside;\n                };\n                Processor.prototype.prehit = function (el, ctx, pos) {\n                    var comp = el.composite;\n                    if (!comp.visible || (comp.opacity * 255) < 0.5)\n                        return false;\n                    var localpos = mat3.transformVec2(ctx.currentTransform, pos, vec2.create(0, 0));\n                    return rect.containsVec2(comp.extents, localpos);\n                };\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    return false;\n                };\n                Processor.prototype.draw = function (el, ctx) {\n                    var sbag = {\n                        state: el.state,\n                        composite: el.composite,\n                        fillRect: null,\n                        strokeRect: null,\n                    };\n                    el.stencil.draw(ctx, sbag);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }());\n            hit.Processor = Processor;\n        })(hit = element.hit || (element.hit = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var hit;\n        (function (hit) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    for (var walker = el.walk(true), cur = walker.next(); !!cur; cur = walker.next()) {\n                        if (puck.engine.hit(el, ctx, pos, hitlist))\n                            return true;\n                    }\n                    return false;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.hit.Processor));\n            hit.Processor = Processor;\n        })(hit = container.hit || (container.hit = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var render;\n        (function (render) {\n            (function (SkipResult) {\n                SkipResult[SkipResult[\"none\"] = 0] = \"none\";\n                SkipResult[SkipResult[\"render\"] = 2] = \"render\";\n                SkipResult[SkipResult[\"post\"] = 4] = \"post\";\n                SkipResult[SkipResult[\"all\"] = 6] = \"all\";\n            })(render.SkipResult || (render.SkipResult = {}));\n            var SkipResult = render.SkipResult;\n            var Processor = (function () {\n                function Processor() {\n                }\n                Processor.prototype.process = function (bag) {\n                    var result = this.prerender(bag);\n                    if ((result & SkipResult.render) === 0) {\n                        this.render(bag);\n                    }\n                    if ((result & SkipResult.post) === 0) {\n                        this.postrender(bag);\n                    }\n                };\n                Processor.prototype.clear = function (bag) {\n                    bag.composite.untaint(element.DirtyFlags.invalidate);\n                    la.rect.init(0, 0, 0, 0, bag.composite.paint);\n                    return this;\n                };\n                Processor.prototype.prerender = function (bag) {\n                    if (!render.validate.process(bag))\n                        return SkipResult.all;\n                    if (!render.should.process(bag))\n                        return SkipResult.all;\n                    render.prepare.process(bag);\n                    render.narrow.process(bag);\n                    return SkipResult.none;\n                };\n                Processor.prototype.render = function (bag) {\n                    var sbag = this.createStencilBag(bag);\n                    bag.stencil.draft(sbag);\n                    bag.stencil.draw(bag.ctx, sbag);\n                };\n                Processor.prototype.postrender = function (bag) {\n                    bag.ctx.restore();\n                };\n                Processor.prototype.createStencilBag = function (bag) {\n                    return {\n                        state: bag.state,\n                        composite: bag.composite,\n                        fillRect: la.rect.init(0, 0, 0, 0),\n                        strokeRect: la.rect.init(0, 0, 0, 0),\n                    };\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }());\n            render.Processor = Processor;\n        })(render = element.render || (element.render = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var render;\n        (function (render) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.render = function (bag) {\n                    for (var cur = bag.walker.next(); !!cur; cur = bag.walker.next()) {\n                        puck.engine.render(cur, bag.ctx, bag.curregion);\n                    }\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.render.Processor));\n            render.Processor = Processor;\n        })(render = container.render || (container.render = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var up;\n        (function (up) {\n            var extents;\n            (function (extents) {\n                var rect = la.rect;\n                var DirtyFlags = puck.element.DirtyFlags;\n                var oldExtents = rect.init(0, 0, 0, 0);\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.extents))\n                        return false;\n                    rect.copyTo(comp.extents, oldExtents);\n                    rect.init(0, 0, 0, 0, comp.extents);\n                    for (var ccomps = bag.ccomposites, i = 0; i < ccomps.length; i++) {\n                        rect.union(comp.extents, ccomps[i].extents);\n                    }\n                    rect.transform(comp.extents, comp.transform, comp.extents);\n                    if (rect.equal(comp.extents, oldExtents))\n                        return false;\n                    rect.union(comp.paint, oldExtents);\n                    comp.taint(DirtyFlags.newbounds);\n                    return true;\n                }\n                extents.process = process;\n            })(extents = up.extents || (up.extents = {}));\n        })(up = container.up || (container.up = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var up;\n        (function (up) {\n            var invalidate;\n            (function (invalidate) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.invalidate))\n                        return false;\n                    var childPaint = la.rect.init(0, 0, 0, 0);\n                    for (var ccomps = bag.ccomposites, i = 0; i < ccomps.length; i++) {\n                        la.rect.union(childPaint, ccomps[i].paint);\n                    }\n                    la.rect.transform(childPaint, comp.transform, childPaint);\n                    la.rect.union(comp.paint, childPaint);\n                    return true;\n                }\n                invalidate.process = process;\n            })(invalidate = up.invalidate || (up.invalidate = {}));\n        })(up = container.up || (container.up = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var up;\n        (function (up) {\n            var Processor = (function () {\n                function Processor() {\n                }\n                Processor.prototype.isTainted = function (bag) {\n                    return bag.composite.hasDirt(element.DirtyFlags.up);\n                };\n                Processor.prototype.process = function (bag) {\n                    var dirt = element.DirtyFlags.none;\n                    if (up.extents.process(bag))\n                        dirt |= element.DirtyFlags.extents;\n                    up.newbounds.process(bag);\n                    return dirt;\n                };\n                Processor.prototype.clear = function (bag) {\n                    bag.composite.untaint(element.DirtyFlags.up);\n                    return this;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }());\n            up.Processor = Processor;\n        })(up = element.up || (element.up = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var up;\n        (function (up) {\n            var newbounds;\n            (function (newbounds) {\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(element.DirtyFlags.newbounds) || !comp.visible || (comp.opacity * 255) < 0.5)\n                        return false;\n                    comp.invalidate();\n                    return true;\n                }\n                newbounds.process = process;\n            })(newbounds = up.newbounds || (up.newbounds = {}));\n        })(up = element.up || (element.up = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var container;\n    (function (container) {\n        var up;\n        (function (up) {\n            var DirtyFlags = puck.element.DirtyFlags;\n            var newbounds = puck.element.up.newbounds;\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    var dirt = DirtyFlags.none;\n                    if (up.extents.process(bag))\n                        dirt |= DirtyFlags.extents;\n                    newbounds.process(bag);\n                    if (up.invalidate.process(bag))\n                        dirt |= DirtyFlags.invalidate;\n                    return dirt;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.up.Processor));\n            up.Processor = Processor;\n        })(up = container.up || (container.up = {}));\n    })(container = puck.container || (puck.container = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var down;\n        (function (down) {\n            var opacity;\n            (function (opacity) {\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(element.DirtyFlags.opacity))\n                        return false;\n                    var newOpacity = bag.pcomposite.opacity * bag.state.opacity;\n                    if (comp.opacity === newOpacity)\n                        return false;\n                    comp.taint(element.DirtyFlags.newbounds);\n                    comp.opacity = newOpacity;\n                    return true;\n                }\n                opacity.process = process;\n            })(opacity = down.opacity || (down.opacity = {}));\n        })(down = element.down || (element.down = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var down;\n        (function (down) {\n            var transform;\n            (function (transform) {\n                var mat3 = la.mat3;\n                var oldTransform = mat3.identity();\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(element.DirtyFlags.transform))\n                        return false;\n                    mat3.copyTo(comp.transform, oldTransform);\n                    var state = bag.state;\n                    var xo = state.mapTransformOrigin(comp);\n                    mat3.createTranslate(-xo.x, -xo.y, comp.transform);\n                    mat3.apply(comp.transform, state.transform);\n                    mat3.translate(comp.transform, xo.x, xo.y);\n                    mat3.translate(comp.transform, state.offset.x, state.offset.y);\n                    if (!mat3.equal(comp.transform, oldTransform)) {\n                        comp.taint(element.DirtyFlags.extents);\n                    }\n                    return true;\n                }\n                transform.process = process;\n            })(transform = down.transform || (down.transform = {}));\n        })(down = element.down || (element.down = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var down;\n        (function (down) {\n            var visible;\n            (function (visible) {\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(element.DirtyFlags.visible))\n                        return false;\n                    var newVisible = bag.pcomposite.visible && (bag.state.visible === true);\n                    if (comp.visible === newVisible)\n                        return false;\n                    comp.taint(element.DirtyFlags.newbounds);\n                    comp.visible = newVisible;\n                    return true;\n                }\n                visible.process = process;\n            })(visible = down.visible || (down.visible = {}));\n        })(down = element.down || (element.down = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var render;\n        (function (render) {\n            var narrow;\n            (function (narrow) {\n                function process(bag) {\n                }\n                narrow.process = process;\n            })(narrow = render.narrow || (render.narrow = {}));\n        })(render = element.render || (element.render = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var render;\n        (function (render) {\n            var prepare;\n            (function (prepare) {\n                function process(bag) {\n                    bag.ctx.save();\n                    bag.ctx.preapply(bag.composite.transform);\n                }\n                prepare.process = process;\n            })(prepare = render.prepare || (render.prepare = {}));\n        })(render = element.render || (element.render = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var render;\n        (function (render) {\n            var should;\n            (function (should) {\n                var rect = la.rect;\n                function process(bag) {\n                    var r = rect.transform(bag.composite.extents, bag.ctx.currentTransform, bag.curregion);\n                    rect.roundOut(r);\n                    rect.intersection(r, bag.inregion);\n                    return r.width > 0 && r.height > 0;\n                }\n                should.process = process;\n            })(should = render.should || (render.should = {}));\n        })(render = element.render || (element.render = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var render;\n        (function (render) {\n            var validate;\n            (function (validate) {\n                function process(bag) {\n                    var comp = bag.composite;\n                    return !!comp.visible && (comp.opacity * 255) >= 0.5;\n                }\n                validate.process = process;\n            })(validate = render.validate || (render.validate = {}));\n        })(render = element.render || (element.render = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var element;\n    (function (element) {\n        var up;\n        (function (up) {\n            var extents;\n            (function (extents) {\n                var rect = la.rect;\n                var oldExtents = rect.init(0, 0, 0, 0);\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(element.DirtyFlags.extents))\n                        return false;\n                    var state = bag.state;\n                    rect.copyTo(comp.extents, oldExtents);\n                    rect.init(0, 0, state.size.width, state.size.height, comp.extents);\n                    rect.grow(comp.extents, comp.padding);\n                    rect.transform(comp.extents, comp.transform, comp.extents);\n                    if (rect.equal(comp.extents, oldExtents))\n                        return false;\n                    rect.union(comp.paint, oldExtents);\n                    comp.taint(element.DirtyFlags.newbounds);\n                    return true;\n                }\n                extents.process = process;\n            })(extents = up.extents || (up.extents = {}));\n        })(up = element.up || (element.up = {}));\n    })(element = puck.element || (puck.element = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var font;\n    (function (font_2) {\n        var height;\n        (function (height_1) {\n            var heights = [];\n            height_1.cache = {\n                hits: 0,\n                misses: 0\n            };\n            function get(font) {\n                var serial = font.toString();\n                var height = heights[serial];\n                if (height == null) {\n                    heights[serial] = height = height_1.measure(serial);\n                    height_1.cache.misses++;\n                }\n                else {\n                    height_1.cache.hits++;\n                }\n                return height;\n            }\n            height_1.get = get;\n        })(height = font_2.height || (font_2.height = {}));\n    })(font = puck.font || (puck.font = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var font;\n    (function (font_3) {\n        var height;\n        (function (height) {\n            var dummy;\n            function measure(font) {\n                var serial = font.toString();\n                if (!dummy) {\n                    dummy = document.createElement(\"div\");\n                    dummy.appendChild(document.createTextNode(\"Hg\"));\n                    document.body.appendChild(dummy);\n                }\n                dummy.style.display = \"\";\n                dummy.style.font = serial;\n                var result = dummy.offsetHeight;\n                dummy.style.display = \"none\";\n                return result;\n            }\n            height.measure = measure;\n        })(height = font_3.height || (font_3.height = {}));\n    })(font = puck.font || (puck.font = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var font;\n    (function (font_4) {\n        var width;\n        (function (width) {\n            var dummy;\n            function measure(font, text) {\n                if (!dummy) {\n                    dummy = document.createElement(\"canvas\");\n                }\n                var ctx = dummy.getContext(\"2d\");\n                ctx.font = font.toString();\n                return ctx.measureText(text).width;\n            }\n            width.measure = measure;\n        })(width = font_4.width || (font_4.width = {}));\n    })(font = puck.font || (puck.font = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var down;\n        (function (down) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    down.stretch.process(bag);\n                    return _super.prototype.process.call(this, bag);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.down.Processor));\n            down.Processor = Processor;\n        })(down = image.down || (image.down = {}));\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var down;\n        (function (down) {\n            var stretch;\n            (function (stretch) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                var mat3 = la.mat3;\n                var oldStretchTransform = mat3.identity();\n                function process(bag) {\n                    var state = bag.state, comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.stretch))\n                        return false;\n                    mat3.copyTo(comp.stretchTransform, oldStretchTransform);\n                    puck.fit.transform.calc(comp.stretchTransform, state.getEffectiveStretch(), state.natural, state.size);\n                    if (mat3.equal(comp.stretchTransform, oldStretchTransform))\n                        return false;\n                    comp.taint(DirtyFlags.extents);\n                    return true;\n                }\n                stretch.process = process;\n            })(stretch = down.stretch || (down.stretch = {}));\n        })(down = image.down || (image.down = {}));\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var hit;\n        (function (hit) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    return true;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.hit.Processor));\n            hit.Processor = Processor;\n        })(hit = image.hit || (image.hit = {}));\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var up;\n        (function (up) {\n            var extents;\n            (function (extents) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                var rect = la.rect;\n                var oldExtents = rect.init(0, 0, 0, 0);\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.extents))\n                        return false;\n                    var state = bag.state;\n                    rect.copyTo(comp.extents, oldExtents);\n                    rect.init(0, 0, 0, 0, comp.extents);\n                    puck.fit.extents.calc(comp.extents, state.getEffectiveStretch(), state.natural, state.size);\n                    rect.transform(comp.extents, comp.transform, comp.extents);\n                    if (rect.equal(comp.extents, oldExtents))\n                        return false;\n                    rect.union(comp.paint, oldExtents);\n                    comp.taint(DirtyFlags.newbounds);\n                    return true;\n                }\n                extents.process = process;\n            })(extents = up.extents || (up.extents = {}));\n        })(up = image.up || (image.up = {}));\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var image;\n    (function (image) {\n        var up;\n        (function (up) {\n            var DirtyFlags = puck.element.DirtyFlags;\n            var newbounds = puck.element.up.newbounds;\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    var dirt = DirtyFlags.none;\n                    if (up.extents.process(bag))\n                        dirt |= DirtyFlags.extents;\n                    newbounds.process(bag);\n                    return dirt;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.up.Processor));\n            up.Processor = Processor;\n        })(up = image.up || (image.up = {}));\n    })(image = puck.image || (puck.image = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var down;\n        (function (down) {\n            var natural;\n            (function (natural) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                var oldNatural = la.rect.init(0, 0, 0, 0);\n                var activeFill = la.rect.init(0, 0, 0, 0);\n                var activeStroke = la.rect.init(0, 0, 0, 0);\n                function process(bag) {\n                    var state = bag.state, comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.padding))\n                        return false;\n                    comp.bounder.reset();\n                    la.rect.copyTo(comp.natural, oldNatural);\n                    comp.bounder.calc(state)\n                        .getFillRect(activeFill)\n                        .getStrokeRect(activeStroke);\n                    la.rect.union(activeFill, activeStroke, comp.natural);\n                    if (!la.rect.equal(comp.natural, oldNatural))\n                        return false;\n                    comp.taint(DirtyFlags.stretch);\n                    return true;\n                }\n                natural.process = process;\n            })(natural = down.natural || (down.natural = {}));\n        })(down = path.down || (path.down = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var down;\n        (function (down) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    down.natural.process(bag);\n                    down.stretch.process(bag);\n                    return _super.prototype.process.call(this, bag);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.down.Processor));\n            down.Processor = Processor;\n        })(down = path.down || (path.down = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var down;\n        (function (down) {\n            var stretch;\n            (function (stretch) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                var mat3 = la.mat3;\n                var oldStretchTransform = mat3.identity();\n                function process(bag) {\n                    var state = bag.state, comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.stretch))\n                        return false;\n                    mat3.copyTo(comp.stretchTransform, oldStretchTransform);\n                    puck.fit.transform.calc(comp.stretchTransform, state.getEffectiveStretch(comp), comp.natural, state.size);\n                    if (mat3.equal(comp.stretchTransform, oldStretchTransform))\n                        return false;\n                    comp.taint(DirtyFlags.extents);\n                    return true;\n                }\n                stretch.process = process;\n            })(stretch = down.stretch || (down.stretch = {}));\n        })(down = path.down || (path.down = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var visual;\n    (function (visual) {\n        var hit;\n        (function (hit) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.prehit = function (el, ctx, pos) {\n                    if (!_super.prototype.prehit.call(this, el, ctx, pos))\n                        return false;\n                    var state = el.state;\n                    return !!state.fill || (!!state.stroke && state.strokeThickness > 0);\n                };\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    ctx.save();\n                    this.transformLocal(el, ctx);\n                    this.draw(el, ctx);\n                    var state = el.state, px = pos[0], py = pos[1], inside = false;\n                    if (!!state.fill && ctx.raw.isPointInPath(px, py)) {\n                        inside = true;\n                    }\n                    else if (!!state.stroke && ctx.isPointInStrokeEx(px, py, state.strokeThickness)) {\n                        inside = true;\n                    }\n                    ctx.restore();\n                    return inside;\n                };\n                Processor.prototype.transformLocal = function (el, ctx) {\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.hit.Processor));\n            hit.Processor = Processor;\n        })(hit = visual.hit || (visual.hit = {}));\n    })(visual = puck.visual || (puck.visual = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path_2) {\n        var hit;\n        (function (hit) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    ctx.save();\n                    this.transformLocal(el, ctx);\n                    this.draw(el, ctx);\n                    var state = el.state, px = pos[0], py = pos[1], inside = false;\n                    if (!!state.fill && ctx.raw.isPointInPath(px, py)) {\n                        inside = true;\n                    }\n                    else if (!!state.stroke) {\n                        ctx.setStrokeExtras(state.strokeLineCap, state.strokeLineJoin, state.strokeMiterLimit);\n                        if (ctx.isPointInStrokeEx(px, py, state.strokeThickness)) {\n                            inside = true;\n                        }\n                    }\n                    ctx.restore();\n                    return inside;\n                };\n                Processor.prototype.transformLocal = function (path, ctx) {\n                    ctx.preapply(path.composite.stretchTransform);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.visual.hit.Processor));\n            hit.Processor = Processor;\n        })(hit = path_2.hit || (path_2.hit = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var visual;\n    (function (visual) {\n        var render;\n        (function (render) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.render = function (bag) {\n                    var state = bag.state;\n                    if (!state.fill && !state.stroke)\n                        return false;\n                    var ctx = bag.ctx;\n                    ctx.save();\n                    var sbag = this.createStencilBag(bag);\n                    bag.stencil.draft(sbag);\n                    this.transformLocal(ctx, sbag);\n                    bag.stencil.draw(ctx, sbag);\n                    this.fill(ctx, state, sbag);\n                    this.stroke(ctx, state, sbag);\n                    ctx.restore();\n                };\n                Processor.prototype.transformLocal = function (ctx, bag) {\n                };\n                Processor.prototype.fill = function (ctx, state, sbag) {\n                    if (!state.fill)\n                        return;\n                    ctx.fillEx(sbag.fillRect, state.fill);\n                };\n                Processor.prototype.stroke = function (ctx, state, sbag) {\n                    if (!state.stroke || state.strokeThickness <= 0)\n                        return;\n                    ctx.strokeEx(sbag.strokeRect, state.stroke, state.strokeThickness);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.render.Processor));\n            render.Processor = Processor;\n        })(render = visual.render || (visual.render = {}));\n    })(visual = puck.visual || (puck.visual = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var render;\n        (function (render) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.transformLocal = function (ctx, bag) {\n                    var comp = bag.composite;\n                    ctx.preapply(comp.stretchTransform);\n                };\n                Processor.prototype.fill = function (ctx, state, sbag) {\n                    if (!state.fill)\n                        return;\n                    ctx.fillEx(sbag.fillRect, state.fill, state.fillRule);\n                };\n                Processor.prototype.stroke = function (ctx, state, sbag) {\n                    if (!state.stroke || state.strokeThickness <= 0)\n                        return;\n                    ctx.setStrokeExtras(state.strokeLineCap, state.strokeLineJoin, state.strokeMiterLimit);\n                    ctx.strokeEx(sbag.strokeRect, state.stroke, state.strokeThickness);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.visual.render.Processor));\n            render.Processor = Processor;\n        })(render = path.render || (path.render = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var up;\n        (function (up) {\n            var extents;\n            (function (extents) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                var rect = la.rect;\n                var oldExtents = rect.init(0, 0, 0, 0);\n                function process(bag) {\n                    var comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.extents))\n                        return false;\n                    var state = bag.state;\n                    rect.copyTo(comp.extents, oldExtents);\n                    rect.init(0, 0, 0, 0, comp.extents);\n                    puck.fit.extents.calc(comp.extents, state.getEffectiveStretch(comp), comp.natural, state.size);\n                    rect.transform(comp.extents, comp.transform, comp.extents);\n                    if (rect.equal(comp.extents, oldExtents))\n                        return false;\n                    rect.union(comp.paint, oldExtents);\n                    comp.taint(DirtyFlags.newbounds);\n                    return true;\n                }\n                extents.process = process;\n            })(extents = up.extents || (up.extents = {}));\n        })(up = path.up || (path.up = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var path;\n    (function (path) {\n        var up;\n        (function (up) {\n            var DirtyFlags = puck.element.DirtyFlags;\n            var newbounds = puck.element.up.newbounds;\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    var dirt = DirtyFlags.none;\n                    if (up.extents.process(bag))\n                        dirt |= DirtyFlags.extents;\n                    newbounds.process(bag);\n                    return dirt;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.up.Processor));\n            up.Processor = Processor;\n        })(up = path.up || (path.up = {}));\n    })(path = puck.path || (puck.path = {}));\n})(puck || (puck = {}));\nif (!CanvasRenderingContext2D.prototype.hasOwnProperty(\"backingStorePixelRatio\")) {\n    Object.defineProperty(CanvasRenderingContext2D.prototype, \"backingStorePixelRatio\", {\n        get: function () {\n            var ctx = this;\n            return ctx.webkitBackingStorePixelRatio\n                || ctx.mozBackingStorePixelRatio\n                || ctx.msBackingStorePixelRatio\n                || ctx.oBackingStorePixelRatio\n                || 1;\n        }\n    });\n}\nif (!CanvasRenderingContext2D.prototype.ellipse) {\n    CanvasRenderingContext2D.prototype.ellipse = function (x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.save();\n        this.translate(x, y);\n        this.rotate(rotation);\n        this.scale(radiusX, radiusY);\n        this.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n        this.restore();\n    };\n}\nif (!CanvasRenderingContext2D.prototype.isPointInStroke) {\n    CanvasRenderingContext2D.prototype.isPointInStroke = function (x, y) {\n        return false;\n    };\n}\nvar puck;\n(function (puck) {\n    var polyline;\n    (function (polyline) {\n        var down;\n        (function (down) {\n            var points;\n            (function (points) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                function process(bag) {\n                    var state = bag.state, comp = bag.composite, path = state.path;\n                    if (!path) {\n                        comp.bounder.setPath(path = state.path = new curve.Path());\n                    }\n                    else if (!path.isEmpty) {\n                        return false;\n                    }\n                    for (var first = true, it = state.points.iter(), result = it.next(); !result.done; result = it.next()) {\n                        var cur = result.value;\n                        if (first) {\n                            first = false;\n                            path.moveTo(cur.x, cur.y);\n                        }\n                        else {\n                            path.lineTo(cur.x, cur.y);\n                        }\n                    }\n                    if (state.closed)\n                        path.closePath();\n                    comp.taint(DirtyFlags.padding);\n                    return true;\n                }\n                points.process = process;\n            })(points = down.points || (down.points = {}));\n        })(down = polyline.down || (polyline.down = {}));\n    })(polyline = puck.polyline || (puck.polyline = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var polyline;\n    (function (polyline) {\n        var down;\n        (function (down) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    down.points.process(bag);\n                    return _super.prototype.process.call(this, bag);\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.path.down.Processor));\n            down.Processor = Processor;\n        })(down = polyline.down || (polyline.down = {}));\n    })(polyline = puck.polyline || (puck.polyline = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var text;\n    (function (text) {\n        var hit;\n        (function (hit) {\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.prehit = function (el, ctx, pos) {\n                    if (!_super.prototype.prehit.call(this, el, ctx, pos))\n                        return false;\n                    var state = el.state;\n                    return !!state.fill || (!!state.stroke && state.strokeThickness > 0);\n                };\n                Processor.prototype.hit = function (el, ctx, pos, hitlist) {\n                    return true;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.hit.Processor));\n            hit.Processor = Processor;\n        })(hit = text.hit || (text.hit = {}));\n    })(text = puck.text || (puck.text = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var text;\n    (function (text) {\n        var render;\n        (function (render) {\n            var isFirefox = /firefox/i.test(navigator.userAgent);\n            var paintRegion = la.rect.init(0, 0, 0, 0);\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.render = function (bag) {\n                    var state = bag.state, noStroke = !state.stroke || state.strokeThickness <= 0;\n                    if (!state.fill && noStroke)\n                        return false;\n                    var ctx = bag.ctx, raw = ctx.raw, comp = bag.composite;\n                    ctx.save();\n                    raw.beginPath();\n                    raw.font = state.font.toString();\n                    raw.textAlign = \"left\";\n                    paintRegion.width = comp.extents.width;\n                    paintRegion.height = comp.extents.height;\n                    if (state.fill)\n                        this.fill(raw, state, paintRegion);\n                    if (!noStroke)\n                        this.stroke(raw, state, paintRegion);\n                    ctx.restore();\n                };\n                Processor.prototype.fill = function (ctx, state, region) {\n                    state.fill.setup(ctx, region);\n                    ctx.fillStyle = state.fill.toHtml5Object();\n                    if (isFirefox) {\n                        ctx.textBaseline = \"bottom\";\n                        ctx.fillText(state.text, 0, state.size.height);\n                    }\n                    else {\n                        ctx.textBaseline = \"top\";\n                        ctx.fillText(state.text, 0, 0);\n                    }\n                };\n                Processor.prototype.stroke = function (ctx, state, region) {\n                    state.stroke.setup(ctx, region);\n                    ctx.strokeStyle = state.stroke.toHtml5Object();\n                    ctx.lineWidth = state.strokeThickness;\n                    if (isFirefox) {\n                        ctx.textBaseline = \"bottom\";\n                        ctx.strokeText(state.text, 0, state.size.height);\n                    }\n                    else {\n                        ctx.textBaseline = \"top\";\n                        ctx.strokeText(state.text, 0, 0);\n                    }\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.render.Processor));\n            render.Processor = Processor;\n        })(render = text.render || (text.render = {}));\n    })(text = puck.text || (puck.text = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var text;\n    (function (text) {\n        var up;\n        (function (up) {\n            var font;\n            (function (font) {\n                var DirtyFlags = puck.element.DirtyFlags;\n                function process(bag) {\n                    var state = bag.state, comp = bag.composite;\n                    if (!comp.hasDirt(DirtyFlags.font))\n                        return false;\n                    var size = state.size, oldWidth = size.width, oldHeight = size.height;\n                    size.width = puck.font.width.measure(state.font, state.text);\n                    size.height = puck.font.height.get(state.font);\n                    if (oldWidth !== size.width || oldHeight !== size.height) {\n                        comp.taint(DirtyFlags.extents);\n                        return true;\n                    }\n                    return false;\n                }\n                font.process = process;\n            })(font = up.font || (up.font = {}));\n        })(up = text.up || (text.up = {}));\n    })(text = puck.text || (puck.text = {}));\n})(puck || (puck = {}));\nvar puck;\n(function (puck) {\n    var text;\n    (function (text) {\n        var up;\n        (function (up) {\n            var DirtyFlags = puck.element.DirtyFlags;\n            var Processor = (function (_super) {\n                __extends(Processor, _super);\n                function Processor() {\n                    _super.apply(this, arguments);\n                }\n                Processor.prototype.process = function (bag) {\n                    var dirt = DirtyFlags.none;\n                    up.font.process(bag);\n                    dirt |= _super.prototype.process.call(this, bag);\n                    return dirt;\n                };\n                Processor.instance = new Processor();\n                return Processor;\n            }(puck.element.up.Processor));\n            up.Processor = Processor;\n        })(up = text.up || (text.up = {}));\n    })(text = puck.text || (puck.text = {}));\n})(puck || (puck = {}));\n","module puck {\n    export var version = '0.1.0';\n}","namespace puck {\n    export enum BrushMappingMode {\n        relativeToBounds = 0,\n        absolute = 1,\n    }\n}","namespace puck {\n    var NoAlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\n    var AlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\n\n    export class Color {\n        r: number = 0;\n        g: number = 0;\n        b: number = 0;\n        a: number = 1.0;\n\n        constructor(color?: Color|string) {\n            if (color instanceof Color) {\n                this.r = color.r;\n                this.g = color.g;\n                this.b = color.b;\n                this.a = color.a;\n            } else if (typeof color === \"string\") {\n                parse(this, color);\n            }\n        }\n\n        add(color2: Color) {\n            var c = new Color();\n            c.r = this.r + color2.r;\n            c.g = this.g + color2.g;\n            c.b = this.b + color2.b;\n            c.a = this.a + color2.a;\n            return c;\n        }\n\n        subtract(color2: Color) {\n            var c = new Color();\n            c.r = this.r - color2.r;\n            c.g = this.g - color2.g;\n            c.b = this.b - color2.b;\n            c.a = this.a - color2.a;\n            return c;\n        }\n\n        multiply(factor: number) {\n            var c = new Color();\n            c.r = this.r * factor;\n            c.g = this.g * factor;\n            c.b = this.b * factor;\n            c.a = this.a * factor;\n            return c;\n        }\n\n        toString() {\n            var r = Math.round(this.r) || 0;\n            var g = Math.round(this.g) || 0;\n            var b = Math.round(this.b) || 0;\n            var a = this.a || 0;\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\n        }\n\n        toHexString(): string {\n            var ah = (this.a * 255).toString(16),\n                rh = this.r.toString(16),\n                gh = this.g.toString(16),\n                bh = this.b.toString(16);\n            return `#${ah}${rh}${gh}${bh}`;\n        }\n\n        toHexStringNoAlpha(): string {\n            var rh = this.r.toString(16),\n                gh = this.g.toString(16),\n                bh = this.b.toString(16);\n            return `#${rh}${gh}${bh}`;\n        }\n\n        static equals(color1: Color, color2: Color): boolean {\n            if (!color1) {\n                return !color2;\n            }\n            if (!color2) {\n                return false;\n            }\n            return color1.r === color2.r\n                && color1.g === color2.g\n                && color1.b === color2.b\n                && color1.a === color2.a;\n        }\n\n        static lerp(start: Color, end: Color, p: number): Color {\n            var c = new Color();\n            c.r = start.r + (end.r - start.r) * p;\n            c.g = start.g + (end.g - start.g) * p;\n            c.b = start.b + (end.b - start.b) * p;\n            c.a = start.a + (end.a - start.a) * p;\n            return c;\n        }\n\n        static fromRgba(r: number, g: number, b: number, a: number): Color {\n            var c = new Color();\n            c.r = r;\n            c.g = g;\n            c.b = b;\n            c.a = a;\n            return c;\n        }\n\n        static fromHex(hex: string): Color {\n            var c = new Color();\n            parseHex(c, hex);\n            return c;\n        }\n    }\n\n    export var KnownColors = {\n        AliceBlue: Color.fromHex(\"#FFF0F8FF\"),\n        AntiqueWhite: Color.fromHex(\"#FFFAEBD7\"),\n        Aqua: Color.fromHex(\"#FF00FFFF\"),\n        Aquamarine: Color.fromHex(\"#FF7FFFD4\"),\n        Azure: Color.fromHex(\"#FFF0FFFF\"),\n        Beige: Color.fromHex(\"#FFF5F5DC\"),\n        Bisque: Color.fromHex(\"#FFFFE4C4\"),\n        Black: Color.fromHex(\"#FF000000\"),\n        BlanchedAlmond: Color.fromHex(\"#FFFFEBCD\"),\n        Blue: Color.fromHex(\"#FF0000FF\"),\n        BlueViolet: Color.fromHex(\"#FF8A2BE2\"),\n        Brown: Color.fromHex(\"#FFA52A2A\"),\n        BurlyWood: Color.fromHex(\"#FFDEB887\"),\n        CadetBlue: Color.fromHex(\"#FF5F9EA0\"),\n        Chartreuse: Color.fromHex(\"#FF7FFF00\"),\n        Chocolate: Color.fromHex(\"#FFD2691E\"),\n        Coral: Color.fromHex(\"#FFFF7F50\"),\n        CornflowerBlue: Color.fromHex(\"#FF6495ED\"),\n        Cornsilk: Color.fromHex(\"#FFFFF8DC\"),\n        Crimson: Color.fromHex(\"#FFDC143C\"),\n        Cyan: Color.fromHex(\"#FF00FFFF\"),\n        DarkBlue: Color.fromHex(\"#FF00008B\"),\n        DarkCyan: Color.fromHex(\"#FF008B8B\"),\n        DarkGoldenrod: Color.fromHex(\"#FFB8860B\"),\n        DarkGray: Color.fromHex(\"#FFA9A9A9\"),\n        DarkGreen: Color.fromHex(\"#FF006400\"),\n        DarkKhaki: Color.fromHex(\"#FFBDB76B\"),\n        DarkMagenta: Color.fromHex(\"#FF8B008B\"),\n        DarkOliveGreen: Color.fromHex(\"#FF556B2F\"),\n        DarkOrange: Color.fromHex(\"#FFFF8C00\"),\n        DarkOrchid: Color.fromHex(\"#FF9932CC\"),\n        DarkRed: Color.fromHex(\"#FF8B0000\"),\n        DarkSalmon: Color.fromHex(\"#FFE9967A\"),\n        DarkSeaGreen: Color.fromHex(\"#FF8FBC8F\"),\n        DarkSlateBlue: Color.fromHex(\"#FF483D8B\"),\n        DarkSlateGray: Color.fromHex(\"#FF2F4F4F\"),\n        DarkTurquoise: Color.fromHex(\"#FF00CED1\"),\n        DarkViolet: Color.fromHex(\"#FF9400D3\"),\n        DeepPink: Color.fromHex(\"#FFFF1493\"),\n        DeepSkyBlue: Color.fromHex(\"#FF00BFFF\"),\n        DimGray: Color.fromHex(\"#FF696969\"),\n        DodgerBlue: Color.fromHex(\"#FF1E90FF\"),\n        Firebrick: Color.fromHex(\"#FFB22222\"),\n        FloralWhite: Color.fromHex(\"#FFFFFAF0\"),\n        ForestGreen: Color.fromHex(\"#FF228B22\"),\n        Fuchsia: Color.fromHex(\"#FFFF00FF\"),\n        Gainsboro: Color.fromHex(\"#FFDCDCDC\"),\n        GhostWhite: Color.fromHex(\"#FFF8F8FF\"),\n        Gold: Color.fromHex(\"#FFFFD700\"),\n        Goldenrod: Color.fromHex(\"#FFDAA520\"),\n        Gray: Color.fromHex(\"#FF808080\"),\n        Green: Color.fromHex(\"#FF008000\"),\n        GreenYellow: Color.fromHex(\"#FFADFF2F\"),\n        Honeydew: Color.fromHex(\"#FFF0FFF0\"),\n        HotPink: Color.fromHex(\"#FFFF69B4\"),\n        IndianRed: Color.fromHex(\"#FFCD5C5C\"),\n        Indigo: Color.fromHex(\"#FF4B0082\"),\n        Ivory: Color.fromHex(\"#FFFFFFF0\"),\n        Khaki: Color.fromHex(\"#FFF0E68C\"),\n        Lavender: Color.fromHex(\"#FFE6E6FA\"),\n        LavenderBlush: Color.fromHex(\"#FFFFF0F5\"),\n        LawnGreen: Color.fromHex(\"#FF7CFC00\"),\n        LemonChiffon: Color.fromHex(\"#FFFFFACD\"),\n        LightBlue: Color.fromHex(\"#FFADD8E6\"),\n        LightCoral: Color.fromHex(\"#FFF08080\"),\n        LightCyan: Color.fromHex(\"#FFE0FFFF\"),\n        LightGoldenrodYellow: Color.fromHex(\"#FFFAFAD2\"),\n        LightGray: Color.fromHex(\"#FFD3D3D3\"),\n        LightGreen: Color.fromHex(\"#FF90EE90\"),\n        LightPink: Color.fromHex(\"#FFFFB6C1\"),\n        LightSalmon: Color.fromHex(\"#FFFFA07A\"),\n        LightSeaGreen: Color.fromHex(\"#FF20B2AA\"),\n        LightSkyBlue: Color.fromHex(\"#FF87CEFA\"),\n        LightSlateGray: Color.fromHex(\"#FF778899\"),\n        LightSteelBlue: Color.fromHex(\"#FFB0C4DE\"),\n        LightYellow: Color.fromHex(\"#FFFFFFE0\"),\n        Lime: Color.fromHex(\"#FF00FF00\"),\n        LimeGreen: Color.fromHex(\"#FF32CD32\"),\n        Linen: Color.fromHex(\"#FFFAF0E6\"),\n        Magenta: Color.fromHex(\"#FFFF00FF\"),\n        Maroon: Color.fromHex(\"#FF800000\"),\n        MediumAquamarine: Color.fromHex(\"#FF66CDAA\"),\n        MediumBlue: Color.fromHex(\"#FF0000CD\"),\n        MediumOrchid: Color.fromHex(\"#FFBA55D3\"),\n        MediumPurple: Color.fromHex(\"#FF9370DB\"),\n        MediumSeaGreen: Color.fromHex(\"#FF3CB371\"),\n        MediumSlateBlue: Color.fromHex(\"#FF7B68EE\"),\n        MediumSpringGreen: Color.fromHex(\"#FF00FA9A\"),\n        MediumTurquoise: Color.fromHex(\"#FF48D1CC\"),\n        MediumVioletRed: Color.fromHex(\"#FFC71585\"),\n        MidnightBlue: Color.fromHex(\"#FF191970\"),\n        MintCream: Color.fromHex(\"#FFF5FFFA\"),\n        MistyRose: Color.fromHex(\"#FFFFE4E1\"),\n        Moccasin: Color.fromHex(\"#FFFFE4B5\"),\n        NavajoWhite: Color.fromHex(\"#FFFFDEAD\"),\n        Navy: Color.fromHex(\"#FF000080\"),\n        OldLace: Color.fromHex(\"#FFFDF5E6\"),\n        Olive: Color.fromHex(\"#FF808000\"),\n        OliveDrab: Color.fromHex(\"#FF6B8E23\"),\n        Orange: Color.fromHex(\"#FFFFA500\"),\n        OrangeRed: Color.fromHex(\"#FFFF4500\"),\n        Orchid: Color.fromHex(\"#FFDA70D6\"),\n        PaleGoldenrod: Color.fromHex(\"#FFEEE8AA\"),\n        PaleGreen: Color.fromHex(\"#FF98FB98\"),\n        PaleTurquoise: Color.fromHex(\"#FFAFEEEE\"),\n        PaleVioletRed: Color.fromHex(\"#FFDB7093\"),\n        PapayaWhip: Color.fromHex(\"#FFFFEFD5\"),\n        PeachPuff: Color.fromHex(\"#FFFFDAB9\"),\n        Peru: Color.fromHex(\"#FFCD853F\"),\n        Pink: Color.fromHex(\"#FFFFC0CB\"),\n        Plum: Color.fromHex(\"#FFDDA0DD\"),\n        PowderBlue: Color.fromHex(\"#FFB0E0E6\"),\n        Purple: Color.fromHex(\"#FF800080\"),\n        Red: Color.fromHex(\"#FFFF0000\"),\n        RosyBrown: Color.fromHex(\"#FFBC8F8F\"),\n        RoyalBlue: Color.fromHex(\"#FF4169E1\"),\n        SaddleBrown: Color.fromHex(\"#FF8B4513\"),\n        Salmon: Color.fromHex(\"#FFFA8072\"),\n        SandyBrown: Color.fromHex(\"#FFF4A460\"),\n        SeaGreen: Color.fromHex(\"#FF2E8B57\"),\n        SeaShell: Color.fromHex(\"#FFFFF5EE\"),\n        Sienna: Color.fromHex(\"#FFA0522D\"),\n        Silver: Color.fromHex(\"#FFC0C0C0\"),\n        SkyBlue: Color.fromHex(\"#FF87CEEB\"),\n        SlateBlue: Color.fromHex(\"#FF6A5ACD\"),\n        SlateGray: Color.fromHex(\"#FF708090\"),\n        Snow: Color.fromHex(\"#FFFFFAFA\"),\n        SpringGreen: Color.fromHex(\"#FF00FF7F\"),\n        SteelBlue: Color.fromHex(\"#FF4682B4\"),\n        Tan: Color.fromHex(\"#FFD2B48C\"),\n        Teal: Color.fromHex(\"#FF008080\"),\n        Thistle: Color.fromHex(\"#FFD8BFD8\"),\n        Tomato: Color.fromHex(\"#FFFF6347\"),\n        Transparent: Color.fromHex(\"#00FFFFFF\"),\n        Turquoise: Color.fromHex(\"#FF40E0D0\"),\n        Violet: Color.fromHex(\"#FFEE82EE\"),\n        Wheat: Color.fromHex(\"#FFF5DEB3\"),\n        White: Color.fromHex(\"#FFFFFFFF\"),\n        WhiteSmoke: Color.fromHex(\"#FFF5F5F5\"),\n        Yellow: Color.fromHex(\"#FFFFFF00\"),\n        YellowGreen: Color.fromHex(\"#FF9ACD32\")\n    };\n\n    function parse(c: Color, s: string) {\n        if (s[0] === \"#\") {\n            parseHex(c, s);\n        } else {\n            var known = KnownColors[s];\n            c.r = known.r;\n            c.g = known.g;\n            c.b = known.b;\n            c.a = known.a;\n        }\n    }\n\n    function parseHex(c: Color, hex: string) {\n        var match;\n        if ((match = AlphaRegex.exec(hex)) != null) {\n            c.a = parseInt(match[1], 16) / 255.0;\n            c.r = parseInt(match[2], 16);\n            c.g = parseInt(match[3], 16);\n            c.b = parseInt(match[4], 16);\n        } else if ((match = NoAlphaRegex.exec(hex)) != null) {\n            c.a = 1.0;\n            c.r = parseInt(match[1], 16);\n            c.g = parseInt(match[2], 16);\n            c.b = parseInt(match[3], 16);\n        }\n    }\n}","namespace puck.element {\n    export enum DirtyFlags {\n        none = 0,\n        opacity = 1 << 0,\n        visible = 1 << 1,\n        stretch = 1 << 2,\n        transform = 1 << 3,\n\n        font = 1 << 4,\n        padding = 1 << 5,\n        extents = 1 << 6,\n        newbounds = 1 << 7,\n        invalidate = 1 << 8,\n\n        down = DirtyFlags.opacity | DirtyFlags.visible | DirtyFlags.stretch | DirtyFlags.transform,\n        up = DirtyFlags.font | DirtyFlags.padding | DirtyFlags.extents | DirtyFlags.newbounds | DirtyFlags.invalidate,\n    }\n}","/// <reference path=\"element/DirtyFlags\" />\n\nnamespace puck {\n    import IElement = puck.element.IElement;\n    import IElementState = puck.element.IElementState;\n    import IElementComposite = puck.element.IElementComposite;\n    import IElementProcessor = puck.element.IElementProcessor;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Element implements IElement {\n        state: IElementState;\n        composite: IElementComposite;\n        processor: IElementProcessor;\n        stencil: stencil.IStencil;\n\n        constructor(state?: IElementState, composite?: IElementComposite) {\n            this.init(state, composite);\n            Object.freeze(this);\n        }\n\n        init(state?: IElementState, composite?: IElementComposite) {\n            this.state = (state || new element.ElementState()).reset();\n            this.composite = (composite || new element.ElementComposite()).reset();\n            this.processor = {\n                down: element.down.Processor.instance,\n                up: element.up.Processor.instance,\n                render: element.render.Processor.instance,\n                hit: element.hit.Processor.instance,\n            };\n            this.stencil = stencil.empty;\n        }\n\n        get opacity(): number {\n            return this.state.opacity;\n        }\n\n        set opacity(value: number) {\n            if (this.state.opacity !== value) {\n                this.state.opacity = value;\n                this.composite.taint(DirtyFlags.opacity);\n            }\n        }\n\n        get visible(): boolean {\n            return this.state.visible;\n        }\n\n        set visible(value: boolean) {\n            if (this.state.visible !== value) {\n                this.state.visible = value;\n                this.composite.taint(DirtyFlags.visible);\n            }\n        }\n\n        get transformOriginX(): number {\n            return this.state.transformOrigin.x;\n        }\n\n        set transformOriginX(value: number) {\n            if (this.state.transformOrigin.x !== value) {\n                this.state.transformOrigin.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get transformOriginY(): number {\n            return this.state.transformOrigin.y;\n        }\n\n        set transformOriginY(value: number) {\n            if (this.state.transformOrigin.y !== value) {\n                this.state.transformOrigin.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        resetTransform(): this {\n            la.mat3.identity(this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n\n        setTransform(mat: Float32Array): this {\n            la.mat3.copyTo(mat, this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n\n        applyTransform(mat: Float32Array): this {\n            la.mat3.apply(this.state.transform, mat);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n    }\n}","/// <reference path=\"Element\" />\n\nnamespace puck {\n    import IContainer = puck.container.IContainer;\n    import IElement = puck.element.IElement;\n    import IContainerState = puck.container.IContainerState;\n    import IContainerComposite = puck.container.IContainerComposite;\n    import IContainerProcessor = puck.container.IContainerProcessor;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Container implements IContainer {\n        state: IContainerState;\n        composite: IContainerComposite;\n        elements: IElement[];\n        processor: IContainerProcessor;\n\n        constructor(state?: IContainerState, composite?: IContainerComposite) {\n            this.init(state, composite);\n            Object.freeze(this);\n        }\n\n        init(state?: IContainerState, composite?: IContainerComposite) {\n            this.elements = [];\n            this.state = (state || new container.ContainerState()).reset();\n            this.composite = (composite || new container.ContainerComposite()).reset();\n            this.processor = {\n                down: container.down.Processor.instance,\n                up: container.up.Processor.instance,\n                render: container.render.Processor.instance,\n                hit: container.hit.Processor.instance,\n            };\n        }\n\n        walk(reverse?: boolean): walk.IWalker<element.IElement> {\n            var els = this.elements;\n            var i = -1;\n            if (!reverse) {\n                return <walk.IWalker<element.IElement>>{\n                    next(): element.IElement {\n                        i++;\n                        return els[i];\n                    }\n                };\n            }\n\n            i = els.length;\n            return <walk.IWalker<element.IElement>>{\n                next(): element.IElement {\n                    i--;\n                    return els[i];\n                }\n            };\n        }\n\n        get opacity(): number {\n            return this.state.opacity;\n        }\n\n        set opacity(value: number) {\n            if (this.state.opacity !== value) {\n                this.state.opacity = value;\n                this.composite.taint(DirtyFlags.opacity);\n            }\n        }\n\n        get visible(): boolean {\n            return this.state.visible;\n        }\n\n        set visible(value: boolean) {\n            if (this.state.visible !== value) {\n                this.state.visible = value;\n                this.composite.taint(DirtyFlags.visible);\n            }\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get transformOriginX(): number {\n            return this.state.transformOrigin.x;\n        }\n\n        set transformOriginX(value: number) {\n            if (this.state.transformOrigin.x !== value) {\n                this.state.transformOrigin.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get transformOriginY(): number {\n            return this.state.transformOrigin.y;\n        }\n\n        set transformOriginY(value: number) {\n            if (this.state.transformOrigin.y !== value) {\n                this.state.transformOrigin.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        resetTransform(): this {\n            la.mat3.identity(this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n\n        setTransform(mat: Float32Array): this {\n            la.mat3.copyTo(mat, this.state.transform);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n\n        applyTransform(mat: Float32Array): this {\n            la.mat3.apply(this.state.transform, mat);\n            this.composite.taint(DirtyFlags.transform);\n            return this;\n        }\n    }\n}","namespace puck {\n    import IVisualState = puck.visual.IVisualState;\n    import IVisualComposite = puck.visual.IVisualComposite;\n    import IVisualProcessor = puck.visual.IVisualProcessor;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    /*\n     * This represents an element that has a *fill*, *stroke*, and *strokeThickness*\n     * If *fill* or *stroke* change, visual needs repainted\n     * If a *fill* or *stroke* is cleared, *extents* needs updated\n     * If a *stroke* is cleared, *padding* needs updated\n     * If *strokeThickness* changes, *padding* needs updated\n     */\n\n    export class Visual extends Element implements visual.IVisual {\n        private $fillwatch: puck.internal.IWatcher = null;\n        private $strokewatch: puck.internal.IWatcher = null;\n\n        state: IVisualState;\n        composite: IVisualComposite;\n        processor: IVisualProcessor;\n\n        constructor(state?: IVisualState, composite?: IVisualComposite) {\n            super(state, composite);\n        }\n\n        init(state?: IVisualState, composite?: IVisualComposite) {\n            this.state = (state || new visual.VisualState()).reset();\n            this.composite = (composite || new visual.VisualComposite()).reset();\n            this.processor = {\n                down: element.down.Processor.instance,\n                up: element.up.Processor.instance,\n                render: visual.render.Processor.instance,\n                hit: visual.hit.Processor.instance,\n            };\n            this.stencil = stencil.visual;\n        }\n\n        get fill(): IBrush { return this.state.fill; }\n        set fill(value: IBrush) {\n            if (this.$fillwatch) {\n                this.$fillwatch.unwatch();\n                this.$fillwatch = null;\n            }\n            if ((!value) === (!this.state.fill)) {\n                // toggling fill on/off can disturb extents\n                this.composite.taint(DirtyFlags.extents).invalidate();\n            }\n            if (value !== this.state.fill) {\n                this.state.fill = value;\n                this.composite.invalidate();\n            }\n            if (value) {\n                this.$fillwatch = value.watch(() => this.composite.invalidate());\n            }\n        }\n\n        get stroke(): IBrush { return this.state.stroke; }\n        set stroke(value: IBrush) {\n            if (this.$strokewatch) {\n                this.$strokewatch.unwatch();\n                this.$strokewatch = null;\n            }\n            if ((!value) === (!this.state.stroke)) {\n                // toggling stroke on/off can disturb padding\n                this.composite.taint(DirtyFlags.padding).invalidate();\n            }\n            if (value !== this.state.stroke) {\n                this.state.stroke = value;\n                this.composite.invalidate();\n            }\n            if (value) {\n                this.$strokewatch = value.watch(() => this.composite.invalidate());\n            }\n        }\n\n        get strokeThickness(): number { return this.state.strokeThickness; }\n        set strokeThickness(value: number) {\n            if (value !== this.state.strokeThickness) {\n                this.state.strokeThickness = value;\n                this.composite.taint(DirtyFlags.padding);\n            }\n        }\n    }\n}","namespace puck.stencil {\n    import IVisualState = puck.visual.IVisualState;\n    import IVisualComposite = puck.visual.IVisualComposite;\n    import RenderContext = puck.render.RenderContext;\n    import IRect = la.IRect;\n\n    export var visual: IStencil = {\n        draft(bag: IStencilBag) {\n            var state = <IVisualState>bag.state,\n                size = state.size;\n\n            la.rect.init(0, 0, size.width, size.height, bag.fillRect);\n            la.rect.init(0, 0, size.width, size.height, bag.strokeRect);\n            if (state.stroke && state.strokeThickness > 0) {\n                // visual gets contained only if stroke exists and stroke thickness is non-zero\n                var ht = state.strokeThickness / 2;\n                la.rect.shrink(bag.fillRect, la.padding.init(ht, ht, ht, ht));\n            }\n        },\n        draw(ctx: RenderContext, bag: IStencilBag) {\n            ctx.raw.beginPath();\n            ctx.raw.closePath();\n        },\n    };\n}","/// <reference path=\"Visual\" />\n/// <reference path=\"stencil/visual\" />\n\nnamespace puck {\n    import DirtyFlags = puck.element.DirtyFlags;\n    import IVisualState = puck.visual.IVisualState;\n    import IVisualComposite = puck.visual.IVisualComposite;\n    var PI2 = Math.PI * 2;\n\n    export class Ellipse extends Visual {\n        init(state?: IVisualState, composite?: IVisualComposite) {\n            super.init(state, composite);\n            this.stencil = ellipseStencil;\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get width(): number {\n            return this.state.size.width;\n        }\n\n        set width(value: number) {\n            if (this.state.size.width !== value) {\n                this.state.size.width = value;\n                this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n            }\n        }\n\n        get height(): number {\n            return this.state.size.height;\n        }\n\n        set height(value: number) {\n            if (this.state.size.height !== value) {\n                this.state.size.height = value;\n                this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n            }\n        }\n    }\n\n    var ellipseStencil = <stencil.IStencil>{\n        draft: stencil.visual.draft,\n        draw(ctx: render.RenderContext, bag: stencil.IStencilBag) {\n            var fr = bag.fillRect;\n            if (fr.width <= 0 || fr.height <= 0) {\n                // degenerate\n                return;\n            }\n            var rx = fr.width / 2,\n                ry = fr.height / 2;\n            var raw = ctx.raw;\n            raw.beginPath();\n            raw.ellipse(fr.x + rx, fr.y + ry, rx, ry, 0, 0, PI2, false);\n            raw.closePath();\n        }\n    };\n}","namespace puck {\n    export enum FillRule {\n        evenodd = 0,\n        nonzero = 1,\n    }\n\n    export enum PenLineJoin {\n        miter = 0,\n        bevel = 1,\n        round = 2,\n    }\n\n    export enum PenLineCap {\n        flat = 0,\n        square = 1,\n        round = 2,\n        triangle = 3,\n    }\n}","namespace puck {\n    export var FontStyle = {\n        normal: \"normal\",\n        italic: \"italic\",\n        oblique: \"oblique\"\n    };\n\n    export var FontStretch = {\n        ultraCondensed: \"ultra-condensed\",\n        extraCondensed: \"extra-condensed\",\n        condensed: \"condensed\",\n        semiCondensed: \"semi-condensed\",\n        normal: \"normal\",\n        semiExpanded: \"semi-expanded\",\n        expanded: \"expanded\",\n        extraExpanded: \"extra-expanded\",\n        ultraExpanded: \"ultra-expanded\"\n    };\n\n    export enum FontWeight {\n        thin = 100,\n        extraLight = 200,\n        light = 300,\n        normal = 400,\n        medium = 500,\n        semiBold = 600,\n        bold = 700,\n        extraBold = 800,\n        black = 900,\n        extraBlack = 950,\n    }\n\n    export interface IFont {\n        family: string;\n        size: number;\n        stretch: string;\n        style: string;\n        weight: FontWeight;\n        toString(): string;\n    }\n\n    export var defaultFont: IFont = {\n        family: `\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif`,\n        size: 14,\n        stretch: FontStretch.normal,\n        style: FontStyle.normal,\n        weight: FontWeight.normal,\n        toString(): string {\n            return font.toString(defaultFont);\n        },\n    };\n}","namespace puck {\n    export class FrameDebug {\n        private $onBeginProcess: Function = null;\n        private $onEndProcess: Function = null;\n        private $onBeginRender: Function = null;\n        private $onEndRender: Function = null;\n\n        onBeginProcess(cb: Function): this {\n            this.$onBeginProcess = cb;\n            return this;\n        }\n\n        onEndProcess(cb: Function): this {\n            this.$onEndProcess = cb;\n            return this;\n        }\n\n        onBeginRender(cb: Function): this {\n            this.$onBeginRender = cb;\n            return this;\n        }\n\n        onEndRender(cb: Function): this {\n            this.$onEndRender = cb;\n            return this;\n        }\n\n        beginProcess() {\n            this.$onBeginProcess && this.$onBeginProcess();\n        }\n\n        endProcess() {\n            this.$onEndProcess && this.$onEndProcess();\n        }\n\n        beginRender() {\n            this.$onBeginRender && this.$onBeginRender();\n        }\n\n        endRender() {\n            this.$onEndRender && this.$onEndRender();\n        }\n    }\n}","namespace puck {\n    export abstract class GradientBrush implements IBrush {\n        private $cachedBrush: string | CanvasGradient | CanvasPattern = null;\n        private $cachedBounds = la.rect.init(0, 0, 0, 0);\n        protected $changer = new puck.internal.WatchChanger();\n\n        private $stops = new GradientStops();\n        private $spreadMethod: GradientSpreadMethod = GradientSpreadMethod.pad;\n        private $mappingMode: BrushMappingMode = BrushMappingMode.relativeToBounds;\n\n        constructor() {\n            this.$stops.watch(() => this.$changer.on());\n        }\n\n        get spreadMethod(): GradientSpreadMethod {\n            return this.$spreadMethod;\n        }\n\n        set spreadMethod(value: GradientSpreadMethod) {\n            if (this.$spreadMethod !== value) {\n                this.$spreadMethod = value;\n                this.$changer.on();\n            }\n        }\n\n        get mappingMode(): BrushMappingMode {\n            return this.$mappingMode;\n        }\n\n        set mappingMode(value: BrushMappingMode) {\n            if (this.$mappingMode !== value) {\n                this.$mappingMode = value;\n                this.$changer.on();\n            }\n        }\n\n        get stops(): GradientStops {\n            return this.$stops;\n        }\n\n        watch(onChanged: ()=>void): puck.internal.IWatcher {\n            return this.$changer.watch(onChanged);\n        }\n\n        setup(ctx: CanvasRenderingContext2D, region: la.IRect) {\n            if (this.$cachedBrush && la.rect.equal(this.$cachedBounds, region))\n                return;\n            la.rect.copyTo(region, this.$cachedBounds);\n            this.$cachedBrush = this.createBrush(ctx, region);\n        }\n\n        toHtml5Object(): any {\n            return this.$cachedBrush;\n        }\n\n        protected createBrush(ctx: CanvasRenderingContext2D, region: la.IRect): string | CanvasGradient | CanvasPattern {\n            switch (this.spreadMethod) {\n                case GradientSpreadMethod.pad:\n                    return this.createPad(ctx, region);\n                default:\n                case GradientSpreadMethod.reflect:\n                    return this.createReflect(ctx, region);\n                case GradientSpreadMethod.repeat:\n                    return this.createRepeat(ctx, region);\n            }\n        }\n\n        protected abstract createPad(ctx: CanvasRenderingContext2D, region: la.IRect): string | CanvasGradient | CanvasPattern;\n\n        protected abstract createReflect(ctx: CanvasRenderingContext2D, region: la.IRect): string | CanvasGradient | CanvasPattern;\n\n        protected abstract createRepeat(ctx: CanvasRenderingContext2D, region: la.IRect): string | CanvasGradient | CanvasPattern;\n\n        protected mapPoint(region: la.IRect, point: la.IPoint): la.IPoint {\n            var mapped = {x: point.x, y: point.y};\n            if (this.mappingMode === BrushMappingMode.relativeToBounds) {\n                mapped.x *= region.width;\n                mapped.y *= region.height;\n            }\n            mapped.x += region.x;\n            mapped.y += region.y;\n            return mapped;\n        }\n    }\n}","namespace puck {\n    export enum GradientSpreadMethod {\n        pad = 0,\n        reflect = 1,\n        repeat = 2,\n    }\n}","namespace puck {\n    export interface IGradientStop {\n        color: Color;\n        offset: number;\n    }\n\n    export class GradientStop implements IGradientStop {\n        constructor(public color: Color, public offset: number) {\n            Object.freeze(this);\n        }\n    }\n}","namespace puck {\n    export class PuckArray<T> {\n        protected $backing: T[] = [];\n        protected $changer = new puck.internal.WatchChanger();\n\n        get length() {\n            return this.$backing.length;\n        }\n\n        clear(): this {\n            this.$backing.length = 0;\n            this.$changer.on();\n            return this;\n        }\n\n        add(item: T): this {\n            this.$backing.push(item);\n            Object.freeze(item);\n            this.$changer.on();\n            return this;\n        }\n\n        addMany(items: T[]): this {\n            var backing = this.$backing;\n            for (var i = 0; i < items.length; i++) {\n                Object.freeze(items[i]);\n            }\n            backing.push.apply(backing, items);\n            this.$changer.on();\n            return this;\n        }\n\n        insert(index: number, item: T): this {\n            this.$backing.splice(index, 0, item);\n            Object.freeze(item);\n            this.$changer.on();\n            return this;\n        }\n\n        insertMany(index: number, items: T[]): this {\n            for (var i = 0; i < items.length; i++) {\n                Object.freeze(items[i]);\n            }\n            var backing = this.$backing;\n            for (var i = items.length - 1; i >= 0; i--) {\n                backing.splice(index, 0, items[i]);\n            }\n            this.$changer.on();\n            return this;\n        }\n\n        edit(oldItem: T, newItem: T): this {\n            return this.editAt(this.$backing.indexOf(oldItem), newItem);\n        }\n\n        editAt(index: number, newItem: T): this {\n            var backing = this.$backing;\n            if (index < 0 && index >= backing.length)\n                return this;\n            backing[index] = newItem;\n            Object.freeze(newItem);\n            this.$changer.on();\n            return this;\n        }\n\n        remove(item: T) {\n            return this.removeAt(this.$backing.indexOf(item));\n        }\n\n        removeAt(index: number) {\n            var backing = this.$backing;\n            if (index < 0 && index >= backing.length)\n                return this;\n            backing.splice(index, 1);\n            this.$changer.on();\n            return this;\n        }\n\n        watch(onChanged: () => void): puck.internal.IWatcher {\n            return this.$changer.watch(onChanged);\n        }\n\n        iter(): Iterator<T> {\n            return PuckArray.arrayIter<T>(this.$backing);\n        }\n\n        static arrayIter<T>(arr: T[]): Iterator<T> {\n            var i = -1;\n            return {\n                next(): IteratorResult<T> {\n                    i++;\n                    if (i >= arr.length)\n                        return {done: true};\n                    return {done: false, value: arr[i]};\n                }\n            }\n        }\n    }\n}","/// <reference path=\"PuckArray\" />\n\nnamespace puck {\n    /*\n     * Represents an array of GradientStop\n     * Includes change notification when array is mutated\n     */\n    export class GradientStops extends PuckArray<IGradientStop> {\n        paddedIter(): Iterator<IGradientStop> {\n            var min: IGradientStop = null;\n            var max: IGradientStop = null;\n\n            var tmp: IGradientStop[] = this.$backing.slice(0);\n            for (var i = 0; i < tmp.length; i++) {\n                let cur = tmp[i];\n                tmp.push(cur);\n                if (!min || cur.offset < min.offset)\n                    min = cur;\n                if (!max || cur.offset > max.offset)\n                    max = cur;\n            }\n\n            if (!!min)\n                tmp.unshift({offset: 0, color: min.color});\n            if (!!max)\n                tmp.push({offset: 1, color: max.color});\n\n            return PuckArray.arrayIter<IGradientStop>(tmp);\n        }\n    }\n}","namespace puck {\n    import IImageState = puck.image.IImageState;\n    import IImageComposite = puck.image.IImageComposite;\n    import IImageProcessor = puck.image.IImageProcessor;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    /*\n     * Represents an Image object to render\n     * By default, stretch is set to none which will use the image's natural size as extents\n     * If another stretch is represented, image will transform into width/height specified.\n     */\n\n    export class Image extends Element implements image.IImage {\n        state: IImageState;\n        composite: IImageComposite;\n        processor: IImageProcessor;\n        stencil: stencil.IStencil;\n\n        constructor(state?: IImageState, composite?: IImageComposite) {\n            super(state, composite);\n        }\n\n        init(state?: IImageState, composite?: IImageComposite) {\n            this.state = (state || new image.ImageState()).reset();\n            this.composite = (composite || new image.ImageComposite()).reset();\n            this.processor = {\n                down: image.down.Processor.instance,\n                up: image.up.Processor.instance,\n                render: element.render.Processor.instance,\n                hit: image.hit.Processor.instance,\n            };\n            this.stencil = imageStencil;\n            this.state.source.watch(\n                () => this.onSourceChanged(),\n                (e) => this.onSourceErrored(e),\n                () => this.onSourceLoaded());\n        }\n\n        get sourceUri(): string {\n            return this.state.source.uri;\n        }\n\n        // invalidations come through watcher\n        set sourceUri(value: string) {\n            this.state.source.uri = value;\n        }\n\n        get stretch(): Stretch {\n            return this.state.stretch;\n        }\n\n        set stretch(value: Stretch) {\n            if (this.state.stretch !== value) {\n                this.state.stretch = value;\n                this.composite.taint(DirtyFlags.stretch);\n            }\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get width(): number {\n            return this.state.size.width;\n        }\n\n        set width(value: number) {\n            if (this.state.size.width !== value) {\n                this.state.size.width = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        get height(): number {\n            return this.state.size.height;\n        }\n\n        set height(value: number) {\n            if (this.state.size.height !== value) {\n                this.state.size.height = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        protected onSourceChanged() {\n            this.setNaturalSize(0, 0);\n        }\n\n        protected onSourceErrored(err: any) {\n            console.error(\"error loading image\", err);\n        }\n\n        protected onSourceLoaded() {\n            var source = this.state.source;\n            this.setNaturalSize(source.naturalWidth, source.naturalHeight);\n        }\n\n        protected setNaturalSize(width: number, height: number) {\n            var naturalSize = this.state.natural;\n            naturalSize.width = width;\n            naturalSize.height = height;\n            this.composite.taint(DirtyFlags.stretch | DirtyFlags.extents).invalidate();\n        }\n    }\n\n    var imageStencil = <stencil.IStencil>{\n        draft(bag: stencil.IStencilBag) {\n        },\n        draw(ctx: render.RenderContext, bag: stencil.IStencilBag) {\n            var state = <IImageState>bag.state,\n                comp = <IImageComposite>bag.composite;\n            ctx.preapply(comp.stretchTransform);\n            state.source.draw(ctx.raw);\n        },\n    };\n}","/// <reference path=\"Container\" />\n\nnamespace puck {\n    import IContainerState = puck.container.IContainerState;\n    import IContainerComposite = puck.container.IContainerComposite;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Layer extends Container {\n        private $ctx: render.RenderContext;\n        private $timer: Timer;\n        frameDebug: FrameDebug;\n\n        get width(): number {\n            return this.$ctx.raw.canvas.width;\n        }\n\n        get height(): number {\n            return this.$ctx.raw.canvas.height;\n        }\n\n        init(state?: IContainerState, composite?: IContainerComposite) {\n            super.init(state, composite);\n            this.frameDebug = new FrameDebug();\n            this.$ctx = new render.RenderContext();\n            this.$timer = new Timer((now) => this.onTick(now));\n        }\n\n        attach(ctx: CanvasRenderingContext2D): this {\n            this.$ctx.init(ctx);\n            return this;\n        }\n\n        activate(): this {\n            this.$timer.enable();\n            return this;\n        }\n\n        deactivate(): this {\n            this.$timer.disable();\n            return this;\n        }\n\n        process(): this {\n            this.frameDebug.beginProcess();\n            engine.process(this);\n            this.frameDebug.endProcess();\n            return this;\n        }\n\n        render(): this {\n            var ctx = this.$ctx,\n                paint = this.composite.paint,\n                raw = ctx.raw;\n\n            this.frameDebug.beginRender();\n            raw.fillStyle = \"#ffffff\";\n            raw.fillRect(paint.x, paint.y, paint.width, paint.height);\n            engine.render(this, ctx, paint);\n            this.frameDebug.endRender();\n\n            return this;\n        }\n\n        protected onTick(now: number) {\n            this.process()\n                .render();\n        }\n    }\n}","/// <reference path=\"GradientBrush\" />\n\nnamespace puck {\n    export class LinearGradientBrush extends GradientBrush {\n        private $start: la.IPoint = {x: 0, y: 0};\n        private $end: la.IPoint = {x: 0, y: 1};\n\n        get start(): la.IPoint {\n            return this.$start;\n        }\n\n        set start(value: la.IPoint) {\n            if (this.$start !== value) {\n                this.$start = value;\n                Object.freeze(value);\n                this.$changer.on();\n            }\n        }\n\n        get end(): la.IPoint {\n            return this.$end;\n        }\n\n        set end(value: la.IPoint) {\n            if (this.$end !== value) {\n                this.$end = value;\n                Object.freeze(value);\n                this.$changer.on();\n            }\n        }\n\n        protected createPad(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            var grd = ctx.createLinearGradient(mstart.x, mstart.y, mend.x, mend.y);\n            for (var it = this.stops.iter(), result = it.next(); !result.done; result = it.next()) {\n                addColorStop(grd, result.value);\n            }\n            return grd;\n        }\n\n        protected createReflect(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            return this.createInterpolated(ctx, linearGradient.createRepeatInterpolator(mstart, mend, region));\n        }\n\n        protected createRepeat(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var mstart = this.mapPoint(region, this.start);\n            var mend = this.mapPoint(region, this.end);\n            return this.createInterpolated(ctx, linearGradient.createReflectInterpolator(mstart, mend, region));\n        }\n\n        private createInterpolated(ctx: CanvasRenderingContext2D, interpolator: linearGradient.IInterpolator) {\n            var grd = ctx.createLinearGradient(interpolator.x0, interpolator.y0, interpolator.x1, interpolator.y1);\n            var allStops = this.stops.paddedIter();\n            for (; interpolator.step();) {\n                for (var result = allStops.next(); !result.done; result = allStops.next()) {\n                    let cur = result.value;\n                    let inter = {\n                        color: cur.color,\n                        offset: interpolator.interpolate(cur.offset)\n                    };\n                    if (inter.offset >= 0 && inter.offset <= 1)\n                        addColorStop(grd, inter);\n                }\n            }\n            return grd;\n        }\n    }\n\n    function addColorStop(grd: CanvasGradient, stop: IGradientStop) {\n        // Placing color stop in between [0.0, 1.0]\n        // Otherwise, gradient will not render\n        var offset = Math.min(1.0, Math.max(0.0, stop.offset));\n        var color = stop.color.toString();\n        grd.addColorStop(offset, color);\n    }\n}","namespace puck {\n    import IPathState = puck.path.IPathState;\n    import IPathComposite = puck.path.IPathComposite;\n    import IPathProcessor = puck.path.IPathProcessor;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    /*\n     * This represents a multisegment path managed through curve API\n     * If any stroke parameters change, we need to recalculate *padding*\n     * Calculation of filled/stroked bounds is done via curve\n     */\n\n    export class Path extends Visual implements path.IPath {\n        state: IPathState;\n        composite: IPathComposite;\n        processor: IPathProcessor;\n\n        constructor(state?: IPathState, composite?: IPathComposite) {\n            super(state, composite);\n        }\n\n        init(state?: IPathState, composite?: IPathComposite) {\n            this.state = (state || new path.PathState()).reset();\n            this.composite = (composite || new path.PathComposite()).reset();\n            this.processor = {\n                down: path.down.Processor.instance,\n                up: path.up.Processor.instance,\n                render: path.render.Processor.instance,\n                hit: path.hit.Processor.instance,\n            };\n            this.stencil = stencil.path;\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get width(): number {\n            return this.state.size.width;\n        }\n\n        set width(value: number) {\n            if (this.state.size.width !== value) {\n                this.state.size.width = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        get height(): number {\n            return this.state.size.height;\n        }\n\n        set height(value: number) {\n            if (this.state.size.height !== value) {\n                this.state.size.height = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        get stretch(): Stretch {\n            return this.state.stretch;\n        }\n\n        set stretch(value: Stretch) {\n            if (this.state.stretch !== value) {\n                this.state.stretch = value;\n                this.composite.taint(DirtyFlags.stretch);\n            }\n        }\n\n        get path() {\n            return this.state.path;\n        }\n\n        set path(value: curve.Path) {\n            if (this.state.path !== value) {\n                this.state.path = value;\n                this.composite.bounder.setPath(value);\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n\n        get fillRule() {\n            return this.state.fillRule;\n        }\n\n        set fillRule(value: FillRule) {\n            if (this.state.fillRule !== value) {\n                this.state.fillRule = value;\n                this.composite.invalidate();\n            }\n        }\n\n        get strokeLineCap() {\n            return this.state.strokeLineCap;\n        }\n\n        set strokeLineCap(value: PenLineCap) {\n            if (this.state.strokeLineCap !== value) {\n                this.state.strokeLineCap = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n\n        get strokeLineJoin() {\n            return this.state.strokeLineJoin;\n        }\n\n        set strokeLineJoin(value: PenLineJoin) {\n            if (this.state.strokeLineJoin !== value) {\n                this.state.strokeLineJoin = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n\n        get strokeMiterLimit() {\n            return this.state.strokeMiterLimit;\n        }\n\n        set strokeMiterLimit(value: number) {\n            if (this.state.strokeMiterLimit !== value) {\n                this.state.strokeMiterLimit = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n    }\n}","/// <reference path=\"PuckArray\" />\n\nnamespace puck {\n    export class Points extends PuckArray<la.IPoint> {\n    }\n}","namespace puck {\n    import DirtyFlags = puck.element.DirtyFlags;\n    import IPolylineState = puck.polyline.IPolylineState;\n    import IPathComposite = puck.path.IPathComposite;\n    import IPolylineProcessor = puck.polyline.IPolylineProcessor;\n\n    export class Polyline extends Visual implements polyline.IPolyline {\n        state: polyline.IPolylineState;\n        composite: path.IPathComposite;\n        processor: IPolylineProcessor;\n\n        constructor(state?: IPolylineState, composite?: IPathComposite) {\n            super(state, composite);\n        }\n\n        init(state ?: IPolylineState, composite ?: IPathComposite) {\n            this.state = (state || new polyline.PolylineState()).reset();\n            this.composite = (composite || new path.PathComposite()).reset();\n            this.processor = {\n                down: polyline.down.Processor.instance,\n                up: path.up.Processor.instance,\n                render: path.render.Processor.instance,\n                hit: path.hit.Processor.instance,\n            };\n            this.stencil = stencil.path;\n            this.state.points.watch(() => {\n                if (this.state.path)\n                    this.state.path.reset();\n                // forces repathing from points\n            });\n        }\n\n        get points() {\n            return this.state.points;\n        }\n\n        get closed() {\n            return this.closed;\n        }\n\n        set closed(value: boolean) {\n            if (this.state.closed !== value) {\n                this.state.closed = value;\n                this.composite.invalidate();\n            }\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get width(): number {\n            return this.state.size.width;\n        }\n\n        set width(value: number) {\n            if (this.state.size.width !== value) {\n                this.state.size.width = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        get height(): number {\n            return this.state.size.height;\n        }\n\n        set height(value: number) {\n            if (this.state.size.height !== value) {\n                this.state.size.height = value;\n                this.composite.taint(DirtyFlags.stretch | DirtyFlags.transform);\n            }\n        }\n\n        get stretch(): Stretch {\n            return this.state.stretch;\n        }\n\n        set stretch(value: Stretch) {\n            if (this.state.stretch !== value) {\n                this.state.stretch = value;\n                this.composite.taint(DirtyFlags.stretch);\n            }\n        }\n\n        get fillRule() {\n            return this.state.fillRule;\n        }\n\n        set fillRule(value: FillRule) {\n            if (this.state.fillRule !== value) {\n                this.state.fillRule = value;\n                this.composite.invalidate();\n            }\n        }\n\n        get strokeLineCap() {\n            return this.state.strokeLineCap;\n        }\n\n        set strokeLineCap(value: PenLineCap) {\n            if (this.state.strokeLineCap !== value) {\n                this.state.strokeLineCap = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n\n        get strokeLineJoin() {\n            return this.state.strokeLineJoin;\n        }\n\n        set strokeLineJoin(value: PenLineJoin) {\n            if (this.state.strokeLineJoin !== value) {\n                this.state.strokeLineJoin = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n\n        get strokeMiterLimit() {\n            return this.state.strokeMiterLimit;\n        }\n\n        set strokeMiterLimit(value: number) {\n            if (this.state.strokeMiterLimit !== value) {\n                this.state.strokeMiterLimit = value;\n                this.composite\n                    .taint(DirtyFlags.padding)\n                    .invalidate();\n            }\n        }\n    }\n}","/// <reference path=\"GradientBrush\" />\n\nnamespace puck {\n    var tmpCanvas: HTMLCanvasElement = document.createElement('canvas');\n    var tmpCtx: CanvasRenderingContext2D = tmpCanvas.getContext('2d');\n    var epsilon = 1E-10;\n\n    export class RadialGradientBrush extends GradientBrush {\n        private $center: la.IPoint = {x: 0.5, y: 0.5};\n        private $origin: la.IPoint = {x: 0.5, y: 0.5};\n        private $radius: la.IPoint = {x: 0.5, y: 0.5};\n\n        get center() {\n            return this.$center;\n        }\n\n        set center(value: la.IPoint) {\n            if (this.$center !== value) {\n                this.$center = value;\n                Object.freeze(value);\n                this.$changer.on();\n            }\n        }\n\n        get origin() {\n            return this.$origin;\n        }\n\n        set origin(value: la.IPoint) {\n            if (this.$origin !== value) {\n                this.$origin = value;\n                Object.freeze(value);\n                this.$changer.on();\n            }\n        }\n\n        get radiusX() {\n            return this.$radius.x;\n        }\n\n        set radiusX(value: number) {\n            if (this.$radius.x !== value) {\n                this.$radius.x = value;\n                this.$changer.on();\n            }\n        }\n\n        get radiusY() {\n            return this.$radius.y;\n        }\n\n        set radiusY(value: number) {\n            if (this.$radius.y !== value) {\n                this.$radius.y = value;\n                this.$changer.on();\n            }\n        }\n\n        protected createPad(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var data = this.getPointData(region);\n            var grd = (!data.balanced ? tmpCtx : ctx).createRadialGradient(data.x0, data.y0, 0, data.x1, data.y1, data.r1);\n            for (var it = this.stops.iter(), result = it.next(); !result.done; result = it.next()) {\n                addColorStop(grd, result.value);\n            }\n            return this.fit(ctx, grd, data, region);\n        }\n\n        protected createReflect(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var data = this.getPointData(region);\n            return this.createInterpolated(data, region, false);\n        }\n\n        protected createRepeat(ctx: CanvasRenderingContext2D, region: la.IRect): string|CanvasGradient|CanvasPattern {\n            var data = this.getPointData(region);\n            return this.createInterpolated(data, region, true);\n        }\n\n        private createInterpolated(data: radialGradient.IRadialPointData, bounds: la.IRect, reflect: boolean): CanvasPattern {\n            tmpCanvas.width = bounds.width;\n            tmpCanvas.height = bounds.height;\n            tmpCtx.save();\n            if (!data.balanced)\n                tmpCtx.scale(data.sx, data.sy);\n            tmpCtx.globalCompositeOperation = \"destination-over\";\n\n            var inverted = false;\n            var allStops = this.stops.paddedIter();\n            for (var extender = radialGradient.createExtender(data, bounds); extender.step(); inverted = !inverted) {\n                var grd = extender.createGradient(tmpCtx);\n                for (var result = allStops.next(); !result.done; result = allStops.next()) {\n                    let cur = result.value;\n                    let inter = {\n                        color: cur.color,\n                        offset: (reflect && inverted) ? 1 - cur.offset : cur.offset,\n                    };\n                    addColorStop(grd, inter);\n                }\n                tmpCtx.fillStyle = grd;\n                tmpCtx.beginPath();\n                tmpCtx.arc(extender.x1, extender.y1, extender.r1, 0, 2 * Math.PI, false);\n                tmpCtx.closePath();\n                tmpCtx.fill();\n            }\n\n            var pattern = tmpCtx.createPattern(tmpCanvas, \"no-repeat\");\n            tmpCtx.restore();\n            return pattern;\n        }\n\n        private getPointData(bounds: la.IRect): radialGradient.IRadialPointData {\n            var mcenter = this.mapPoint(bounds, this.center);\n            var morigin = this.mapPoint(bounds, this.origin);\n            var mradius = this.mapPoint(bounds, this.$radius);\n\n            var rad = Math.max(mradius.x, mradius.y);\n            var side = Math.max(bounds.width, bounds.height),\n                sx = bounds.width / side,\n                sy = bounds.height / side;\n            return {\n                x0: morigin.x / sx,\n                y0: morigin.y / sy,\n                x1: mcenter.x / sx,\n                y1: mcenter.y / sy,\n                r1: rad,\n                side: side,\n                sx: bounds.width / side,\n                sy: bounds.height / side,\n                balanced: Math.abs(mradius.x - mradius.y) < epsilon\n            };\n        }\n\n        private fit(ctx: CanvasRenderingContext2D, fill: string|CanvasGradient|CanvasPattern, data: radialGradient.IRadialPointData, bounds: la.IRect): CanvasPattern {\n            //NOTE:\n            //  This will return the CanvasGradient if bounds are square\n            //  Otherwise, it will create a CanvasPattern by scaling square coordinate space into bounds\n            if (data.balanced)\n                return fill;\n\n            tmpCanvas.width = bounds.width;\n            tmpCanvas.height = bounds.height;\n\n            tmpCtx.save();\n            tmpCtx.scale(data.sx, data.sy);\n            tmpCtx.fillStyle = fill;\n            tmpCtx.fillRect(0, 0, data.side, data.side);\n            var pattern = ctx.createPattern(tmpCanvas, \"no-repeat\");\n            tmpCtx.restore();\n            return pattern;\n        }\n    }\n\n    function addColorStop(grd: CanvasGradient, stop: IGradientStop) {\n        // Placing color stop in between [0.0, 1.0]\n        // Otherwise, gradient will not render\n        var offset = Math.min(1.0, Math.max(0.0, stop.offset));\n        var color = stop.color.toString();\n        grd.addColorStop(offset, color);\n    }\n}","/// <reference path=\"Visual\" />\n/// <reference path=\"stencil/visual\" />\n\nnamespace puck {\n    import DirtyFlags = puck.element.DirtyFlags;\n    import IVisualState = puck.visual.IVisualState;\n    import IVisualComposite = puck.visual.IVisualComposite;\n\n    export class Rectangle extends Visual {\n        init(state?: IVisualState, composite?: IVisualComposite) {\n            super.init(state, composite);\n            this.stencil = rectangleStencil;\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get width(): number {\n            return this.state.size.width;\n        }\n\n        set width(value: number) {\n            if (this.state.size.width !== value) {\n                this.state.size.width = value;\n                this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n            }\n        }\n\n        get height(): number {\n            return this.state.size.height;\n        }\n\n        set height(value: number) {\n            if (this.state.size.height !== value) {\n                this.state.size.height = value;\n                this.composite.taint(DirtyFlags.transform | DirtyFlags.extents);\n            }\n        }\n    }\n\n    var rectangleStencil = <stencil.IStencil>{\n        draft: stencil.visual.draft,\n        draw(ctx: render.RenderContext, bag: stencil.IStencilBag) {\n            var fr = bag.fillRect;\n            if (fr.width <= 0 || fr.height <= 0) {\n                // degenerate\n                return;\n            }\n            var raw = ctx.raw;\n            raw.beginPath();\n            raw.rect(fr.x, fr.y, fr.width, fr.height);\n            raw.closePath();\n        }\n    };\n}","namespace puck {\n    export class SolidColorBrush implements IBrush {\n        private $color: Color = null;\n        private $changer = new puck.internal.WatchChanger();\n\n        constructor(color?: Color|string) {\n            this.color = new Color(color);\n        }\n\n        get color(): Color { return this.$color; }\n        set color(value: Color) {\n            if (!Color.equals(this.$color, value)) {\n                this.$changer.on();\n            }\n            this.$color = value; // always set in case ref changes\n        }\n\n        watch(onChanged: () => void): puck.internal.IWatcher {\n            return this.$changer.watch(onChanged);\n        }\n\n        setup(ctx: CanvasRenderingContext2D, region: la.IRect) {\n        }\n\n        toHtml5Object(): any {\n            return this.color.toString();\n        }\n    }\n}","namespace puck {\n    /*\n     * aspect ratio (ar) = width/height\n     *\n     * none:          ignores element's width/height\n     * fill:          stretches image to fill width and height\n     * uniform:       stretches image to fill width or height (smallest factor)\n     *    natural ar > element ar => blank horizontal space\n     *    natural ar < element ar => blank vertical space\n     * uniformToFill: stretches image to fill width or height (largest factor)\n     *    natural ar > element ar => vertical overpaint\n     *    natural ar < element ar => horizontal overpaint\n     */\n\n    export enum Stretch {\n        none = 0,\n        fill = 1,\n        uniform = 2,\n        uniformToFill = 3,\n    }\n}","/// <reference path=\"Visual\" />\n\nnamespace puck {\n    import ITextState = puck.text.ITextState;\n    import IElementComposite = puck.element.IElementComposite;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import ITextProcessor = puck.text.ITextProcessor;\n\n    export class Text extends Element implements text.IText {\n        private $fillwatch: puck.internal.IWatcher = null;\n        private $strokewatch: puck.internal.IWatcher = null;\n\n        state: puck.text.ITextState;\n        processor: ITextProcessor;\n\n        constructor(state?: ITextState, composite?: IElementComposite) {\n            super(state, composite);\n        }\n\n        init(state?: ITextState, composite?: IElementComposite) {\n            this.state = (state || new text.TextState()).reset();\n            this.composite = (composite || new element.ElementComposite()).reset();\n            this.processor = {\n                down: element.down.Processor.instance,\n                up: text.up.Processor.instance,\n                render: text.render.Processor.instance,\n                hit: text.hit.Processor.instance,\n            };\n            this.stencil = stencil.empty;\n        }\n\n        get fill(): IBrush { return this.state.fill; }\n        set fill(value: IBrush) {\n            if (this.$fillwatch) {\n                this.$fillwatch.unwatch();\n                this.$fillwatch = null;\n            }\n            if ((!value) === (!this.state.fill)) {\n                // toggling fill on/off can disturb extents\n                this.composite.taint(DirtyFlags.extents).invalidate();\n            }\n            if (value !== this.state.fill) {\n                this.state.fill = value;\n                this.composite.invalidate();\n            }\n            if (value) {\n                this.$fillwatch = value.watch(() => this.composite.invalidate());\n            }\n        }\n\n        get stroke(): IBrush { return this.state.stroke; }\n        set stroke(value: IBrush) {\n            if (this.$strokewatch) {\n                this.$strokewatch.unwatch();\n                this.$strokewatch = null;\n            }\n            if ((!value) === (!this.state.stroke)) {\n                // toggling stroke on/off can disturb padding\n                this.composite.taint(DirtyFlags.padding).invalidate();\n            }\n            if (value !== this.state.stroke) {\n                this.state.stroke = value;\n                this.composite.invalidate();\n            }\n            if (value) {\n                this.$strokewatch = value.watch(() => this.composite.invalidate());\n            }\n        }\n\n        get strokeThickness(): number { return this.state.strokeThickness; }\n        set strokeThickness(value: number) {\n            if (value !== this.state.strokeThickness) {\n                this.state.strokeThickness = value;\n                this.composite.taint(DirtyFlags.padding);\n            }\n        }\n\n        get x(): number {\n            return this.state.offset.x;\n        }\n\n        set x(value: number) {\n            if (this.state.offset.x !== value) {\n                this.state.offset.x = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get y(): number {\n            return this.state.offset.y;\n        }\n\n        set y(value: number) {\n            if (this.state.offset.y !== value) {\n                this.state.offset.y = value;\n                this.composite.taint(DirtyFlags.transform);\n            }\n        }\n\n        get text(): string {\n            return this.state.text;\n        }\n\n        set text(value: string) {\n            this.state.text = value;\n            this.composite.taint(DirtyFlags.font);\n        }\n\n        get fontFamily(): string {\n            return this.state.font.family;\n        }\n\n        set fontFamily(value: string) {\n            if (this.state.font.family !== value) {\n                this.state.font.family = value;\n                this.composite.taint(DirtyFlags.font);\n            }\n        }\n\n        get fontSize(): number {\n            return this.state.font.size;\n        }\n\n        set fontSize(value: number) {\n            if (this.state.font.size !== value) {\n                this.state.font.size = value;\n                this.composite.taint(DirtyFlags.font);\n            }\n        }\n\n        get fontStretch(): string {\n            return this.state.font.stretch;\n        }\n\n        set fontStretch(value: string) {\n            if (this.state.font.stretch !== value) {\n                this.state.font.stretch = value;\n                this.composite.taint(DirtyFlags.font);\n            }\n        }\n\n        get fontStyle(): string {\n            return this.state.font.style;\n        }\n\n        set fontStyle(value: string) {\n            if (this.state.font.style !== value) {\n                this.state.font.style = value;\n                this.composite.taint(DirtyFlags.font);\n            }\n        }\n\n        get fontWeight(): FontWeight {\n            return this.state.font.weight;\n        }\n\n        set fontWeight(value: FontWeight) {\n            if (this.state.font.weight !== value) {\n                this.state.font.weight = value;\n                this.composite.taint(DirtyFlags.font);\n            }\n        }\n    }\n}","namespace puck {\n    export class Timer {\n        private enabled = false;\n        private active: number = 0;\n\n        constructor(public callback: FrameRequestCallback) {\n        }\n\n        enable() {\n            this.enabled = true;\n            this.active = animate.request((now) => this.onFrame(now));\n        }\n\n        disable() {\n            this.enabled = false;\n            if (this.active) {\n                animate.cancel(this.active);\n                this.active = 0;\n            }\n        }\n\n        protected onFrame(now: number) {\n            this.callback && this.callback(now);\n            this.active = animate.request((now) => this.onFrame(now));\n        }\n    }\n\n    namespace animate {\n        var req = window.requestAnimationFrame\n            || (<any>window).webkitRequestAnimationFrame\n            || (<any>window).mozRequestAnimationFrame\n            || (<any>window).oRequestAnimationFrame\n            || (<any>window).msRequestAnimationFrame\n            || ((callback) => window.setTimeout(callback, 1000 / 200));\n        var can = window.cancelAnimationFrame\n            || (<any>window).webkitCancelAnimationFrame\n            || (<any>window).mozCancelAnimationFrame\n            || (<any>window).oCancelAnimationFrame\n            || (<any>window).msCancelAnimationFrame\n            || ((handle: number) => window.clearTimeout(handle));\n\n        export function request(callback: FrameRequestCallback) {\n            return req(callback);\n        }\n\n        export function cancel(handle: number) {\n            return can(handle);\n        }\n    }\n}","namespace puck.element {\n    export interface IElementComposite {\n        hasDirt(match: DirtyFlags): boolean;\n        taint(newDirt: DirtyFlags): this;\n        untaint(oldDirt: DirtyFlags): this;\n        reset(): this;\n        invalidate(): this;\n        opacity: number;\n        visible: boolean;\n        transform: Float32Array;\n        padding: la.IPadding;\n        extents: la.IRect;\n        paint: la.IRect;\n    }\n    export class ElementComposite implements IElementComposite {\n        private $$dirt = DirtyFlags.none;\n\n        opacity: number;\n        visible: boolean;\n        // NOTE: transform, extents, bounds are relative to owner top-left\n        transform = la.mat3.identity();\n        padding = la.padding.init(0, 0, 0, 0);\n        extents = la.rect.init(0, 0, 0, 0);\n        // NOTE: paint is used to carry invalidated region up the tree\n        paint = la.rect.init(0, 0, 0, 0);\n\n        hasDirt(match: DirtyFlags): boolean {\n            return (this.$$dirt & match) > 0;\n        }\n\n        taint(newDirt: DirtyFlags): this {\n            this.$$dirt |= newDirt;\n            return this;\n        }\n\n        untaint(oldDirt: DirtyFlags): this {\n            this.$$dirt &= ~oldDirt;\n            return this;\n        }\n\n        reset(): this {\n            this.opacity = 1.0;\n            this.visible = true;\n            la.mat3.identity(this.transform);\n            la.padding.init(0, 0, 0, 0, this.padding);\n            la.rect.init(0, 0, 0, 0, this.extents);\n            la.rect.init(0, 0, 0, 0, this.paint);\n            this.$$dirt = DirtyFlags.none;\n            return this;\n        }\n\n        invalidate(): this {\n            this.taint(DirtyFlags.invalidate);\n            la.rect.union(this.paint, this.extents);\n            return this;\n        }\n    }\n}","/// <reference path=\"../element/ElementComposite\" />\n\nnamespace puck.container {\n    export interface IContainerComposite extends element.IElementComposite {\n    }\n    export class ContainerComposite extends element.ElementComposite implements IContainerComposite {\n    }\n}","namespace puck.element {\n    export interface IElementState {\n        //range: [0.0, 1.0]\n        opacity: number;\n        visible: boolean;\n\n        //visual offset from parent\n        offset: la.IPoint;\n        size: la.ISize;\n\n        //origin of transform in relative coordinate space ([0.0,1.0], [0.0,1.0])\n        transform: Float32Array;\n        transformOrigin: la.IPoint;\n\n        reset();\n\n        mapTransformOrigin(comp: IElementComposite): la.IPoint;\n    }\n\n    export class ElementState implements IElementState {\n        opacity: number = 1.0;\n        visible: boolean = true;\n        offset = {x: 0, y: 0};\n        size = {width: 0, height: 0};\n        transform = la.mat3.identity();\n        transformOrigin = {x: 0.5, y: 0.5};\n\n        reset(): this {\n            this.opacity = 1.0;\n            this.visible = true;\n            this.offset.x = 0;\n            this.offset.y = 0;\n            this.size.width = 0;\n            this.size.height = 0;\n            la.mat3.identity(this.transform);\n            this.transformOrigin.x = 0.5;\n            this.transformOrigin.y = 0.5;\n            return this;\n        }\n\n        mapTransformOrigin(comp: IElementComposite): la.IPoint {\n            var to = this.transformOrigin,\n                size = this.size;\n            return {\n                x: to.x * size.width,\n                y: to.y * size.height\n            };\n        }\n    }\n}","/// <reference path=\"../element/ElementState\" />\n\nnamespace puck.container {\n    export interface IContainerState extends element.IElementState {\n        // NOTE: size is ignored\n    }\n    export class ContainerState extends element.ElementState implements IContainerState {\n    }\n}","namespace puck.engine {\n    export function hit(el: element.IElement, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]) {\n        var processor = el.processor.hit;\n        processor.process(el, ctx, pos, hitlist);\n    }\n}","/// <reference path=\"../element/DirtyFlags\" />\n\nnamespace puck.engine {\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    // Process walks entire tree\n    // -> Down phase is processed pre-order\n    // -> Up phase is processed post-order\n    export function process(el: element.IElement, parent?: element.IElement) {\n        doDown(el, parent);\n        var ccomposites: element.IElementComposite[] = [];\n        for (var walker = walk.getWalker(el), cur = walker.next(); !!cur; cur = walker.next()) {\n            process(cur, el);\n            ccomposites.push(cur.composite);\n        }\n        doUp(el, parent, ccomposites);\n    }\n\n    const EMPTY_DOWN_COMPOSITE = <container.IContainerComposite>{\n        opacity: 1.0,\n        visible: true,\n        transform: la.mat3.identity(),\n        extents: la.rect.init(0, 0, 0, 0),\n        hasDirt(match: DirtyFlags) {\n            return false\n        },\n        taint(newDirt: DirtyFlags) {\n        },\n        untaint(oldDirt: DirtyFlags) {\n        },\n        reset() {\n        }\n    };\n\n    function doDown(el: element.IElement, parent: element.IElement) {\n        var processor = el.processor.down;\n        var bag = <element.down.IProcessorBag>{\n            walker: walk.getWalker(el),\n            state: el.state,\n            composite: el.composite,\n            pcomposite: parent ? parent.composite : EMPTY_DOWN_COMPOSITE\n        };\n        if (processor.isTainted(bag)) {\n            processor.process(bag);\n            processor.clear(bag);\n        }\n    }\n\n    function doUp(el: element.IElement, parent: element.IElement, ccomposites: element.IElementComposite[]) {\n        var processor = el.processor.up;\n        var bag = <element.up.IProcessorBag>{\n            state: el.state,\n            composite: el.composite,\n            ccomposites: ccomposites\n        };\n        if (processor.isTainted(bag)) {\n            var dirt = processor.process(bag);\n            if (parent)\n                parent.composite.taint(dirt);\n            processor.clear(bag);\n        }\n    }\n}","namespace puck.render {\r\n    import mat3 = la.mat3;\r\n\r\n    var caps: string[] = [\r\n        \"butt\", //flat\r\n        \"square\", //square\r\n        \"round\", //round\r\n        \"butt\" //triangle\r\n    ];\r\n    var joins: string[] = [\r\n        \"miter\",\r\n        \"bevel\",\r\n        \"round\"\r\n    ];\r\n    export class RenderContext {\r\n        private $$transforms = [];\r\n        currentTransform = mat3.identity();\r\n        hasFillRule: boolean;\r\n        raw: CanvasRenderingContext2D;\r\n        size: RenderContextSize;\r\n\r\n        constructor() {\r\n            Object.defineProperties(this, {\r\n                \"currentTransform\": {value: mat3.identity(), writable: false},\r\n                \"hasFillRule\": {value: RenderContext.hasFillRule, writable: false},\r\n                \"size\": {value: new RenderContextSize(), writable: false},\r\n            });\r\n        }\r\n\r\n        static get hasFillRule(): boolean {\r\n            if (navigator.appName === \"Microsoft Internet Explorer\") {\r\n                var version = getIEVersion();\r\n                return version < 0 || version > 10;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        init(ctx: CanvasRenderingContext2D): this {\r\n            Object.defineProperties(this, {\r\n                \"raw\": {value: ctx, writable: false}\r\n            });\r\n            this.size.init(ctx);\r\n            return this;\r\n        }\r\n\r\n        applyDpiRatio() {\r\n            var ratio = this.size.dpiRatio;\r\n            this.scale(ratio, ratio);\r\n        }\r\n\r\n        save() {\r\n            this.$$transforms.push(mat3.create(this.currentTransform));\r\n            this.raw.save();\r\n        }\r\n\r\n        restore() {\r\n            var old = this.$$transforms.pop();\r\n            if (old)\r\n                mat3.copyTo(old, this.currentTransform);\r\n            this.raw.restore();\r\n        }\r\n\r\n        setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number) {\r\n            mat3.init(this.currentTransform, m11, m12, m21, m22, dx, dy);\r\n            this.raw.setTransform(m11, m12, m21, m22, dx, dy);\r\n        }\r\n\r\n        resetTransform() {\r\n            mat3.identity(this.currentTransform);\r\n            var raw = <any>this.raw;\r\n            if (raw.resetTransform)\r\n                raw.resetTransform();\r\n        }\r\n\r\n        transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number) {\r\n            var ct = this.currentTransform;\r\n            mat3.multiply(ct, mat3.create([m11, m12, m21, m22, dx, dy]), ct);\r\n            this.raw.transform(m11, m12, m21, m22, dx, dy);\r\n        }\r\n\r\n        scale(x: number, y: number) {\r\n            mat3.scale(this.currentTransform, x, y);\r\n            this.raw.scale(x, y);\r\n        }\r\n\r\n        rotate(angle: number) {\r\n            var ct = this.currentTransform;\r\n            var r = mat3.createRotate(angle);\r\n            mat3.multiply(ct, r, ct); //ct = ct * r\r\n            this.raw.rotate(angle);\r\n        }\r\n\r\n        translate(x: number, y: number) {\r\n            mat3.translate(this.currentTransform, x, y);\r\n            this.raw.translate(x, y);\r\n        }\r\n\r\n        apply(mat: Float32Array) {\r\n            var ct = mat3.apply(this.currentTransform, mat);\r\n            this.raw.setTransform(ct[0], ct[1], ct[2], ct[3], ct[4], ct[5]);\r\n        }\r\n\r\n        preapply(mat: Float32Array) {\r\n            var ct = mat3.preapply(this.currentTransform, mat);\r\n            this.raw.setTransform(ct[0], ct[1], ct[2], ct[3], ct[4], ct[5]);\r\n        }\r\n\r\n        clipRect(rect: la.IRect) {\r\n            var raw = this.raw;\r\n            raw.beginPath();\r\n            raw.rect(rect.x, rect.y, rect.width, rect.height);\r\n            raw.clip();\r\n        }\r\n\r\n        fillEx(region: la.IRect, brush: IBrush, fillRule?: FillRule) {\r\n            var raw = this.raw;\r\n            brush.setup(raw, region);\r\n            raw.fillStyle = brush.toHtml5Object();\r\n            if (fillRule == null) {\r\n                (<any>raw).fillRule = raw.msFillRule = \"nonzero\";\r\n                raw.fill();\r\n            } else {\r\n                var fr = fillRule === FillRule.evenodd ? \"evenodd\" : \"nonzero\";\r\n                (<any>raw).fillRule = raw.msFillRule = fr;\r\n                raw.fill(fr);\r\n            }\r\n        }\r\n\r\n        strokeEx(region: la.IRect, brush: IBrush, thickness: number) {\r\n            var raw = this.raw;\r\n            brush.setup(raw, region);\r\n            raw.strokeStyle = brush.toHtml5Object();\r\n            raw.lineWidth = thickness;\r\n            raw.stroke();\r\n        }\r\n\r\n        isPointInStrokeEx(x: number, y: number, thickness: number): boolean {\r\n            var raw = this.raw;\r\n            raw.lineWidth = thickness;\r\n            return raw.isPointInStroke(x, y);\r\n        }\r\n\r\n        setStrokeExtras(lineCap: PenLineCap, lineJoin: PenLineJoin, miterLimit: number) {\r\n            var raw = this.raw;\r\n            raw.lineCap = caps[lineCap || 0] || caps[0];\r\n            raw.lineJoin = joins[lineJoin || 0] || joins[0];\r\n            raw.miterLimit = miterLimit;\r\n        }\r\n    }\r\n\r\n    function getIEVersion(): number {\r\n        var re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\r\n        if (re.exec(navigator.userAgent) != null)\r\n            return parseFloat(RegExp.$1);\r\n        return -1;\r\n    }\r\n}","/// <reference path=\"../render/RenderContext\" />\n\nnamespace puck.engine {\n    import RenderContext = puck.render.RenderContext;\n\n    export function render(el: element.IElement, ctx: RenderContext, region: la.IRect) {\n        var processor = el.processor.render;\n        var bag = <puck.element.render.IProcessorBag>{\n            walker: walk.getWalker(el, true),\n            state: el.state,\n            composite: el.composite,\n            stencil: (<visual.IVisual>el).stencil,\n            ctx: ctx,\n            inregion: region,\n            curregion: la.rect.init(0, 0, 0, 0),\n        };\n        processor.process(bag);\n        processor.clear(bag);\n    }\n}","namespace puck.fit.extents {\n    import mat3 = la.mat3;\n    import rect = la.rect;\n\n    export function calc(extents: la.IRect, stretch: Stretch, natural: la.IRect, size: la.ISize) {\n        if (rect.isEmpty(natural))\n            size.width = size.height = 0;\n        var fitter = fits[stretch];\n        fitter && fitter(extents, natural, size);\n    }\n\n    interface IFitter {\n        (final: la.IRect, natural: la.IRect, size: la.ISize);\n    }\n    interface IFitterHash {\n        [stretch: number]: IFitter;\n    }\n    var fits: IFitterHash = {};\n    fits[Stretch.none] = (final: la.IRect, natural: la.IRect, size: la.ISize) => {\n        la.rect.copyTo(natural, final);\n    };\n    fits[Stretch.fill] = (final: la.IRect, natural: la.IRect, size: la.ISize) => {\n        final.width = size.width;\n        final.height = size.height;\n    };\n    fits[Stretch.uniform] = (final: la.IRect, natural: la.IRect, size: la.ISize) => {\n        var sx = size.width / natural.width,\n            sy = size.height / natural.height;\n        final.width = size.width;\n        final.height = size.height;\n        if (sx < sy) {\n            final.height = natural.height * sx;\n        } else {\n            final.width = natural.width * sy;\n        }\n    };\n    fits[Stretch.uniformToFill] = (final: la.IRect, natural: la.IRect, size: la.ISize) => {\n        var sx = size.width / natural.width,\n            sy = size.height / natural.height;\n        final.width = size.width;\n        final.height = size.height;\n        if (sx > sy) {\n            final.height = natural.height * sx;\n        } else {\n            final.width = natural.width * sy;\n        }\n    };\n}","namespace puck.fit.transform {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import mat3 = la.mat3;\n\n    export function calc(transform: Float32Array, stretch: Stretch, natural: la.IRect, size: la.ISize) {\n        var fitter = fits[stretch];\n        fitter && fitter(transform, natural, size);\n    }\n\n    interface IFitter {\n        (final: Float32Array, natural: la.IRect, size: la.ISize);\n    }\n    interface IFitterHash {\n        [stretch: number]: IFitter;\n    }\n    var fits: IFitterHash = {};\n    fits[Stretch.none] = (mat: Float32Array, natural: la.IRect, size: la.ISize) => {\n        mat3.identity(mat);\n    };\n    fits[Stretch.fill] = (mat: Float32Array, natural: la.IRect, size: la.ISize) => {\n        mat3.createTranslate(-natural.x, -natural.y, mat);\n        mat3.scale(mat, size.width / natural.width, size.height / natural.height);\n    };\n    fits[Stretch.uniform] = (mat: Float32Array, natural: la.IRect, size: la.ISize) => {\n        mat3.createTranslate(-natural.x, -natural.y, mat);\n        var smin = Math.min(size.width / natural.width, size.height / natural.height);\n        mat3.scale(mat, smin, smin);\n    };\n    fits[Stretch.uniformToFill] = (mat: Float32Array, natural: la.IRect, size: la.ISize) => {\n        mat3.createTranslate(-natural.x, -natural.y, mat);\n        var smax = Math.max(size.width / natural.width, size.height / natural.height);\n        mat3.scale(mat, smax, smax);\n    };\n}","namespace puck.font {\n    export function toString(font: IFont): string {\n        //Format: font-style font-variant font-weight font-size/line-height font-family\n        //Font Styles: normal, italic, oblique\n        //Font Variants: normal, small-caps\n        //Font Weights: normal, bold, bolder, lighter, 100, 200, 300, 400, 500, 600, 700, 800, 900\n        var s = \"\";\n        s += font.style.toString() + \" \";\n        s += \"normal \";\n        s += (<number>font.weight).toString() + \" \";\n        s += font.size + \"px \";\n        s += font.family.toString();\n        return s;\n    }\n}","/// <reference path=\"../element/ElementComposite\" />\n\nnamespace puck.image {\n    export interface IImageComposite extends element.IElementComposite {\n        stretchTransform: Float32Array;\n    }\n    export class ImageComposite extends element.ElementComposite implements IImageComposite {\n        stretchTransform = la.mat3.identity();\n\n        reset(): this {\n            super.reset();\n            la.mat3.identity(this.stretchTransform);\n            return this;\n        }\n    }\n}","namespace puck.image {\n    export class ImageSource implements IImageSource {\n        private $el: HTMLImageElement = document.createElement(\"img\");\n        private $watchers: IImageWatcher[] = [];\n\n        constructor() {\n            this.$el.onerror = (e: ErrorEvent) => this.onErrored(e);\n            this.$el.onload = (e) => this.onLoaded();\n        }\n\n        reset() {\n            this.uri = \"\";\n        }\n\n        get uri(): string { return this.$el.src; }\n        set uri(value: string) {\n            if (this.$el.src !== value) {\n                this.$el.src = value;\n                this.onChanged();\n            }\n        }\n\n        get naturalWidth(): number {\n            return this.$el.naturalWidth;\n        }\n\n        get naturalHeight(): number {\n            return this.$el.naturalHeight;\n        }\n\n        draw(ctx: CanvasRenderingContext2D) {\n            ctx.drawImage(this.$el, 0, 0);\n        }\n\n        watch(onChanged: () => any, onErrored: () => any, onLoaded: () => any): IImageWatcher {\n            var watcher: IImageWatcher = {\n                change: onChanged,\n                error: onErrored,\n                load: onLoaded,\n                unwatch: () => {\n                    var ind = this.$watchers.indexOf(watcher);\n                    if (ind > -1)\n                        this.$watchers.splice(ind, 1);\n                }\n            };\n            this.$watchers.push(watcher);\n            return watcher;\n        }\n\n        protected onChanged() {\n            for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                watchers[i].change();\n            }\n        }\n\n        protected onErrored(e: ErrorEvent) {\n            for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                watchers[i].error(e.error);\n            }\n        }\n\n        protected onLoaded() {\n            for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                watchers[i].load();\n            }\n        }\n    }\n}","/// <reference path=\"../element/ElementState\" />\n\nnamespace puck.image {\n    export interface IImageState extends element.IElementState {\n        source: IImageSource;\n        stretch: Stretch;\n        natural: la.IRect;\n        getEffectiveStretch(): Stretch;\n    }\n\n    export class ImageState extends element.ElementState implements IImageState {\n        source: IImageSource = new ImageSource();\n        stretch: Stretch = Stretch.none;\n        natural: la.IRect = la.rect.init(0, 0, 0, 0);\n\n        reset(): this {\n            super.reset();\n            this.source.reset();\n            this.stretch = Stretch.none;\n            la.rect.init(0, 0, 0, 0, this.natural);\n            return this;\n        }\n\n        getEffectiveStretch(): Stretch {\n            var size = this.size,\n                natural = this.natural;\n            if (size.width <= 0 || size.height <= 0) {\n                // fall back to none if width/height are empty\n                // otherwise, we would build a singular stretch transform\n                return Stretch.none;\n            }\n            if (natural.width <= 0 || natural.height <= 0) {\n                // fall back to none if no-size image\n                // otherwise, we would get NaN, NaN scale stretch transform\n                return Stretch.none;\n            }\n            return this.stretch;\n        }\n    }\n}","namespace puck.internal {\n    export interface IWatcher {\n        change();\n        unwatch();\n    }\n\n    export class WatchChanger {\n        private $watchers: IWatcher[] = [];\n\n        watch(onChanged: () => void): IWatcher {\n            var watchers = this.$watchers;\n            var watcher = <IWatcher>{\n                change: onChanged,\n                unwatch: () => {\n                    var ind = watchers.indexOf(watcher);\n                    if (ind > -1)\n                        watchers.splice(ind, 1);\n                }\n            };\n            watchers.push(watcher);\n            return watcher;\n        }\n\n        on() {\n            for (var watchers = this.$watchers, i = 0; i < watchers.length; i++) {\n                watchers[i].change();\n            }\n        }\n    }\n}","namespace puck.linearGradient {\r\n    export interface IInterpolator {\r\n        x0: number;\r\n        y0: number;\r\n        x1: number;\r\n        y1: number;\r\n        step(): boolean;\r\n        interpolate(offset: number): number;\r\n    }\r\n\r\n    export function createRepeatInterpolator(start: la.IPoint, end: la.IPoint, bounds: la.IRect): IInterpolator {\r\n        var first = {x: start.x, y: start.y};\r\n        var last = {x: end.x, y: end.y};\r\n        var dir = {x: end.x - start.x, y: end.y - start.y};\r\n\r\n        calcMetrics(dir, first, last, bounds);\r\n        var numSteps = (last.x - first.x) / dir.x;\r\n        var stepSize = 1.0 / numSteps;\r\n        var cur = -stepSize;\r\n\r\n        return {\r\n            x0: first.x,\r\n            y0: first.y,\r\n            x1: last.x,\r\n            y1: last.y,\r\n            step (): boolean {\r\n                cur += stepSize;\r\n                return cur < 1;\r\n            },\r\n            interpolate (offset: number): number {\r\n                return cur + (offset / numSteps);\r\n            }\r\n        };\r\n    }\r\n\r\n    export function createReflectInterpolator(start: la.IPoint, end: la.IPoint, bounds: la.IRect): IInterpolator {\r\n        var first = {x: start.x, y: start.y};\r\n        var last = {x: end.x, y: end.y};\r\n        var dir = {x: end.x - start.x, y: end.y - start.y};\r\n\r\n        calcMetrics(dir, first, last, bounds);\r\n        var numSteps = (last.x - first.x) / dir.x;\r\n        var stepSize = 1.0 / numSteps;\r\n        var cur = -stepSize;\r\n        var inverted = Math.round((start.x - first.x) / dir.x) % 2 === 0;\r\n\r\n        return {\r\n            x0: first.x,\r\n            y0: first.y,\r\n            x1: last.x,\r\n            y1: last.y,\r\n            step (): boolean {\r\n                inverted = !inverted;\r\n                cur += stepSize;\r\n                return cur < 1;\r\n            },\r\n            interpolate (offset: number): number {\r\n                var norm = offset / numSteps;\r\n                return !inverted ? cur + norm : cur + (stepSize - norm);\r\n            }\r\n        };\r\n    }\r\n}","namespace puck.linearGradient {\r\n    export function calcMetrics(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        if (dir.y === 0) {\r\n            if (dir.x < 0)\r\n                W(dir, first, last, bounds);\r\n            else if (dir.x !== 0)\r\n                E(dir, first, last, bounds);\r\n        } else if (dir.x === 0) {\r\n            if (dir.y < 0)\r\n                N(dir, first, last, bounds);\r\n            else if (dir.y !== 0)\r\n                S(dir, first, last, bounds);\r\n        } else if (dir.x < 0 && dir.y < 0) { // e\\s\r\n            NW(dir, first, last, bounds);\r\n        } else if (dir.x < 0 && dir.y > 0) { // e/s\r\n            SW(dir, first, last, bounds);\r\n        } else if (dir.x > 0 && dir.y < 0) { // s/e\r\n            NE(dir, first, last, bounds);\r\n        } else if (dir.x > 0 && dir.y > 0) { // s\\e\r\n            SE(dir, first, last, bounds);\r\n        }\r\n    }\r\n\r\n    //+x,0y\r\n    function E(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        while (first.x >= bounds.x)\r\n            first.x -= dir.x;\r\n        while (last.x <= maxX)\r\n            last.x += dir.x;\r\n    }\r\n\r\n    //-x,0y\r\n    function W(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        while (first.x <= maxX)\r\n            first.x -= dir.x;\r\n        while (last.x >= bounds.x)\r\n            last.x += dir.x;\r\n    }\r\n\r\n    //0x,+y\r\n    function S(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.y >= bounds.y)\r\n            first.y -= dir.y;\r\n        while (last.y <= maxY)\r\n            last.y += dir.y;\r\n    }\r\n\r\n    //0x,-y\r\n    function N(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.y <= maxY)\r\n            first.y -= dir.y;\r\n        while (last.y >= bounds.y)\r\n            last.y += dir.y;\r\n    }\r\n\r\n    //-x,-y\r\n    function NW(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x <= maxX && first.y <= maxY) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x >= bounds.x && last.y >= bounds.y) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n\r\n    }\r\n\r\n    //-x,+y\r\n    function SW(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x <= maxX && first.y >= bounds.y) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x >= bounds.x && last.y <= maxY) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n\r\n    //+x,-y\r\n    function NE(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x >= bounds.x && first.y <= maxY) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x <= maxX && last.y >= bounds.y) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n\r\n    //+x,+y\r\n    function SE(dir: la.IPoint, first: la.IPoint, last: la.IPoint, bounds: la.IRect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x >= bounds.x && first.y >= bounds.y) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x <= maxX && last.y <= maxY) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n}","namespace puck.path {\n    import FillBounds = curve.bounds.fill.FillBounds;\n    import StrokeBounds = curve.bounds.stroke.StrokeBounds;\n    import IBoundingBox = curve.bounds.IBoundingBox;\n\n    export class Bounder {\n        private $path: curve.Path = null;\n        private $filled: FillBounds = null;\n        private $stroked: StrokeBounds = null;\n        private $pars: curve.IStrokeParameters;\n\n        constructor() {\n            this.$pars = {\n                strokeThickness: 0,\n                strokeDashArray: null,\n                strokeDashCap: curve.PenLineCap.Flat,\n                strokeDashOffset: 0,\n                strokeEndLineCap: curve.PenLineCap.Flat,\n                strokeLineJoin: curve.PenLineJoin.Miter,\n                strokeMiterLimit: 10,\n                strokeStartLineCap: curve.PenLineCap.Flat,\n            };\n        }\n\n        getPath(): curve.Path {\n            return this.$path;\n        }\n\n        setPath(path: curve.Path) {\n            if (this.$path === path)\n                return;\n            this.$path = path;\n            if (!path) {\n                this.$filled = null;\n                this.$stroked = null;\n            } else {\n                this.$filled = new FillBounds(path);\n                this.$stroked = new StrokeBounds(path);\n                this.$stroked.pars = this.$pars;\n            }\n        }\n\n        reset() {\n            if (this.$filled)\n                this.$filled.reset();\n            if (this.$stroked)\n                this.$stroked.reset();\n        }\n\n        getFillRect(dest: la.IRect): this {\n            var box = this.$filled;\n            if (!box) {\n                la.rect.init(0, 0, 0, 0, dest);\n            } else {\n                dest.x = box.l;\n                dest.y = box.t;\n                dest.width = box.r - box.l;\n                dest.height = box.b - box.t;\n            }\n            return this;\n        }\n\n        getStrokeRect(dest: la.IRect): this {\n            var box = this.$stroked;\n            if (!box) {\n                la.rect.init(0, 0, 0, 0, dest);\n            } else {\n                dest.x = box.l;\n                dest.y = box.t;\n                dest.width = box.r - box.l;\n                dest.height = box.b - box.t;\n            }\n            return this;\n        }\n\n        calc(state: IPathState): this {\n            var stroked = this.$stroked,\n                filled = this.$filled;\n\n            if (stroked) {\n                if (!!state.stroke && state.strokeThickness > 0) {\n                    this.setStroke(state);\n                    stroked.ensure();\n                } else {\n                    stroked.reset();\n                }\n            }\n\n            if (filled) {\n                filled.ensure();\n            }\n\n            return this;\n        }\n\n        protected setStroke(state: IPathState) {\n            var pars = this.$pars;\n            pars.strokeThickness = state.strokeThickness;\n            pars.strokeStartLineCap = <curve.PenLineCap><number>state.strokeLineCap;\n            pars.strokeLineJoin = <curve.PenLineJoin><number>state.strokeLineJoin;\n            pars.strokeMiterLimit = state.strokeMiterLimit;\n        }\n    }\n}","namespace puck.path {\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export interface IPathComposite extends element.IElementComposite {\n        stretchTransform: Float32Array;\n        natural: la.IRect;\n        bounder: Bounder;\n    }\n\n    export class PathComposite extends element.ElementComposite implements IPathComposite {\n        stretchTransform = la.mat3.identity();\n        natural: la.IRect = la.rect.init(0, 0, 0, 0);\n        bounder = new Bounder();\n\n        reset(): this {\n            super.reset();\n            la.mat3.identity(this.stretchTransform);\n            la.rect.init(0, 0, 0, 0, this.natural);\n            this.bounder.reset();\n            return this;\n        }\n    }\n}","/// <reference path=\"../element/ElementState\" />\n\nnamespace puck.visual {\n    import ElementState = puck.element.ElementState;\n\n    export interface IVisualState extends element.IElementState {\n        fill: IBrush;\n        stroke: IBrush;\n        strokeThickness: number;\n    }\n\n    export class VisualState extends ElementState implements IVisualState {\n        fill: IBrush;\n        stroke: IBrush;\n        strokeThickness: number;\n        \n        reset(): this {\n            super.reset();\n            this.fill = null;\n            this.stroke = null;\n            this.strokeThickness = 0;\n            return this;\n        }\n    }\n}","/// <reference path=\"../visual/VisualState\" />\n\nnamespace puck.path {\n    export interface IPathState extends visual.IVisualState {\n        path: curve.Path;\n        stretch: Stretch;\n        fillRule: FillRule;\n        strokeLineCap: PenLineCap;\n        strokeLineJoin: PenLineJoin;\n        strokeMiterLimit: number;\n        getEffectiveStretch(comp: IPathComposite): Stretch;\n    }\n    export class PathState extends visual.VisualState implements IPathState {\n        path: curve.Path = null;\n        stretch: Stretch = Stretch.none;\n        fillRule: FillRule = FillRule.evenodd;\n        strokeLineCap: PenLineCap = PenLineCap.flat;\n        strokeLineJoin: PenLineJoin = PenLineJoin.miter;\n        strokeMiterLimit: number = 10;\n\n        reset(): this {\n            super.reset();\n            this.path = null;\n            this.stretch = Stretch.none;\n            this.fillRule = FillRule.evenodd;\n            this.strokeLineCap = PenLineCap.flat;\n            this.strokeLineJoin = PenLineJoin.miter;\n            this.strokeMiterLimit = 10;\n            return this;\n        }\n\n        getEffectiveStretch(comp: IPathComposite): Stretch {\n            var size = this.size,\n                natural = comp.natural;\n            if (size.width <= 0 || size.height <= 0) {\n                // fall back to none if width/height are empty\n                // otherwise, we would build a singular stretch transform\n                return Stretch.none;\n            }\n            if (natural.width <= 0 || natural.height <= 0) {\n                // fall back to none if no-size path\n                // otherwise, we would get NaN, NaN scale stretch transform\n                return Stretch.none;\n            }\n            return this.stretch;\n        }\n\n        mapTransformOrigin(comp: IPathComposite): la.IPoint {\n            var to = this.transformOrigin;\n\n            // must precompute extents even though it will be performed later\n            var final = la.rect.init(0, 0, 0, 0);\n            puck.fit.extents.calc(final, this.getEffectiveStretch(comp), comp.natural, this.size);\n            return {\n                x: final.x + (to.x * final.width),\n                y: final.y + (to.y * final.height),\n            }\n        }\n    }\n}","/// <reference path=\"../visual/VisualState\" />\n\nnamespace puck.polyline {\n    export interface IPolylineState extends path.IPathState {\n        points: Points;\n        closed: boolean;\n    }\n    export class PolylineState extends path.PathState implements IPolylineState {\n        points: Points = new Points();\n        closed: boolean = false;\n\n        reset(): this {\n            super.reset();\n            this.points.clear();\n            this.closed = false;\n            return this;\n        }\n    }\n}","namespace puck.radialGradient {\n    export interface IExtender {\n        x0: number;\n        y0: number;\n        r0: number;\n        x1: number;\n        y1: number;\n        r1: number;\n        step(): boolean;\n        createGradient(ctx: CanvasRenderingContext2D): CanvasGradient;\n    }\n    export interface IRadialPointData {\n        x0: number;\n        y0: number;\n        x1: number;\n        y1: number;\n        r1: number;\n        sx: number;\n        sy: number;\n        side: number;\n        balanced: boolean;\n    }\n    export function createExtender(data: IRadialPointData, bounds: la.IRect): IExtender {\n        var started = false;\n        var dx = data.x1 - data.x0;\n        var dy = data.y1 - data.y0;\n        var rstep = data.r1;\n        var reached = false;\n\n        var ext = {\n            x0: data.x0,\n            y0: data.y0,\n            r0: 0,\n            x1: data.x1,\n            y1: data.y1,\n            r1: data.r1,\n            step (): boolean {\n                if (!started) {\n                    started = true;\n                    return true;\n                }\n\n                ext.x0 = ext.x1;\n                ext.y0 = ext.y1;\n                ext.r0 += rstep;\n                ext.r1 += rstep;\n                ext.x1 += dx;\n                ext.y1 += dy;\n\n                if (reached)\n                    return false;\n                reached = exceedBounds(ext.x1, ext.y1, ext.r1, bounds);\n                return true;\n            },\n            createGradient (ctx: CanvasRenderingContext2D): CanvasGradient {\n                return ctx.createRadialGradient(ext.x0, ext.y0, ext.r0, ext.x1, ext.y1, ext.r1);\n            }\n        };\n        return ext;\n    }\n\n    function exceedBounds(cx: number, cy: number, radius: number, bounds: la.IRect) {\n        var ne = len(cx, cy, bounds.x, bounds.y);\n        var nw = len(cx, cy, bounds.x + bounds.width, bounds.y);\n        var sw = len(cx, cy, bounds.x + bounds.width, bounds.y + bounds.height);\n        var se = len(cx, cy, bounds.x, bounds.y + bounds.height);\n        return Math.max(ne, nw, sw, se) < radius;\n    }\n\n    function len(x1: number, y1: number, x2: number, y2: number): number {\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        return Math.sqrt((dx * dx) + (dy * dy));\n    }\n}","namespace puck.render {\n    export function getNaturalCanvasSize(canvas: HTMLCanvasElement): la.ISize {\n        var zoomFactor = zoom.calc();\n        return {\n            width: canvas.offsetWidth * zoomFactor,\n            height: canvas.offsetHeight * zoomFactor\n        };\n    }\n}","namespace puck.render {\n    //NOTE: If we resize the HTML5 canvas during resize, the canvas will go blank until render happens\n    var epsilon = 1e-10;\n    export class RenderContextSize {\n        private $$ctx: CanvasRenderingContext2D = null;\n        //NOTE: This is the desired on-screen size (backing size for high-dpi devices will be larger)\n        private $$desiredWidth: number = 0;\n        private $$desiredHeight: number = 0;\n        private $$changed: la.ISize = null;\n        private $$lastDpiRatio = 1;\n\n        get desiredWidth(): number {\n            return this.$$desiredWidth;\n        }\n\n        get desiredHeight(): number {\n            return this.$$desiredHeight;\n        }\n\n        get paintWidth(): number {\n            return this.$$desiredWidth * this.dpiRatio;\n        }\n\n        get paintHeight(): number {\n            return this.$$desiredHeight * this.dpiRatio;\n        }\n\n        get dpiRatio(): number {\n            return (window.devicePixelRatio || 1) / this.$$ctx.backingStorePixelRatio;\n        }\n\n        init(ctx: CanvasRenderingContext2D) {\n            this.$$ctx = ctx;\n            var desired = getNaturalCanvasSize(ctx.canvas);\n            this.$$desiredWidth = desired.width;\n            this.$$desiredHeight = desired.height;\n            this.$adjustCanvas();\n        }\n\n        queueResize(width: number, height: number): RenderContextSize {\n            if (this.$$changed) {\n                this.$$changed.width = width;\n                this.$$changed.height = height;\n            } else {\n                this.$$changed = {\n                    width: width,\n                    height: height\n                };\n            }\n            return this;\n        }\n\n        commitResize(): RenderContextSize {\n            if (this.$$changed) {\n                //Don't resize anything if movement is not noticeable\n                if (Math.abs(this.$$changed.width - this.$$desiredWidth) < epsilon && Math.abs(this.$$changed.height - this.$$desiredHeight) < epsilon)\n                    return;\n                this.$$desiredWidth = this.$$changed.width;\n                this.$$desiredHeight = this.$$changed.height;\n                this.$$changed = null;\n                this.$adjustCanvas();\n            }\n            return this;\n        }\n\n        updateDpiRatio(): boolean {\n            if (this.$$lastDpiRatio === this.dpiRatio)\n                return false;\n            this.$adjustCanvas();\n            return true;\n        }\n\n        private $adjustCanvas() {\n            var canvas = this.$$ctx.canvas;\n            var dpiRatio = this.dpiRatio;\n            if (Math.abs(dpiRatio - 1) < epsilon) {\n                canvas.width = this.desiredWidth;\n                canvas.height = this.desiredHeight;\n            } else {\n                // Size the canvas width and height (the virtual canvas size) to the scaled up pixel count.\n                canvas.width = this.paintWidth;\n                canvas.height = this.paintHeight;\n                // Size the physical canvas using CSS width and height to the pixel dimensions.\n                canvas.style.width = this.desiredWidth.toString() + \"px\";\n                canvas.style.height = this.desiredHeight.toString() + \"px\";\n            }\n            this.$$lastDpiRatio = dpiRatio;\n        }\n    }\n}","namespace puck.render.zoom {\n    export var calc: () => number = (() => {\n        if ((<any>document).frames) //IE 7-9\n            return ie();\n        return chrome();\n    })();\n\n    function ie() {\n        return () => {\n            var screen = (<any>document).frames.screen;\n            var zoom = screen.deviceXDPI / screen.systemXDPI;\n            return Math.round(zoom * 100) / 100;\n        };\n    }\n\n    function chrome() {\n        var svg: SVGSVGElement;\n\n        function memoizeSvg() {\n            if (!!svg || !document.body)\n                return;\n            svg = <SVGSVGElement>document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n            svg.setAttribute('version', '1.1');\n            document.body.appendChild(svg);\n            ((style: CSSStyleDeclaration) => {\n                style.opacity = \"0.0\";\n                style.position = \"absolute\";\n                style.left = \"-300px\";\n                //style.top = \"-150px\";\n            })(<any>svg.style);\n        }\n\n        return () => {\n            memoizeSvg();\n            return !svg ? 1 : svg.currentScale;\n        };\n    }\n}\n","namespace puck.stencil {\n    import IRect = la.IRect;\n    import RenderContext = puck.render.RenderContext;\n    import IElementState = puck.element.IElementState;\n    import IElementComposite = puck.element.IElementComposite;\n\n    export interface IStencilBag {\n        state: IElementState;\n        composite: IElementComposite;\n        fillRect: IRect;\n        strokeRect: IRect;\n    }\n\n    export interface IStencil {\n        draft(bag: IStencilBag);\n        draw(ctx: RenderContext, bag: IStencilBag);\n    }\n\n    export var empty: IStencil = {\n        draft(bag: IStencilBag) {\n        },\n        draw(ctx: RenderContext, bag: IStencilBag) {\n        },\n    };\n}","namespace puck.stencil {\n    import IPathState = puck.path.IPathState;\n    import IPathComposite = puck.path.IPathComposite;\n\n    export var path: IStencil = {\n        draft(bag: stencil.IStencilBag) {\n            // Bounds are updated in \"down:natural\"\n            var comp = <IPathComposite>bag.composite;\n            comp.bounder\n                .getFillRect(bag.fillRect)\n                .getStrokeRect(bag.strokeRect);\n        },\n        draw(ctx: render.RenderContext, bag: stencil.IStencilBag) {\n            var fr = bag.fillRect;\n            if (fr.width <= 0 || fr.height <= 0) {\n                // degenerate\n                return;\n            }\n\n            var raw = ctx.raw,\n                state = <IPathState>bag.state;\n            raw.beginPath();\n            state.path.draw(raw);\n            // NOTE: curve.Path dictates whether to \"closePath\"\n        },\n    };\n}","/// <reference path=\"../element/ElementState\" />\n\nnamespace puck.text {\n    import ElementState = puck.element.ElementState;\n\n    export interface ITextState extends element.IElementState {\n        fill: IBrush;\n        stroke: IBrush;\n        strokeThickness: number;\n        font: IFont;\n        text: string;\n    }\n\n    export class TextState extends ElementState implements ITextState {\n        fill: IBrush;\n        stroke: IBrush;\n        strokeThickness: number;\n        font: puck.IFont;\n        text: string;\n\n        reset(): this {\n            super.reset();\n\n            this.fill = null;\n            this.stroke = null;\n            this.strokeThickness = 0;\n\n            var f: puck.IFont;\n            f = {\n                family: defaultFont.family,\n                size: defaultFont.size,\n                stretch: defaultFont.stretch,\n                style: defaultFont.style,\n                weight: defaultFont.weight,\n                toString() {\n                    return font.toString(f);\n                },\n            };\n            this.font = f;\n            this.text = \"\";\n\n            return this;\n        }\n    }\n}","/// <reference path=\"../element/ElementComposite\" />\n\nnamespace puck.visual {\n    import ElementComposite = puck.element.ElementComposite;\n\n    export interface IVisualComposite extends element.IElementComposite {\n    }\n\n    export class VisualComposite extends ElementComposite implements IVisualComposite {\n    }\n}","namespace puck.walk {\n    export interface IWalker<T> {\n        next(): T;\n    }\n\n    var EMPTY_WALKER: walk.IWalker<element.IElement> = {\n        next() {\n            return undefined;\n        }\n    };\n\n    export function getWalker(el: element.IElement, reverse?: boolean): IWalker<element.IElement> {\n        if (typeof (<container.IContainer>el).walk === \"function\")\n            return (<container.IContainer>el).walk(reverse);\n        return EMPTY_WALKER;\n    }\n}","namespace puck.element.down {\n    export interface IProcessorBag {\n        state: IElementState;\n        composite: IElementComposite;\n        pcomposite: IElementComposite; //parent composite\n    }\n\n    export class Processor {\n        static instance = new Processor();\n\n        isTainted(bag: IProcessorBag): boolean {\n            return bag.composite.hasDirt(DirtyFlags.down);\n        }\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            if (opacity.process(bag))\n                dirt |= DirtyFlags.opacity;\n            if (visible.process(bag))\n                dirt |= DirtyFlags.visible;\n            if (transform.process(bag))\n                dirt |= DirtyFlags.transform;\n            return dirt;\n        }\n\n        clear(bag: IProcessorBag): this {\n            bag.composite.untaint(DirtyFlags.down);\n            return this;\n        }\n    }\n}","/// <reference path=\"../../element/down/Processor\" />\n\nnamespace puck.container.down {\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export interface IProcessorBag extends element.down.IProcessorBag {\n        walker: walk.IWalker<element.IElement>;\n        state: IContainerState;\n        composite: IContainerComposite;\n        pcomposite: IContainerComposite; //parent composite\n    }\n\n    export class Processor extends element.down.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = super.process(bag);\n            for (var cur = bag.walker.next(); !!cur; cur = bag.walker.next()) {\n                cur.composite.taint(dirt);\n            }\n            return dirt;\n        }\n    }\n}","namespace puck.element.hit {\n    import mat3 = la.mat3;\n    import vec2 = la.vec2;\n    import rect = la.rect;\n\n    export class Processor {\n        static instance = new Processor();\n\n        process(el: element.IElement, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            if (!this.prehit(el, ctx, pos))\n                return;\n            ctx.save();\n            ctx.preapply(el.composite.transform);\n            var inside = false;\n            if (this.hit(el, ctx, pos, hitlist)) {\n                inside = true;\n                hitlist.unshift(el);\n            }\n            ctx.restore();\n            return inside;\n        }\n\n        protected prehit(el: element.IElement, ctx: puck.render.RenderContext, pos: Float32Array): boolean {\n            var comp = el.composite;\n            if (!comp.visible || (comp.opacity * 255) < 0.5)\n                return false;\n            var localpos = mat3.transformVec2(ctx.currentTransform, pos, vec2.create(0, 0));\n            return rect.containsVec2(comp.extents, localpos);\n        }\n\n        protected hit(el: element.IElement, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            // element alone is not hittable\n            // visual/container will implement\n            return false;\n        }\n\n        protected draw(el: visual.IVisual, ctx: puck.render.RenderContext) {\n            var sbag: stencil.IStencilBag = {\n                state: el.state,\n                composite: el.composite,\n                fillRect: null,\n                strokeRect: null,\n            };\n            el.stencil.draw(ctx, sbag);\n        }\n    }\n}","/// <reference path=\"../../element/hit/Processor\" />\n\nnamespace puck.container.hit {\n    export class Processor extends element.hit.Processor {\n        static instance = new Processor();\n\n        protected hit(el: IContainer, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            for (var walker = el.walk(true), cur = walker.next(); !!cur; cur = walker.next()) {\n                if (engine.hit(el, ctx, pos, hitlist))\n                    return true;\n            }\n            return false;\n        }\n    }\n}","/// <reference path=\"../../render/RenderContext\" />\n\nnamespace puck.element.render {\n    import RenderContext = puck.render.RenderContext;\n\n    export interface IProcessorBag {\n        state: IElementState;\n        composite: IElementComposite;\n        ctx: RenderContext;\n        inregion: la.IRect;\n        curregion: la.IRect;\n        stencil: stencil.IStencil;\n    }\n\n    export enum SkipResult {\n        none = 0,\n        render = 1 << 1,\n        post = 1 << 2,\n\n        all = render | post,\n    }\n\n    export class Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag) {\n            var result = this.prerender(bag);\n            if ((result & SkipResult.render) === 0) {\n                this.render(bag);\n            }\n            if ((result & SkipResult.post) === 0) {\n                this.postrender(bag);\n            }\n        }\n\n        clear(bag: IProcessorBag): this {\n            bag.composite.untaint(DirtyFlags.invalidate);\n            la.rect.init(0, 0, 0, 0, bag.composite.paint);\n            return this;\n        }\n\n        protected prerender(bag: IProcessorBag): SkipResult {\n            if (!validate.process(bag))\n                return SkipResult.all;\n            if (!should.process(bag))\n                return SkipResult.all;\n            prepare.process(bag);\n            narrow.process(bag);\n            //TODO: Prerender effect\n            return SkipResult.none;\n        }\n\n        protected render(bag: IProcessorBag) {\n            var sbag = this.createStencilBag(bag);\n            bag.stencil.draft(sbag);\n            bag.stencil.draw(bag.ctx, sbag);\n        }\n\n        protected postrender(bag: IProcessorBag) {\n            //TODO: Postrender effect\n            bag.ctx.restore();\n        }\n\n        protected createStencilBag(bag: IProcessorBag): stencil.IStencilBag {\n            return {\n                state: bag.state,\n                composite: bag.composite,\n                fillRect: la.rect.init(0, 0, 0, 0),\n                strokeRect: la.rect.init(0, 0, 0, 0),\n            };\n        }\n    }\n}","/// <reference path=\"../../element/render/Processor\" />\n\nnamespace puck.container.render {\n    export interface IProcessorBag extends element.render.IProcessorBag {\n        walker: walk.IWalker<element.IElement>;\n        composite: IContainerComposite;\n    }\n\n    export class Processor extends element.render.Processor {\n        static instance = new Processor();\n\n        protected render(bag: IProcessorBag) {\n            for (var cur = bag.walker.next(); !!cur; cur = bag.walker.next()) {\n                engine.render(cur, bag.ctx, bag.curregion);\n            }\n        }\n    }\n}","/// <reference path=\"../../element/DirtyFlags\" />\n\nnamespace puck.container.up.extents {\n    import rect = la.rect;\n    import DirtyFlags = puck.element.DirtyFlags;\n    var oldExtents = rect.init(0, 0, 0, 0);\n\n    // Computes container's bounds\n    // Bounds\n    //   - union of all child bounds\n    //   - owner's coordinate system\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.extents))\n            return false;\n        rect.copyTo(comp.extents, oldExtents);\n\n        rect.init(0, 0, 0, 0, comp.extents);\n        for (var ccomps = bag.ccomposites, i = 0; i < ccomps.length; i++) {\n            rect.union(comp.extents, ccomps[i].extents);\n        }\n        rect.transform(comp.extents, comp.transform, comp.extents);\n\n        if (rect.equal(comp.extents, oldExtents))\n            return false;\n        rect.union(comp.paint, oldExtents);\n        comp.taint(DirtyFlags.newbounds);\n        return true;\n    }\n}","namespace puck.container.up.invalidate {\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.invalidate))\n            return false;\n\n        var childPaint = la.rect.init(0, 0, 0, 0);\n        for (var ccomps = bag.ccomposites, i = 0; i < ccomps.length; i++) {\n            la.rect.union(childPaint, ccomps[i].paint);\n        }\n        la.rect.transform(childPaint, comp.transform, childPaint);\n\n        la.rect.union(comp.paint, childPaint);\n        return true;\n    }\n}","namespace puck.element.up {\n    export interface IProcessorBag {\n        state: IElementState;\n        composite: IElementComposite;\n        ccomposites: IElementComposite[];\n    }\n\n    export class Processor {\n        static instance = new Processor();\n\n        isTainted(bag: IProcessorBag): boolean {\n            return bag.composite.hasDirt(DirtyFlags.up);\n        }\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            if (extents.process(bag))\n                dirt |= DirtyFlags.extents;\n            newbounds.process(bag);\n            return dirt;\n        }\n\n        clear(bag: IProcessorBag): this {\n            bag.composite.untaint(DirtyFlags.up);\n            return this;\n        }\n    }\n}","namespace puck.element.up.newbounds {\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.newbounds) || !comp.visible || (comp.opacity * 255) < 0.5)\n            return false;\n        comp.invalidate();\n        return true;\n    }\n}","/// <reference path=\"../../element/DirtyFlags\" />\n/// <reference path=\"../../element/up/Processor\" />\n/// <reference path=\"../../element/up/newbounds\" />\n\nnamespace puck.container.up {\n    import DirtyFlags = puck.element.DirtyFlags;\n    import newbounds = puck.element.up.newbounds;\n\n    export interface IProcessorBag extends element.up.IProcessorBag {\n        state: IContainerState;\n        composite: IContainerComposite;\n    }\n\n    // A container processor additionally processes bounds\n    export class Processor extends element.up.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            if (extents.process(bag))\n                dirt |= DirtyFlags.extents;\n            newbounds.process(bag);\n            if (invalidate.process(bag))\n                dirt |= DirtyFlags.invalidate;\n            return dirt;\n        }\n    }\n}","namespace puck.element.down.opacity {\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.opacity))\n            return false;\n        var newOpacity = bag.pcomposite.opacity * bag.state.opacity;\n        if (comp.opacity === newOpacity)\n            return false;\n        comp.taint(DirtyFlags.newbounds);\n        comp.opacity = newOpacity;\n        return true;\n    }\n}","namespace puck.element.down.transform {\n    import mat3 = la.mat3;\n    var oldTransform = mat3.identity();\n    \n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.transform))\n            return false;\n        mat3.copyTo(comp.transform, oldTransform);\n        var state = bag.state;\n\n        // Apply transform in coordinates of transformOrigin\n        var xo = state.mapTransformOrigin(comp);\n        mat3.createTranslate(-xo.x, -xo.y, comp.transform); //Shift into transformOrigin coordinate space\n        mat3.apply(comp.transform, state.transform);\n        mat3.translate(comp.transform, xo.x, xo.y); //Shift back out of transformOrigin coordinate space\n\n        // Adjust transform for offset\n        mat3.translate(comp.transform, state.offset.x, state.offset.y);\n\n        if (!mat3.equal(comp.transform, oldTransform)) {\n            comp.taint(DirtyFlags.extents);\n        }\n        return true;\n    }\n}","namespace puck.element.down.visible {\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.visible))\n            return false;\n        var newVisible = bag.pcomposite.visible && (bag.state.visible === true);\n        if (comp.visible === newVisible)\n            return false;\n        comp.taint(DirtyFlags.newbounds);\n        comp.visible = newVisible;\n        return true;\n    }\n}","namespace puck.element.render.narrow {\n    export function process(bag: IProcessorBag) {\n        //TODO: Render clip to prevent overpainting\n    }\n}","namespace puck.element.render.prepare {\n    export function process(bag: IProcessorBag) {\n        bag.ctx.save();\n        bag.ctx.preapply(bag.composite.transform);\n    }\n}\n","namespace puck.element.render.should {\n    import rect = la.rect;\n\n    export function process(bag: IProcessorBag): boolean {\n        var r = rect.transform(bag.composite.extents, bag.ctx.currentTransform, bag.curregion);\n        rect.roundOut(r);\n        rect.intersection(r, bag.inregion);\n        return r.width > 0 && r.height > 0;\n    }\n}","namespace puck.element.render.validate {\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        return !!comp.visible && (comp.opacity * 255) >= 0.5;\n    }\n}","namespace puck.element.up.extents {\n    import rect = la.rect;\n    var oldExtents = rect.init(0, 0, 0, 0);\n\n    export function process(bag: IProcessorBag): boolean {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.extents))\n            return false;\n        var state = bag.state;\n        rect.copyTo(comp.extents, oldExtents);\n        \n        rect.init(0, 0, state.size.width, state.size.height, comp.extents);\n        rect.grow(comp.extents, comp.padding);\n        rect.transform(comp.extents, comp.transform, comp.extents);\n\n        if (rect.equal(comp.extents, oldExtents))\n            return false;\n        rect.union(comp.paint, oldExtents);\n        comp.taint(DirtyFlags.newbounds);\n        return true;\n    }\n}","namespace puck.font.height {\n    var heights = [];\n\n    export var cache = {\n        hits: 0,\n        misses: 0\n    };\n\n    export function get(font: IFont|string): number {\n        var serial = font.toString();\n        var height = heights[serial];\n        if (height == null) {\n            heights[serial] = height = measure(serial);\n            cache.misses++;\n        } else {\n            cache.hits++;\n        }\n        return height;\n    }\n}","namespace puck.font.height {\n    var dummy: HTMLElement;\n\n    export function measure(font: IFont|string): number {\n        var serial = font.toString();\n        if (!dummy) {\n            dummy = document.createElement(\"div\");\n            dummy.appendChild(document.createTextNode(\"Hg\"));\n            document.body.appendChild(dummy);\n        }\n        dummy.style.display = \"\";\n        dummy.style.font = serial;\n        var result = dummy.offsetHeight;\n        dummy.style.display = \"none\";\n        return result;\n    }\n}","namespace puck.font.width {\n    var dummy: HTMLCanvasElement;\n\n    export function measure(font: IFont|string, text: string): number {\n        if (!dummy) {\n            dummy = document.createElement(\"canvas\");\n        }\n        var ctx = dummy.getContext(\"2d\");\n        ctx.font = font.toString();\n        return ctx.measureText(text).width;\n    }\n}","/// <reference path=\"../../element/down/Processor\" />\n\nnamespace puck.image.down {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Processor extends element.down.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            stretch.process(bag);\n            return super.process(bag);\n        }\n    }\n}","/// <reference path=\"../../Stretch.ts\" />\n\nnamespace puck.image.down.stretch {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import mat3 = la.mat3;\n    var oldStretchTransform = mat3.identity();\n\n    export function process(bag: IProcessorBag): boolean {\n        var state = <IImageState>bag.state,\n            comp = <IImageComposite>bag.composite;\n        if (!comp.hasDirt(DirtyFlags.stretch))\n            return false;\n        mat3.copyTo(comp.stretchTransform, oldStretchTransform);\n\n        puck.fit.transform.calc(comp.stretchTransform, state.getEffectiveStretch(), state.natural, state.size);\n\n        if (mat3.equal(comp.stretchTransform, oldStretchTransform))\n            return false;\n        comp.taint(DirtyFlags.extents);\n        return true;\n    }\n}","/// <reference path=\"../../element/hit/Processor\" />\n\nnamespace puck.image.hit {\n    export class Processor extends element.hit.Processor {\n        static instance = new Processor();\n\n        protected hit(el: IImage, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            // Already verified that point is within extents\n            // If image is loaded, we are hitting the image\n            return true;\n        }\n    }\n}","/// <reference path=\"../../Stretch.ts\" />\n\nnamespace puck.image.up.extents {\n    import IProcessorBag = puck.element.up.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import rect = la.rect;\n    import mat3 = la.mat3;\n    var oldExtents = rect.init(0, 0, 0, 0);\n\n    export function process(bag: IProcessorBag) {\n        var comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.extents))\n            return false;\n        var state = <IImageState>bag.state;\n        rect.copyTo(comp.extents, oldExtents);\n\n        rect.init(0, 0, 0, 0, comp.extents);\n        puck.fit.extents.calc(comp.extents, state.getEffectiveStretch(), state.natural, state.size);\n        rect.transform(comp.extents, comp.transform, comp.extents);\n\n        if (rect.equal(comp.extents, oldExtents))\n            return false;\n        rect.union(comp.paint, oldExtents);\n        comp.taint(DirtyFlags.newbounds);\n        return true;\n    }\n\n}","/// <reference path=\"../../element/up/Processor\" />\n\nnamespace puck.image.up {\n    import IProcessorBag = puck.element.up.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import newbounds = puck.element.up.newbounds;\n\n    export class Processor extends element.up.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            if (extents.process(bag))\n                dirt |= DirtyFlags.extents;\n            newbounds.process(bag);\n            return dirt;\n        }\n    }\n}","namespace puck.path.down.natural {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    var oldNatural = la.rect.init(0, 0, 0, 0);\n    var activeFill = la.rect.init(0, 0, 0, 0);\n    var activeStroke = la.rect.init(0, 0, 0, 0);\n\n    export function process(bag: IProcessorBag): boolean {\n        var state = <IPathState>bag.state,\n            comp = <IPathComposite>bag.composite;\n\n        if (!comp.hasDirt(DirtyFlags.padding))\n            return false;\n        comp.bounder.reset();\n        la.rect.copyTo(comp.natural, oldNatural);\n\n        comp.bounder.calc(state)\n            .getFillRect(activeFill)\n            .getStrokeRect(activeStroke);\n\n        la.rect.union(activeFill, activeStroke, comp.natural);\n\n        if (!la.rect.equal(comp.natural, oldNatural))\n            return false;\n        comp.taint(DirtyFlags.stretch);\n        return true;\n    }\n}","/// <reference path=\"../../element/down/Processor\" />\n\nnamespace puck.path.down {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Processor extends element.down.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            natural.process(bag);\n            stretch.process(bag);\n            return super.process(bag);\n        }\n    }\n}","namespace puck.path.down.stretch {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import IElementComposite = puck.element.IElementComposite;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import mat3 = la.mat3;\n    var oldStretchTransform = mat3.identity();\n\n    export function process(bag: IProcessorBag): boolean {\n        var state = <IPathState>bag.state,\n            comp = <IPathComposite>bag.composite;\n        if (!comp.hasDirt(DirtyFlags.stretch))\n            return false;\n        mat3.copyTo(comp.stretchTransform, oldStretchTransform);\n\n        puck.fit.transform.calc(comp.stretchTransform, state.getEffectiveStretch(comp), comp.natural, state.size);\n\n        if (mat3.equal(comp.stretchTransform, oldStretchTransform))\n            return false;\n        comp.taint(DirtyFlags.extents);\n        return true;\n    }\n\n}","/// <reference path=\"../../element/hit/Processor\" />\n\nnamespace puck.visual.hit {\n    export class Processor extends element.hit.Processor {\n        static instance = new Processor();\n\n        protected prehit(el: visual.IVisual, ctx: puck.render.RenderContext, pos: Float32Array): boolean {\n            if (!super.prehit(el, ctx, pos))\n                return false;\n            var state = el.state;\n            return !!state.fill || (!!state.stroke && state.strokeThickness > 0);\n            // TODO: can we check degenerate size?\n        }\n\n        protected hit(el: visual.IVisual, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            ctx.save();\n            this.transformLocal(el, ctx);\n            this.draw(el, ctx);\n\n            var state = el.state,\n                px = pos[0],\n                py = pos[1],\n                inside = false;\n            // TODO: fill rule?\n            if (!!state.fill && ctx.raw.isPointInPath(px, py)) {\n                inside = true;\n            } else if (!!state.stroke && ctx.isPointInStrokeEx(px, py, state.strokeThickness)) {\n                inside = true;\n            }\n\n            ctx.restore();\n            return inside;\n        }\n\n        protected transformLocal(el: element.IElement, ctx: puck.render.RenderContext) {\n        }\n    }\n}","/// <reference path=\"../../visual/hit/Processor\" />\n\nnamespace puck.path.hit {\n    export class Processor extends visual.hit.Processor {\n        static instance = new Processor();\n\n        protected hit(el: IPath, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            ctx.save();\n            this.transformLocal(el, ctx);\n            this.draw(el, ctx);\n\n            var state = el.state,\n                px = pos[0],\n                py = pos[1],\n                inside = false;\n            if (!!state.fill && ctx.raw.isPointInPath(px, py)) {\n                inside = true;\n            } else if (!!state.stroke) {\n                ctx.setStrokeExtras(state.strokeLineCap, state.strokeLineJoin, state.strokeMiterLimit);\n                if (ctx.isPointInStrokeEx(px, py, state.strokeThickness)) {\n                    inside = true;\n                }\n            }\n\n            ctx.restore();\n            return inside;\n        }\n\n        protected transformLocal(path: IPath, ctx: puck.render.RenderContext) {\n            ctx.preapply(path.composite.stretchTransform);\n        }\n    }\n}","/// <reference path=\"../../element/render/Processor\" />\n\nnamespace puck.visual.render {\n    export interface IProcessorBag extends puck.element.render.IProcessorBag {\n        stencil: stencil.IStencil;\n    }\n\n    export class Processor extends element.render.Processor {\n        static instance = new Processor();\n\n        protected render(bag: IProcessorBag): boolean {\n            var state = <IVisualState>bag.state;\n            if (!state.fill && !state.stroke)\n                return false;\n\n            var ctx = bag.ctx;\n            ctx.save();\n            var sbag = this.createStencilBag(bag);\n            bag.stencil.draft(sbag);\n            this.transformLocal(ctx, sbag);\n            bag.stencil.draw(ctx, sbag);\n            this.fill(ctx, state, sbag);\n            this.stroke(ctx, state, sbag);\n            ctx.restore();\n        }\n\n        protected transformLocal(ctx: puck.render.RenderContext, bag: stencil.IStencilBag) {\n        }\n\n        protected fill(ctx: puck.render.RenderContext, state: IVisualState, sbag: stencil.IStencilBag) {\n            if (!state.fill)\n                return;\n            ctx.fillEx(sbag.fillRect, state.fill);\n        }\n\n        protected stroke(ctx: puck.render.RenderContext, state: IVisualState, sbag: stencil.IStencilBag) {\n            if (!state.stroke || state.strokeThickness <= 0)\n                return;\n            ctx.strokeEx(sbag.strokeRect, state.stroke, state.strokeThickness);\n        }\n    }\n}","/// <reference path=\"../../visual/render/Processor\" />\n\nnamespace puck.path.render {\n    export class Processor extends visual.render.Processor {\n        static instance = new Processor();\n\n        protected transformLocal(ctx: puck.render.RenderContext, bag: stencil.IStencilBag) {\n            var comp = <IPathComposite>bag.composite;\n            ctx.preapply(comp.stretchTransform);\n        }\n\n        protected fill(ctx: puck.render.RenderContext, state: IPathState, sbag: stencil.IStencilBag) {\n            if (!state.fill)\n                return;\n            ctx.fillEx(sbag.fillRect, state.fill, state.fillRule);\n        }\n\n        protected stroke(ctx: puck.render.RenderContext, state: IPathState, sbag: stencil.IStencilBag) {\n            if (!state.stroke || state.strokeThickness <= 0)\n                return;\n            ctx.setStrokeExtras(state.strokeLineCap, state.strokeLineJoin, state.strokeMiterLimit);\n            ctx.strokeEx(sbag.strokeRect, state.stroke, state.strokeThickness);\n        }\n    }\n}","namespace puck.path.up.extents {\n    import IProcessorBag = puck.element.up.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import rect = la.rect;\n    import mat3 = la.mat3;\n    var oldExtents = rect.init(0, 0, 0, 0);\n\n    export function process(bag: IProcessorBag) {\n        var comp = <IPathComposite>bag.composite;\n        if (!comp.hasDirt(DirtyFlags.extents))\n            return false;\n        var state = <IPathState>bag.state;\n        rect.copyTo(comp.extents, oldExtents);\n\n        rect.init(0, 0, 0, 0, comp.extents);\n        puck.fit.extents.calc(comp.extents, state.getEffectiveStretch(comp), comp.natural, state.size);\n        rect.transform(comp.extents, comp.transform, comp.extents);\n\n        if (rect.equal(comp.extents, oldExtents))\n            return false;\n        rect.union(comp.paint, oldExtents);\n        comp.taint(DirtyFlags.newbounds);\n        return true;\n    }\n}","/// <reference path=\"../../element/up/Processor\" />\n\nnamespace puck.path.up {\n    import IProcessorBag = puck.element.up.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n    import newbounds = puck.element.up.newbounds;\n\n    export class Processor extends element.up.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            if (extents.process(bag))\n                dirt |= DirtyFlags.extents;\n            newbounds.process(bag);\n            return dirt;\n        }\n    }\n}","interface CanvasRenderingContext2D {\r\n    backingStorePixelRatio: number;\r\n}\r\nif (!CanvasRenderingContext2D.prototype.hasOwnProperty(\"backingStorePixelRatio\")) {\r\n    Object.defineProperty(CanvasRenderingContext2D.prototype, \"backingStorePixelRatio\", {\r\n        get: function (): number {\r\n            var ctx = <any>this;\r\n            return ctx.webkitBackingStorePixelRatio\r\n                || ctx.mozBackingStorePixelRatio\r\n                || ctx.msBackingStorePixelRatio\r\n                || ctx.oBackingStorePixelRatio\r\n                || 1;\r\n        }\r\n    });\r\n}","interface CanvasRenderingContext2D {\r\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, antiClockwise?: boolean);\r\n}\r\nif (!CanvasRenderingContext2D.prototype.ellipse) {\r\n    CanvasRenderingContext2D.prototype.ellipse = function (x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, antiClockwise: boolean) {\r\n        this.save();\r\n        this.translate(x, y);\r\n        this.rotate(rotation);\r\n        this.scale(radiusX, radiusY);\r\n        this.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\r\n        this.restore();\r\n    };\r\n}","interface CanvasRenderingContext2D {\r\n    isPointInStroke(x: number, y: number): boolean;\r\n}\r\nif (!CanvasRenderingContext2D.prototype.isPointInStroke) {\r\n    CanvasRenderingContext2D.prototype.isPointInStroke = function (x: number, y: number) {\r\n        return false;\r\n    };\r\n}","namespace puck.polyline.down.points {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import IPathComposite = puck.path.IPathComposite;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export function process(bag: IProcessorBag): boolean {\n        var state = <IPolylineState>bag.state,\n            comp = <IPathComposite>bag.composite,\n            path = state.path;\n\n        if (!path) {\n            comp.bounder.setPath(path = state.path = new curve.Path());\n        } else if (!path.isEmpty) {\n            return false;\n        }\n\n        for (var first = true, it = state.points.iter(), result = it.next(); !result.done; result = it.next()) {\n            let cur = result.value;\n            if (first) {\n                first = false;\n                path.moveTo(cur.x, cur.y);\n            } else {\n                path.lineTo(cur.x, cur.y);\n            }\n        }\n        if (state.closed)\n            path.closePath();\n\n        comp.taint(DirtyFlags.padding); // force recalculation of natural bounds\n        return true;\n    }\n}","/// <reference path=\"../../path/down/Processor\" />\n\nnamespace puck.polyline.down {\n    import IProcessorBag = puck.element.down.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export class Processor extends path.down.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            points.process(bag);\n            return super.process(bag);\n        }\n    }\n}","/// <reference path=\"../../element/hit/Processor\" />\n\nnamespace puck.text.hit {\n    export class Processor extends element.hit.Processor {\n        static instance = new Processor();\n\n        protected prehit(el: text.IText, ctx: puck.render.RenderContext, pos: Float32Array): boolean {\n            if (!super.prehit(el, ctx, pos))\n                return false;\n            var state = el.state;\n            return !!state.fill || (!!state.stroke && state.strokeThickness > 0);\n        }\n\n        protected hit(el: text.IText, ctx: puck.render.RenderContext, pos: Float32Array, hitlist: element.IElement[]): boolean {\n            // Already verified that point is within extents\n            return true;\n        }\n    }\n}","/// <reference path=\"../../element/render/Processor\" />\n\nnamespace puck.text.render {\n    import IProcessorBag = puck.element.render.IProcessorBag;\n    var isFirefox = /firefox/i.test(navigator.userAgent);\n    var paintRegion = la.rect.init(0, 0, 0, 0);\n\n    export class Processor extends element.render.Processor {\n        static instance = new Processor();\n\n        protected render(bag: IProcessorBag): boolean {\n            var state = <ITextState>bag.state,\n                noStroke = !state.stroke || state.strokeThickness <= 0;\n            if (!state.fill && noStroke)\n                return false;\n\n            var ctx = bag.ctx,\n                raw = ctx.raw,\n                comp = bag.composite;\n            ctx.save();\n            raw.beginPath();\n            raw.font = state.font.toString();\n            raw.textAlign = \"left\";\n            paintRegion.width = comp.extents.width;\n            paintRegion.height = comp.extents.height;\n            if (state.fill)\n                this.fill(raw, state, paintRegion);\n            if (!noStroke)\n                this.stroke(raw, state, paintRegion);\n            ctx.restore();\n        }\n\n        protected fill(ctx: CanvasRenderingContext2D, state: ITextState, region: la.IRect) {\n            state.fill.setup(ctx, region);\n            ctx.fillStyle = state.fill.toHtml5Object();\n\n            if (isFirefox) {\n                ctx.textBaseline = \"bottom\";\n                ctx.fillText(state.text, 0, state.size.height);\n            } else {\n                ctx.textBaseline = \"top\";\n                ctx.fillText(state.text, 0, 0);\n            }\n        }\n\n        protected stroke(ctx: CanvasRenderingContext2D, state: ITextState, region: la.IRect) {\n            state.stroke.setup(ctx, region);\n            ctx.strokeStyle = state.stroke.toHtml5Object();\n\n            ctx.lineWidth = state.strokeThickness;\n            if (isFirefox) {\n                ctx.textBaseline = \"bottom\";\n                ctx.strokeText(state.text, 0, state.size.height);\n            } else {\n                ctx.textBaseline = \"top\";\n                ctx.strokeText(state.text, 0, 0);\n            }\n        }\n    }\n}","namespace puck.text.up.font {\n    import IProcessorBag = puck.element.up.IProcessorBag;\n    import DirtyFlags = puck.element.DirtyFlags;\n\n    export function process(bag: IProcessorBag): boolean {\n        var state = <ITextState>bag.state,\n            comp = bag.composite;\n        if (!comp.hasDirt(DirtyFlags.font))\n            return false;\n\n        var size = state.size,\n            oldWidth = size.width,\n            oldHeight = size.height;\n        size.width = puck.font.width.measure(state.font, state.text);\n        size.height = puck.font.height.get(state.font);\n\n        if (oldWidth !== size.width || oldHeight !== size.height) {\n            comp.taint(DirtyFlags.extents);\n            return true;\n        }\n        return false;\n    }\n}","/// <reference path=\"../../element/up/Processor\" />\n\nnamespace puck.text.up {\n    import DirtyFlags = puck.element.DirtyFlags;\n    import IProcessorBag = puck.element.up.IProcessorBag;\n\n    export class Processor extends element.up.Processor {\n        static instance = new Processor();\n\n        process(bag: IProcessorBag): DirtyFlags {\n            var dirt = DirtyFlags.none;\n            font.process(bag);\n            dirt |= super.process(bag);\n            return dirt;\n        }\n    }\n}"],"sourceRoot":"/source/"}