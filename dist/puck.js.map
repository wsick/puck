{"version":3,"sources":["mat3.ts","vec2.ts"],"names":["puck","puck.mat3","puck.mat3.create","puck.mat3.copyTo","puck.mat3.init","puck.mat3.identity","puck.mat3.equal","puck.mat3.multiply","puck.mat3.inverse","puck.mat3.transformVec2","puck.mat3.createTranslate","puck.mat3.translate","puck.mat3.createScale","puck.mat3.scale","puck.mat3.createRotate","puck.mat3.createSkew","puck.mat3.preapply","puck.mat3.apply","puck.mat3.simple_inverse","puck.mat3.complex_inverse","puck.vec2","puck.vec2.create","puck.vec2.init","puck.vec2.clone","puck.vec2.reverse","puck.vec2.orthogonal","puck.vec2.normalize","puck.vec2.rotate","puck.vec2.angleBetween","puck.vec2.isClockwiseTo","puck.vec2.intersection"],"mappings":"AAAA,IAAU,IAAI,CAqOb;AArOD,WAAU,IAAI;IAACA,IAAAA,IAAIA,CAqOlBA;IArOcA,WAAAA,IAAIA,EAACA,CAACA;QAIjBC,IAAIA,aAAaA,GAAGA,QAAQA,CAACA;QAE7BA,gBAAuBA,GAA2BA;YAC9CC,IAAIA,IAAIA,GAAGA,IAAIA,YAAYA,CAACA,CAACA,CAACA,CAACA;YAE/BA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;gBACNA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACrBA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACJA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YAClEA,CAACA;YAEDA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAfeD,WAAMA,SAerBA,CAAAA;QAEDA,gBAAuBA,GAAiBA,EAAEA,IAAkBA;YACxDE,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACjBA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAReF,WAAMA,SAQrBA,CAAAA;QAEDA,cAAqBA,IAAkBA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,GAAWA,EAAEA,EAAUA,EAAEA,EAAUA;YAC/GG,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA;YACdA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAReH,SAAIA,OAQnBA,CAAAA;QAEDA,kBAAyBA,IAAmBA;YACxCI,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeJ,aAAQA,WASvBA,CAAAA;QAEDA,eAAsBA,CAAeA,EAAEA,CAAeA;YAClDK,MAAMA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CACVA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA;gBACrCA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA;gBACrCA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA;gBACrCA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA;gBACrCA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA;gBACrCA,IAAIA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA,CACxCA,CAACA;QACVA,CAACA;QATeL,UAAKA,QASpBA,CAAAA;QAEDA,kBAAyBA,CAAeA,EAAEA,CAAeA,EAAEA,IAAmBA;YAC1EM,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,CAACA,CAACA;YACpBA,IAAIA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EACtBA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,EAAEA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;YAE3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YAChCA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YAEhCA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YAChCA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YAEhCA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YACtCA,IAAIA,CAACA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;YAEtCA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAnBeN,aAAQA,WAmBvBA,CAAAA;QAEDA,iBAAwBA,GAAiBA,EAAEA,IAAmBA;YAC1DO,EAAEA,CAACA,CAACA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA,IAAIA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,GAAGA,aAAaA,CAACA;gBACrEA,MAAMA,CAACA,cAAcA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,CAACA;YACrCA,IAAIA;gBACAA,MAAMA,CAACA,eAAeA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,CAACA;QAC1CA,CAACA;QALeP,YAAOA,UAKtBA,CAAAA;QAEDA,uBAA8BA,GAAiBA,EAAEA,GAAiBA,EAAEA,IAAmBA;YACnFQ,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,GAAGA,CAACA;YACtBA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,EACVA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACfA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YAC/CA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,CAACA,CAACA;YAC/CA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAPeR,kBAAaA,gBAO5BA,CAAAA;QAEDA,yBAAgCA,CAASA,EAAEA,CAASA,EAAEA,IAAmBA;YACrES,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeT,oBAAeA,kBAS9BA,CAAAA;QAEDA,mBAA0BA,GAAiBA,EAAEA,CAASA,EAAEA,CAASA;YAC7DU,GAAGA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA;YACZA,GAAGA,CAACA,CAACA,CAACA,IAAIA,CAACA,CAACA;YACZA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QAJeV,cAASA,YAIxBA,CAAAA;QAEDA,qBAA4BA,EAAUA,EAAEA,EAAUA,EAAEA,IAAmBA;YACnEW,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATeX,gBAAWA,cAS1BA,CAAAA;QAEDA,eAAsBA,GAAiBA,EAAEA,EAAUA,EAAEA,EAAUA;YAC3DY,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YAEbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,GAAGA,CAACA,CAACA,CAACA,IAAIA,EAAEA,CAACA;YACbA,MAAMA,CAACA,GAAGA,CAACA;QACfA,CAACA;QATeZ,UAAKA,QASpBA,CAAAA;QAEDA,sBAA6BA,QAAgBA,EAAEA,IAAmBA;YAC9Da,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAACA;YAC3BA,IAAIA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,QAAQA,CAACA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACbA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QAXeb,iBAAYA,eAW3BA,CAAAA;QAEDA,oBAA2BA,SAAiBA,EAAEA,SAAiBA,EAAEA,IAAmBA;YAChFc,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA;gBAACA,IAAIA,GAAGA,MAAMA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,SAASA,CAACA,CAACA;YAC9BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,SAASA,CAACA,CAACA;YAC9BA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,IAAIA,CAACA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACZA,MAAMA,CAACA,IAAIA,CAACA;QAChBA,CAACA;QATed,eAAUA,aASzBA,CAAAA;QAEDA,kBAAyBA,IAAkBA,EAAEA,GAAiBA;YAC1De,MAAMA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;QACrCA,CAACA;QAFef,aAAQA,WAEvBA,CAAAA;QAEDA,eAAsBA,IAAkBA,EAAEA,GAAiBA;YACvDgB,MAAMA,CAACA,QAAQA,CAACA,IAAIA,EAAEA,GAAGA,EAAEA,IAAIA,CAACA,CAACA;QACrCA,C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","file":"puck.js","sourcesContent":["namespace puck.mat3 {\n    /// NOTE:\n    ///     Row-major order\n    ///     [m11, m12, m21, m22, x0, y0]\n    var FLOAT_EPSILON = 0.000001;\n\n    export function create(src?: number[]|Float32Array): Float32Array {\n        var dest = new Float32Array(6);\n\n        if (src) {\n            dest[0] = src[0];\n            dest[1] = src[1];\n            dest[2] = src[2];\n            dest[3] = src[3];\n            dest[4] = src[4];\n            dest[5] = src[5];\n        } else {\n            dest[0] = dest[1] = dest[2] = dest[3] = dest[4] = dest[5] = 0;\n        }\n\n        return dest;\n    }\n\n    export function copyTo(src: Float32Array, dest: Float32Array): Float32Array {\n        dest[0] = src[0];\n        dest[1] = src[1];\n        dest[2] = src[2];\n        dest[3] = src[3];\n        dest[4] = src[4];\n        dest[5] = src[5];\n        return dest;\n    }\n\n    export function init(dest: Float32Array, m11: number, m12: number, m21: number, m22: number, x0: number, y0: number): Float32Array {\n        dest[0] = m11;\n        dest[1] = m12;\n        dest[2] = m21;\n        dest[3] = m22;\n        dest[4] = x0;\n        dest[5] = y0;\n        return dest;\n    }\n\n    export function identity(dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = 1;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function equal(a: Float32Array, b: Float32Array): boolean {\n        return a === b || (\n                Math.abs(a[0] - b[0]) < FLOAT_EPSILON &&\n                Math.abs(a[1] - b[1]) < FLOAT_EPSILON &&\n                Math.abs(a[2] - b[2]) < FLOAT_EPSILON &&\n                Math.abs(a[3] - b[3]) < FLOAT_EPSILON &&\n                Math.abs(a[4] - b[4]) < FLOAT_EPSILON &&\n                Math.abs(a[5] - b[5]) < FLOAT_EPSILON\n            );\n    }\n\n    export function multiply(a: Float32Array, b: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = a;\n        var a11 = a[0], a12 = a[1],\n            a21 = a[2], a22 = a[3],\n            ax0 = a[4], ay0 = a[5],\n            b11 = b[0], b12 = b[1],\n            b21 = b[2], b22 = b[3],\n            bx0 = b[4], by0 = b[5];\n\n        dest[0] = a11 * b11 + a12 * b21;\n        dest[1] = a11 * b12 + a12 * b22;\n\n        dest[2] = a21 * b11 + a22 * b21;\n        dest[3] = a21 * b12 + a22 * b22;\n\n        dest[4] = ax0 * b11 + ay0 * b21 + bx0;\n        dest[5] = ax0 * b12 + ay0 * b22 + by0;\n\n        return dest;\n    }\n\n    export function inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        if (Math.abs(mat[1]) < FLOAT_EPSILON && Math.abs(mat[2]) < FLOAT_EPSILON) //Simple scaling/translation matrix\n            return simple_inverse(mat, dest);\n        else\n            return complex_inverse(mat, dest);\n    }\n\n    export function transformVec2(mat: Float32Array, vec: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = vec;\n        var x = vec[0],\n            y = vec[1];\n        dest[0] = (mat[0] * x) + (mat[2] * y) + mat[4];\n        dest[1] = (mat[1] * x) + (mat[3] * y) + mat[5];\n        return dest;\n    }\n\n    export function createTranslate(x: number, y: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = 1;\n        dest[4] = x;\n        dest[5] = y;\n        return dest;\n    }\n\n    export function translate(mat: Float32Array, x: number, y: number): Float32Array {\n        mat[4] += x;\n        mat[5] += y;\n        return mat;\n    }\n\n    export function createScale(sx: number, sy: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = sx;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = sy;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function scale(mat: Float32Array, sx: number, sy: number): Float32Array {\n        mat[0] *= sx;\n        mat[2] *= sx;\n        mat[4] *= sx;\n\n        mat[1] *= sy;\n        mat[3] *= sy;\n        mat[5] *= sy;\n        return mat;\n    }\n\n    export function createRotate(angleRad: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        var c = Math.cos(angleRad);\n        var s = Math.sin(angleRad);\n        dest[0] = c;\n        dest[1] = s;\n        dest[2] = -s;\n        dest[3] = c;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function createSkew(angleRadX: number, angleRadY: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = create();\n        dest[0] = 1;\n        dest[1] = Math.tan(angleRadY);\n        dest[2] = Math.tan(angleRadX);\n        dest[3] = 1;\n        dest[4] = 0;\n        dest[5] = 0;\n        return dest;\n    }\n\n    export function preapply(dest: Float32Array, mat: Float32Array): Float32Array {\n        return multiply(mat, dest, dest);\n    }\n\n    export function apply(dest: Float32Array, mat: Float32Array): Float32Array {\n        return multiply(dest, mat, dest);\n    }\n\n    function simple_inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        var m11 = mat[0];\n        if (Math.abs(m11) < FLOAT_EPSILON)\n            return null;\n\n        var m22 = mat[3];\n        if (Math.abs(m22) < FLOAT_EPSILON)\n            return null;\n\n        if (!dest) {\n            dest = mat;\n        } else {\n            dest[1] = mat[1];\n            dest[2] = mat[2];\n        }\n\n        var x0 = -mat[4];\n        var y0 = -mat[5];\n        if (Math.abs(m11 - 1) > FLOAT_EPSILON) {\n            m11 = 1 / m11;\n            x0 *= m11;\n        }\n        if (Math.abs(m22 - 1) > FLOAT_EPSILON) {\n            m22 = 1 / m22;\n            y0 *= m22;\n        }\n\n        dest[0] = m11;\n        dest[3] = m22;\n        dest[4] = x0;\n        dest[5] = y0;\n        return dest;\n    }\n\n    function complex_inverse(mat: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = mat;\n\n        var m11 = mat[0], m12 = mat[1],\n            m21 = mat[2], m22 = mat[3];\n\n        //inv(A) = 1/det(A) * adj(A)\n        var det = m11 * m22 - m12 * m21;\n        if (det === 0 || !isFinite(det))\n            return null;\n        var id = 1 / det;\n\n        var x0 = mat[4], y0 = mat[5];\n\n        dest[0] = m22 * id;\n        dest[1] = -m12 * id;\n        dest[2] = -m21 * id;\n        dest[3] = m11 * id;\n        dest[4] = (m21 * y0 - m22 * x0) * id;\n        dest[5] = (m12 * x0 - m11 * y0) * id;\n        return dest;\n    }\n}","namespace puck.vec2 {\n    var EPSILON = 1e-10;\n\n    export function create(x: number, y: number): Float32Array {\n        var dest = new Float32Array(2);\n        dest[0] = x;\n        dest[1] = y;\n        return dest;\n    }\n\n    export function init(x: number, y: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = new Float32Array(2);\n        dest[0] = x;\n        dest[1] = y;\n        return dest;\n    }\n\n    export function clone(src: Float32Array, dest?: Float32Array): Float32Array {\n        return init(src[0], src[1], dest);\n    }\n\n    export function reverse(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        dest[0] = -src[0];\n        dest[1] = -src[1];\n        return dest;\n    }\n\n    /// Equivalent of rotating 90 degrees clockwise (screen space)\n    export function orthogonal(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var x = src[0],\n            y = src[1];\n        dest[0] = -y;\n        dest[1] = x;\n        return dest;\n    }\n\n    export function normalize(src: Float32Array, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var x = src[0],\n            y = src[1];\n        var len = Math.sqrt(x * x + y * y);\n        dest[0] = x / len;\n        dest[1] = y / len;\n        return dest;\n    }\n\n    /// Rotates a vector(v) by angle(theta) clockwise(screen space) ...which is counter-clockwise in coordinate space\n    export function rotate(src: Float32Array, theta: number, dest?: Float32Array): Float32Array {\n        if (!dest) dest = src;\n        var c = Math.cos(theta);\n        var s = Math.sin(theta);\n        var x = src[0];\n        var y = src[1];\n        dest[0] = x * c - y * s;\n        dest[1] = x * s + y * c;\n        return dest;\n    }\n\n    /// Returns smallest angle (in radians) between 2 vectors\n    export function angleBetween(u: Float32Array, v: Float32Array): number {\n        var ux = u[0],\n            uy = u[1],\n            vx = v[0],\n            vy = v[1];\n        var num = ux * vx + uy * vy;\n        var den = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n        return Math.acos(num / den);\n    }\n\n    /// By rotating from vector(v1) to vector(v2), tests whether that angle is clockwise (screen space)\n    export function isClockwiseTo(v1: Float32Array, v2: Float32Array) {\n        var theta = angleBetween(v1, v2);\n        var nv1 = normalize(clone(v1));\n        var nv2 = normalize(clone(v2));\n        rotate(nv1, theta);\n        var nx = Math.abs(nv1[0] - nv2[0]);\n        var ny = Math.abs(nv1[1] - nv2[1]);\n        return nx < EPSILON\n            && ny < EPSILON;\n    }\n\n    /// Finds intersection of v1(s1 + t(d1)) and v2(s2 + t(d2))\n    export function intersection(s1: Float32Array, d1: Float32Array, s2: Float32Array, d2: Float32Array): Float32Array {\n        var x1 = s1[0];\n        var y1 = s1[1];\n        var x2 = x1 + d1[0];\n        var y2 = y1 + d1[1];\n\n        var x3 = s2[0];\n        var y3 = s2[1];\n        var x4 = x3 + d2[0];\n        var y4 = y3 + d2[1];\n\n        var det = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n        if (det === 0)\n            return null;\n\n        var xn = ((x1 * y2 - y1 * x2) * (x3 - x4)) - ((x1 - x2) * (x3 * y4 - y3 * x4));\n        var yn = ((x1 * y2 - y1 * x2) * (y3 - y4)) - ((y1 - y2) * (x3 * y4 - y3 * x4));\n        return vec2.create(xn / det, yn / det);\n    }\n}"],"sourceRoot":"/source/"}